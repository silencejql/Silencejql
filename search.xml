<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo Markdown</title>
    <url>/Hexo%20Markdown.html</url>
    <content><![CDATA[<h2 id="Hexo指令"><a href="#Hexo指令" class="headerlink" title="Hexo指令"></a>Hexo指令</h2><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new 布局 &quot;文章名&quot;</span><br><span class="line">$ hexo clean //清除静态页面缓存（清除 public 文件夹)         </span><br><span class="line">$ hexo g     //在本地生成静态页面（生成 public 文件夹）        </span><br><span class="line">$ hexo s     //启动本地服务 http://localhost:4000，进行预览调试           </span><br><span class="line">$ hexo d     //远程部署，同步到 GitHub         </span><br><span class="line"></span><br><span class="line">$ npm install hexo-deployer-git --save    //自动部署</span><br><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d          //发布</span><br></pre></td></tr></table></figure>

<h2 id="Markdown格式"><a href="#Markdown格式" class="headerlink" title="Markdown格式"></a>Markdown格式</h2><h3 id="首行缩进"><a href="#首行缩进" class="headerlink" title="首行缩进"></a>首行缩进</h3><pre><code>&amp;ensp; //相当于1个空格  
&amp;emsp; //相当于2个空格，1个汉字  </code></pre><p>分段: 两个回车<br>换行: 两个空格 + 回车<br>标题: # ~ ######，#号的个数表示几级标题，即表示一级标题到六级标题</p>
<h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*斜体* | **加粗** | ***斜体加粗***  </span><br><span class="line">_斜体_ | __加粗__ | ___斜体加粗___  </span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure>

<p>引用: &gt; 注意后面紧跟个空格</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 以下为引用效果</span><br><span class="line">继续引用</span><br><span class="line">&gt; &gt;二级引用</span><br></pre></td></tr></table></figure>

<blockquote>
<p>以下为引用效果<br>继续引用</p>
<blockquote>
<p>二级引用</p>
</blockquote>
</blockquote>
<p>表格: - 和 | 分割行和列 ， : 控制对齐方式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| 0 | 1 | 2|</span><br><span class="line">| :- | -: | :-: |</span><br><span class="line">| 0 | 1 | 2 |</span><br><span class="line">| 0 | 1 | 2 |</span><br><span class="line">| 0 | 1 | 2 |</span><br></pre></td></tr></table></figure>

<p>0 | 1 | 2<br>| :- | -: | :-: |<br>| 0 | 1 | 2 |<br>| 0 | 1 | 2 |<br>| 0 | 1 | 2 |</p>
<p>代码块: 四个空格开头或三个<code>链接:</code><a href="链接地址">文字</a><code>邮件链接：</code><a href="mailto:xxx@xx.com.cn" target="_blank" rel="noopener">xxx</a>`
图片: ![图片说明](图片地址)，地址可以是本地路径，也可以是网络地址<br>列表: * ， + ， - ， 1. ，选其中之一，注意后面紧跟个空格</p>
<h3 id="设置字体段落格式"><a href="#设置字体段落格式" class="headerlink" title="设置字体段落格式"></a>设置字体段落格式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;center&gt;居中&lt;/center&gt;</span><br><span class="line">&lt;font color=&quot;#FF0000&quot;&gt; 设置颜色 &lt;/font&gt;  </span><br><span class="line">&lt;font size=6&gt; 设置大小 &lt;/font&gt;</span><br><span class="line">&lt;font size=5 color=&quot;#FF0000&quot;&gt; 设置颜色和大小&lt;/font&gt;</span><br></pre></td></tr></table></figure>

<center>居中</center>

<p><font color="#FF0000"> 设置颜色 </font><br><font size="6"> 设置大小 </font><br><font size="5" color="#FF0000"> 设置颜色和大小</font></p>
<h3 id="引用站内文章"><a href="#引用站内文章" class="headerlink" title="引用站内文章"></a>引用站内文章</h3><p>在写文章的过程中，有时候需要引用站内的其他文章。可以通过内置的标签插件的语法post_link来实现引用。<br><code></code></p>
<h2 id="Hexo主题设计"><a href="#Hexo主题设计" class="headerlink" title="Hexo主题设计"></a>Hexo主题设计</h2><h3 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h3><p>头像配置文件位于：主题配置文件中的 avatar下</p>
<h3 id="版权信息"><a href="#版权信息" class="headerlink" title="版权信息"></a>版权信息</h3><p>版权信息的配置文件位于：next\layout\_macro\my-copyright中</p>
<h3 id="添加文章密码"><a href="#添加文章密码" class="headerlink" title="添加文章密码"></a>添加文章密码</h3><h4 id="方法一-测试可用"><a href="#方法一-测试可用" class="headerlink" title="方法一(测试可用)"></a>方法一(测试可用)</h4><h5 id="安装hexo-blog-encrypt"><a href="#安装hexo-blog-encrypt" class="headerlink" title="安装hexo-blog-encrypt"></a>安装hexo-blog-encrypt</h5><p>根目录的package.json文件夹中添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;hexo-blog-encrypt&quot;: &quot;2.0.*&quot;</span><br></pre></td></tr></table></figure>

<p>然后在命令行输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>根目录下的_config.yml文件中添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Security</span><br><span class="line">encrypt:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure>

<h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><p>在需要加密的文章头部写入password：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">password: abc123</span><br><span class="line">abstract: Welcome to my blog, enter password to read.</span><br><span class="line">message: Welcome to my blog, enter password to read.</span><br></pre></td></tr></table></figure>

<h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>在 themes-&gt;next-&gt;layout-&gt;\_partials-&gt;head.swig 中添加下面内容</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (prompt(<span class="string">'请输入文章密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">                alert(<span class="string">'密码错误,交钱还是跑路？'</span>);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后在文章头部加入password。</p>
<h3 id="添加边栏背景图"><a href="#添加边栏背景图" class="headerlink" title="添加边栏背景图"></a>添加边栏背景图</h3><p>在  themes\next\source\css\_custom\custom.styl文件中<br>添加</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">.sidebar &#123;</span><br><span class="line"> background: url([https:<span class="comment">//ws2.sinaimg.cn/large/006tKfTcly1fq2wrm6g3cj309i0hq749.jpg](https://ws2.sinaimg.cn/large/006tKfTcly1fq2wrm6g3cj309i0hq749.jpg "https://ws2.sinaimg.cn/large/006tKfTcly1fq2wrm6g3cj309i0hq749.jpg")) no-repeat !important;</span></span><br><span class="line"> background-size: cover !important;</span><br><span class="line"> position: fixed !important;</span><br><span class="line"> right: <span class="number">0</span> !important;</span><br><span class="line"> top: <span class="number">0</span> !important;</span><br><span class="line"> bottom: <span class="number">0</span> !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="网易云音乐插件"><a href="#网易云音乐插件" class="headerlink" title="网易云音乐插件"></a>网易云音乐插件</h3><p>主题文件夹<br><code>layout\\\_custom\\sidebar.swig</code></p>
<h3 id="Warning-LF-will-be-replaced-by-CRLF"><a href="#Warning-LF-will-be-replaced-by-CRLF" class="headerlink" title="Warning: LF will be replaced by CRLF"></a>Warning: LF will be replaced by CRLF</h3><p><code>git config --global core.autocrlf false //禁用自动转换</code></p>
<h3 id="更改文章全局属性-标题"><a href="#更改文章全局属性-标题" class="headerlink" title="更改文章全局属性(标题)"></a>更改文章全局属性(标题)</h3><p><code>D:\GitProject\FirstHexo\themes\next\source\css\_common\components\post\post.styl</code></p>
<h3 id="文章模板"><a href="#文章模板" class="headerlink" title="文章模板"></a>文章模板</h3><p>在新建文章时，Hexo 会根据 scaffolds 文件夹内相对应的文件来建立文件，例如：hexo new photo “My Gallery”，在执行这行指令时，Hexo 会尝试在 scaffolds 文件夹中寻找 photo.md模板，并根据其内容建立文章，默认使用_config.yml 中的 default_layout 参数post代替</p>
<h3 id="网页折叠"><a href="#网页折叠" class="headerlink" title="网页折叠"></a>网页折叠</h3><h4 id="更改post-details-js"><a href="#更改post-details-js" class="headerlink" title="更改post-details.js"></a>更改post-details.js</h4><p>文件目录：themes/next/source/js/src/post-details.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="built_in">document</span>).on(<span class="string">'click'</span>, <span class="string">'.fold_hider'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="string">'&gt;.fold'</span>, <span class="keyword">this</span>.parentNode).slideToggle();</span><br><span class="line">        $(<span class="string">'&gt;:first'</span>, <span class="keyword">this</span>).toggleClass(<span class="string">'open'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//默认情况下折叠</span></span><br><span class="line">    $(<span class="string">"div.fold"</span>).css(<span class="string">"display"</span>,<span class="string">"none"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h4 id="更改tags-js"><a href="#更改tags-js" class="headerlink" title="更改tags.js"></a>更改tags.js</h4><p>文件目录：themes/next/scripts/tags.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  @haohuawu</span></span><br><span class="line"><span class="comment">  修复 Nunjucks 的 tag 里写 ```代码块```，最终都会渲染成 undefined 的问题</span></span><br><span class="line"><span class="comment">  https://github.com/hexojs/hexo/issues/2400</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> rEscapeContent = <span class="regexp">/&lt;escape(?:[^&gt;]*)&gt;([\s\S]*?)&lt;\/escape&gt;/g</span>;</span><br><span class="line"><span class="keyword">const</span> placeholder = <span class="string">'\uFFFD'</span>;</span><br><span class="line"><span class="keyword">const</span> rPlaceholder = <span class="regexp">/(?:&lt;|&amp;lt;)\!--\uFFFD(\d+)--(?:&gt;|&amp;gt;)/g</span>;</span><br><span class="line"><span class="keyword">const</span> cache = [];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escapeContent</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'&lt;!--'</span> + placeholder + (cache.push(str) - <span class="number">1</span>) + <span class="string">'--&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">hexo.extend.filter.register(<span class="string">'before_post_render'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">  data.content = data.content.replace(rEscapeContent, <span class="function"><span class="keyword">function</span>(<span class="params">match, content</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> escapeContent(content);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;);</span><br><span class="line">hexo.extend.filter.register(<span class="string">'after_post_render'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">  data.content = data.content.replace(rPlaceholder, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> cache[<span class="built_in">arguments</span>[<span class="number">1</span>]];</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h4 id="scripts中增加fold-js"><a href="#scripts中增加fold-js" class="headerlink" title="scripts中增加fold.js"></a>scripts中增加fold.js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* global hexo */</span></span><br><span class="line"><span class="comment">// Usage: &#123;% fold ???? %&#125; Something &#123;% endfold %&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fold</span> (<span class="params">args, content</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> text = args[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span>(!text) text = <span class="string">"点击显/隐"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;div&gt;&lt;div class="fold_hider"&gt;&lt;div class="close hider_title"&gt;'</span> + text + <span class="string">'&lt;/div&gt;&lt;/div&gt;&lt;div class="fold"&gt;\n'</span> + hexo.render.renderSync(&#123;<span class="attr">text</span>: content, <span class="attr">engine</span>: <span class="string">'markdown'</span>&#125;) + <span class="string">'\n&lt;/div&gt;&lt;/div&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">hexo.extend.tag.register(<span class="string">'fold'</span>, fold, &#123;<span class="attr">ends</span>: <span class="literal">true</span>&#125;);</span><br></pre></td></tr></table></figure>

<h4 id="添加样式custom-styl"><a href="#添加样式custom-styl" class="headerlink" title="添加样式custom.styl"></a>添加样式custom.styl</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">.hider_title&#123;</span><br><span class="line">    font-family: <span class="string">"Microsoft Yahei"</span>;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">.close:after&#123;</span><br><span class="line">    content: <span class="string">"▼"</span>;</span><br><span class="line">&#125;</span><br><span class="line">.open:after&#123;</span><br><span class="line">    content: <span class="string">"▲"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% fold 折叠提示 %&#125;</span><br><span class="line">something you want to fold, include code block.</span><br><span class="line">&#123;% endfold %&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>主题</tag>
        <tag>文章密码</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Test Project</title>
    <url>/Test%20Project.html</url>
    <content><![CDATA[<h3 id="Test-File"><a href="#Test-File" class="headerlink" title="Test File"></a>Test File</h3><p>this is my first Hexo text file</p>
]]></content>
      <categories>
        <category>Test</category>
      </categories>
      <tags>
        <tag>Test</tag>
      </tags>
  </entry>
  <entry>
    <title>碎碎念</title>
    <url>/%E7%A2%8E%E7%A2%8E%E5%BF%B5.html</url>
    <content><![CDATA[<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="Enter password to read！" />
    <label for="pass">Enter password to read！</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
U2FsdGVkX1+1+eAfYgz3L7G0OEHzvyy4LF0HekTfE7XdYXwXg+Ss8aL8zYd30tVclpBFIUfL585HsvMIYMG7MWjvX11JJ7heuTlXMol5U8YZu3BHr5Wdp5+TgrlhSGR8WyqZ7YH8BN4WUMZBrWidItRG83Ewe3C8tWBrA4OBrAoGqt4rfqK4YUWV+RijxWRVFxVZBj7rm/zUxSnn4WRcq5lMzYxbyS08R4bUvzMTPWex2UfwnQ1Phkq4ux4Va6z5tUpzpyzAa8IbkRS0T7KTlryP08Jd9JdNFyutuUrdFBdg0gA/hU/sFG5acuXNnbtaNqgx1r96Ue1XxRldKn8gJaSk6LQsaJkwa6oh4P3KGAUtO5DXNFM47jepVupYuy9FK6epvsi719OWSXSqI12NWwpEpXxvfcg9Ohjb6ThcnRd69fM3RXSP0AxC9+S7KedQQIT7wGigY7TSXZG7INca7ehYrjYPnRTnSn8o1RfP8DBmzbhY3e9Etzc04RoNaK3hy0IC2lcc4+Dy0/UPAIGC2w==
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>碎碎念</category>
      </categories>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title>委托-匿名-Lambda表达式</title>
    <url>/%E5%A7%94%E6%89%98-%E5%8C%BF%E5%90%8D-Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F.html</url>
    <content><![CDATA[<h2 id="概括"><a href="#概括" class="headerlink" title="概括"></a>概括</h2><p>数值可以赋值的类型是变量<br>方法可以赋值的类型是委托</p>
<p>C#中委托通过返回类型，参数类型进行分类，微软提供Action和Func两个泛型委托免去声明委托的步骤<br>提供lambda表达式免去声明函数体的步骤</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Do</span>(<span class="params">Action doSth</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    doSth();</span><br><span class="line">&#125;</span><br><span class="line">Do(()=&gt;Console.Write(AddResult));</span><br></pre></td></tr></table></figure>

<h3 id="委托"><a href="#委托" class="headerlink" title="委托"></a>委托</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">delegate</span> <span class="keyword">int</span> <span class="title">calculator</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">int</span> y</span>)</span>; <span class="comment">//委托类型</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    calculator <span class="keyword">add</span> = <span class="keyword">new</span> calculator(Addition);</span><br><span class="line">    <span class="keyword">int</span> AddResult = <span class="keyword">add</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    Console.Write(AddResult);</span><br><span class="line"></span><br><span class="line">    calculator dec = <span class="keyword">new</span> calculator(Subtraction);</span><br><span class="line">    <span class="keyword">int</span> SubResult = dec(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">    Console.write(SubResult);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 加法</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="x"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="y"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>x+y<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Addition</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">int</span> y</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 减法</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="x"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="y"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>x-y<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Subtraction</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">int</span> y</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x - y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="匿名方法"><a href="#匿名方法" class="headerlink" title="匿名方法"></a>匿名方法</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">delegate</span> <span class="keyword">int</span> <span class="title">calculator</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">int</span> y</span>)</span>; <span class="comment">//委托</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   calculator <span class="keyword">add</span> = <span class="keyword">delegate</span>(<span class="keyword">int</span> num1,<span class="keyword">int</span> num2)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">return</span> num1 + num2;</span><br><span class="line">   &#125;;</span><br><span class="line">   calculator dec = <span class="keyword">delegate</span>(<span class="keyword">int</span> num1,<span class="keyword">int</span> num2)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">return</span> num1 - num2;</span><br><span class="line">   &#125;;</span><br><span class="line">   <span class="keyword">int</span> AddResult = dec(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">   <span class="keyword">int</span> SubResult = dec(<span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">   Console.Write(AddResult);</span><br><span class="line">   Console.Write(SubResult);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">delegate</span> <span class="keyword">bool</span> <span class="title">MyBol</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">int</span> y</span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">delegate</span> <span class="keyword">bool</span> <span class="title">MyBol_2</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">string</span> y</span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">delegate</span> <span class="keyword">int</span> <span class="title">calculator</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">int</span> y</span>)</span>; <span class="comment">//委托类型</span></span><br><span class="line"><span class="function"><span class="keyword">delegate</span> <span class="keyword">void</span> <span class="title">VS</span>(<span class="params"></span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MyBol Bol = (x, y) =&gt; x == y;</span><br><span class="line">    MyBol_2 Bol_2 = (x, s) =&gt; s.Length &gt; x;</span><br><span class="line">    calculator C = (X, Y) =&gt; X * Y;</span><br><span class="line">    VS S = () =&gt; Console.Write(<span class="string">"我是无参数Labada表达式"</span>);</span><br><span class="line">    <span class="keyword">int</span>[] numbers = &#123; <span class="number">5</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">int</span> oddNumbers = numbers.Count(n =&gt; n % <span class="number">2</span> == <span class="number">1</span>);</span><br><span class="line">    List&lt;People&gt; people = LoadData();<span class="comment">//初始化</span></span><br><span class="line">    IEnumerable&lt;People&gt; results = people.Where(<span class="keyword">delegate</span>(People p) &#123; <span class="keyword">return</span> p.age &gt; <span class="number">20</span>; &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;People&gt; <span class="title">LoadData</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List&lt;People&gt; people = <span class="keyword">new</span> List&lt;People&gt;();   <span class="comment">//创建泛型对象  </span></span><br><span class="line">    People p1 = <span class="keyword">new</span> People(<span class="number">21</span>, <span class="string">"guojing"</span>);      <span class="comment">//创建一个对象  </span></span><br><span class="line">    People p2 = <span class="keyword">new</span> People(<span class="number">21</span>, <span class="string">"wujunmin"</span>);     <span class="comment">//创建一个对象  </span></span><br><span class="line">    People p3 = <span class="keyword">new</span> People(<span class="number">20</span>, <span class="string">"muqing"</span>);       <span class="comment">//创建一个对象  </span></span><br><span class="line">    People p4 = <span class="keyword">new</span> People(<span class="number">23</span>, <span class="string">"lupan"</span>);        <span class="comment">//创建一个对象  </span></span><br><span class="line">    people.Add(p1);                     <span class="comment">//添加一个对象  </span></span><br><span class="line">    people.Add(p2);                     <span class="comment">//添加一个对象  </span></span><br><span class="line">    people.Add(p3);                     <span class="comment">//添加一个对象  </span></span><br><span class="line">    people.Add(p4);</span><br><span class="line">    <span class="keyword">return</span> people;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">People</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">int</span> age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;             <span class="comment">//设置属性  </span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">string</span> name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;         <span class="comment">//设置属性  </span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">People</span>(<span class="params"><span class="keyword">int</span> age, <span class="keyword">string</span> name</span>)      <span class="comment">//设置属性(构造函数构造)  </span></span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">      <span class="keyword">this</span>.age = age;                 <span class="comment">//初始化属性值age  </span></span><br><span class="line">      <span class="keyword">this</span>.name = name;               <span class="comment">//初始化属性值name  </span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Func委托"><a href="#Func委托" class="headerlink" title="Func委托"></a>Func<t>委托</t></h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//最后一个参数为返回值类型</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Func&lt;<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">bool</span>&gt; gwl = (p, j) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (p + j == <span class="number">10</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    Console.WriteLine(gwl(<span class="number">5</span>,<span class="number">5</span>) + <span class="string">""</span>);   <span class="comment">//打印‘True’</span></span><br><span class="line">    Console.ReadKey();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>委托</tag>
        <tag>匿名方法</tag>
        <tag>Lambda</tag>
        <tag>Func&lt;T&gt;委托</tag>
      </tags>
  </entry>
  <entry>
    <title>RGB颜色</title>
    <url>/RGB%E9%A2%9C%E8%89%B2.html</url>
    <content><![CDATA[<p><img src="RGB%E9%A2%9C%E8%89%B2/RGB1.png" alt></p>
<p><img src="RGB%E9%A2%9C%E8%89%B2/RGB2.png" alt></p>
<p><img src="RGB%E9%A2%9C%E8%89%B2/RGB3.png" alt></p>
]]></content>
      <categories>
        <category>RGB</category>
      </categories>
      <tags>
        <tag>RGB颜色表</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客部署到Coding和github</title>
    <url>/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0Coding%E5%92%8Cgithub.html</url>
    <content><![CDATA[<h3 id="部署到Github和Coding"><a href="#部署到Github和Coding" class="headerlink" title="部署到Github和Coding"></a>部署到Github和Coding</h3><h4 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h4><blockquote>
<p>Github：<br>新建Repository：name.github.io</p>
</blockquote>
<blockquote>
<p>Coding：<br>新建Repository：name.coding.me</p>
</blockquote>
<h4 id="添加SSH-key"><a href="#添加SSH-key" class="headerlink" title="添加SSH key"></a>添加SSH key</h4><p>若无SSHkey</p>
<blockquote>
<p>ssh-keygen -t rsa -C “your e-mail”<br>Enter passphrase (empty for no passphrase):&lt;输入加密串&gt;<br>Enter same passphrase again:&lt;再次输入加密串&gt;</p>
</blockquote>
<p>打开生成的id_rsa.pub文件并复制其中的内容添加到Github或Coding项目中然后在git中执行</p>
<blockquote>
<p>Github：<br>    ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a></p>
</blockquote>
<blockquote>
<p>Coding：<br>    ssh -T <a href="mailto:git@git.coding.net" target="_blank" rel="noopener">git@git.coding.net</a> //coding<br>    ssh -T <a href="mailto:git@git.dev.tencent.com" target="_blank" rel="noopener">git@git.dev.tencent.com</a> //腾讯云</p>
</blockquote>
<p>添加到腾讯云后需要开启Pages服务才可通过name.coding.me登录</p>
<h4 id="更改博客配置文件"><a href="#更改博客配置文件" class="headerlink" title="更改博客配置文件"></a>更改博客配置文件</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository:</span><br><span class="line">    github: git@github.com:silencejql/silencejql.github.io.git</span><br><span class="line">    coding: git@git.dev.tencent.com:silencejql/silencejql.coding.me.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>不同格式相应作出调整即可</p>
<h4 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h4><p><a href="http://name.coding.me" target="_blank" rel="noopener">http://name.coding.me</a> 在google chrome中打开可能会默认https，修复方式为:</p>
<blockquote>
<p>地址栏中输入 chrome://net-internals/#hsts<br>在 Delete domain security policies 中输入项目的域名，并 Delete 删除<br>可以在 Query domain 测试是否删除成功</p>
</blockquote>
<p>这里如果还是不行， 请清除浏览器缓存！</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Coding</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>css常用属性</title>
    <url>/css%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7.html</url>
    <content><![CDATA[<h2 id="文本设置"><a href="#文本设置" class="headerlink" title="文本设置"></a>文本设置</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">font: italic bold 36px 宋体; //顺序不可变</span><br><span class="line"><span class="selector-tag">font-wight</span>: 100<span class="selector-tag">-900</span>、<span class="selector-tag">bold</span>（加粗）</span><br><span class="line">font-size: 10px; // 	12px(12像素)、50%、larger、small</span><br><span class="line"><span class="selector-tag">font-style</span>: <span class="selector-tag">initial</span>（初始）、<span class="selector-tag">italic</span>（斜体字）、<span class="selector-tag">normal</span>（默认）、<span class="selector-tag">oblique</span>（倾斜）</span><br><span class="line">font-family: "微软雅黑" // 宋体</span><br><span class="line">text-align: center; //横向排列  left、right 和 center</span><br><span class="line">line-height: 200px; //文本行高 通俗的讲，文字高度加上文字上下的空白区域的高度 50%:基于字体大小的百分比</span><br><span class="line">vertical-align:-4px; //设置元素内容的垂直对齐方式 ,只对行内元素有效，对块级元素无效</span><br><span class="line">text-indent: 150px; //首行缩进</span><br><span class="line">letter-spacing: 10px; //字母间隙</span><br><span class="line">word-spacing: 20px; //单词间隙</span><br><span class="line">text-transform: capitalize; //单词大写</span><br></pre></td></tr></table></figure>

<h2 id="背景属性"><a href="#背景属性" class="headerlink" title="背景属性"></a>背景属性</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">background-color: cornflowerblue; //背景颜色</span><br><span class="line">background-image: url('1.jpg'); //背景图片</span><br><span class="line">background-repeat: no-repeat/repeat-x/repeat=t; //(默认铺满，不重复，x重复，y重复)</span><br><span class="line">background-size:600px 250px //大小</span><br><span class="line">background-position: right top（20px 20px）;//(横向：left center right)(纵向：top center bottom) //简写：</span><br><span class="line">&lt;body style="background: 20px 20px no-repeat #ff4 url('1.jpg')"&gt;</span><br><span class="line">&lt;div style="width: 300px;height: 300px;background: 20px 20px no-repeat #ff4 url('1.jpg')"&gt;</span><br></pre></td></tr></table></figure>

<h3 id="颜色属性"><a href="#颜色属性" class="headerlink" title="颜色属性"></a>颜色属性</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;div style="color:blueviolet"&gt;ppppp&lt;/div&gt; //颜色少</span><br><span class="line">&lt;div style="color:#ffee33"&gt;ppppp&lt;/div&gt;  //百度颜色代码可以查询更多</span><br><span class="line">&lt;div style="color:rgb(255,0,0)"&gt;ppppp&lt;/div&gt; //三原色 红绿蓝256级</span><br><span class="line">&lt;div style="color:rgba(255,0,0,0.5)"&gt;ppppp&lt;/div&gt; //比上一个 加了一个透明度</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css属性</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库导入导出</title>
    <url>/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA.html</url>
    <content><![CDATA[<h1 id="Postgresql"><a href="#Postgresql" class="headerlink" title="Postgresql"></a>Postgresql</h1><h2 id="测试软件导出、Postgresql导入"><a href="#测试软件导出、Postgresql导入" class="headerlink" title="测试软件导出、Postgresql导入"></a>测试软件导出、Postgresql导入</h2><h3 id="测试软件导出"><a href="#测试软件导出" class="headerlink" title="测试软件导出"></a>测试软件导出</h3><blockquote>
<p>连接数据库设置完筛选条件后点击导出到Excel重命名为：表名.csv</p>
</blockquote>
<h3 id="测试软件导入"><a href="#测试软件导入" class="headerlink" title="测试软件导入"></a>测试软件导入</h3><blockquote>
<p>1、打开导出表添加新的数据后，删除第一行表头以及第一列序号<br>2、删除原数据库已有行后保存<br>3、打开Postgres找到相应表右键导入<br>4、文件名选择csv文件路径、格式选csv、字符编码可选<br>5、点击导入即可</p>
<blockquote>
<p>如果主键为自增序列执行6、7<br>6、将相应表的序列创建脚本后删除<br>7、更改脚本中的START大于新增数据的主键ID后执行脚本</p>
</blockquote>
</blockquote>
<h2 id="SQL-shell-psql-导入"><a href="#SQL-shell-psql-导入" class="headerlink" title="SQL shell(psql)导入"></a>SQL shell(psql)导入</h2><blockquote>
<p>1、将excel处理好后，另存为csv（Comma Delimited）<br>2、运行SQL shell(psql) 并登录<br>3、运行’COPY mytable FROM ‘/myfile.csv’  WITH CSV  HEADER</p>
</blockquote>
<h2 id="SQL-shell-psql-导出"><a href="#SQL-shell-psql-导出" class="headerlink" title="SQL shell(psql)导出"></a>SQL shell(psql)导出</h2><blockquote>
<p>COPY (select * from mytable) to ‘/myfile.csv’ with csv header;</p>
</blockquote>
]]></content>
      <categories>
        <category>工作</category>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Postgresql</tag>
      </tags>
  </entry>
  <entry>
    <title>泛型的特点</title>
    <url>/%E6%B3%9B%E5%9E%8B%E7%9A%84%E7%89%B9%E7%82%B9.html</url>
    <content><![CDATA[<h4 id="泛型的主要特性"><a href="#泛型的主要特性" class="headerlink" title="泛型的主要特性"></a>泛型的主要特性</h4><p>泛型类型的一些重要特征使它们相比传统的非泛型类型具有如下的显著特征：</p>
<blockquote>
<p>类型安全<br>性能<br>二进制代码复用</p>
</blockquote>
<h5 id="类型安全"><a href="#类型安全" class="headerlink" title="类型安全"></a>类型安全</h5><p>泛型最重要的特征之一是类型安全性。对于非泛型ArrayList类，如果使用对象类型，则可以向集合中添加任何类型，这些类型有时会导致严重的问题。下面的示例显示向ArrayList类型的集合添加一个整数、字符串和对象；</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">ArrayList obj = <span class="keyword">new</span> ArrayList();  </span><br><span class="line">obj.Add(<span class="number">50</span>);  </span><br><span class="line">obj.Add(<span class="string">"Dog"</span>);  </span><br><span class="line">obj.Add(<span class="keyword">new</span> TestClass());</span><br></pre></td></tr></table></figure>

<p>现在，如果使用整数对象来使用foreach语句进行遍历的话，当编译器接受到代码，但是因为集合中的所有元素都不是整数，所以会导致运行时异常；</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(<span class="keyword">int</span> i <span class="keyword">in</span> obj)  </span><br><span class="line">&#123;  </span><br><span class="line">    Console.WriteLine(i);    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>编程的经验法则是应该尽早检测到错误。对于泛型类Test，泛型类型T定义允许哪些类型。通过使用Test的定义，只能向集合添加整型类型的数据。这时候当Add()方法具有以下无效参数的时候编译器将不编译代码；</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">Test&lt;<span class="keyword">int</span>&gt; obj = <span class="keyword">new</span> Test&lt;<span class="keyword">int</span>&gt;();  </span><br><span class="line">obj.Add(<span class="number">50</span>);  </span><br><span class="line">obj.Add(<span class="string">"Dog"</span>);            <span class="comment">//编译错误</span></span><br><span class="line">obj.Add(<span class="keyword">new</span> TestClass());  <span class="comment">//编译错误</span></span><br></pre></td></tr></table></figure>

<h5 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h5><p>在下面的示例中，ArrayList类存储对象，并且定义了Add()方法来存储一些整型参数。因此，整数类型被装箱。当使用foreach语句读取ArrayList中的值时，将发生拆箱。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">ArrayList  obj = <span class="keyword">new</span> ArrayList();   </span><br><span class="line">obj.Add(<span class="number">50</span>);    <span class="comment">//装箱- 值类型转换成引用类型</span></span><br><span class="line"><span class="keyword">int</span> x= (<span class="keyword">int</span>)obj[<span class="number">0</span>]; <span class="comment">//拆箱</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">int</span> i <span class="keyword">in</span> obj)  </span><br><span class="line">&#123;  </span><br><span class="line">   Console.WriteLine(i);   <span class="comment">// 拆箱</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意：泛型比其他集合（如ArrayList）更快。</p>
<p>代替使用对象类型，TestClass类的泛型类型被定义为int，因此在从编译器动态生成的类中将使用int类型。所以将不会发生装箱和拆箱，如下所示；</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">TestClass&lt;<span class="keyword">int</span>&gt; obj = <span class="keyword">new</span> TestClass&lt;<span class="keyword">int</span>&gt;();  </span><br><span class="line">obj.Add(<span class="number">50</span>);    <span class="comment">//没有装箱</span></span><br><span class="line"><span class="keyword">int</span> x= obj[<span class="number">0</span>]; <span class="comment">// 没有拆箱</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">int</span> i <span class="keyword">in</span> obj)  </span><br><span class="line">&#123;  </span><br><span class="line">   Console.WriteLine(i);   <span class="comment">//没有拆箱</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="二进制代码复用"><a href="#二进制代码复用" class="headerlink" title="二进制代码复用"></a>二进制代码复用</h5><p>泛型类型提供了一种源代码保护机制。泛型类可以定义一次，并且可以使用许多不同类型来进行实例化。泛型可以在一种CLR支持的语言中定义，并可以被另一种.NET语言使用。以下TestClass 使用int和string类型进行实例化：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">TestClass&lt;<span class="keyword">int</span>&gt; obj = <span class="keyword">new</span> TestClass&lt;<span class="keyword">int</span>&gt;();  </span><br><span class="line">obj.Add(<span class="number">50</span>);  </span><br><span class="line"></span><br><span class="line">TestClass&lt;<span class="keyword">string</span>&gt; obj1 = <span class="keyword">new</span> TestClass&lt;<span class="keyword">string</span>&gt;();  </span><br><span class="line">Obj1.Add(<span class="string">"hello"</span>);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>泛型</tag>
      </tags>
  </entry>
  <entry>
    <title>无处安放的矫情</title>
    <url>/%E6%97%A0%E5%A4%84%E5%AE%89%E6%94%BE%E7%9A%84%E7%9F%AB%E6%83%85.html</url>
    <content><![CDATA[<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="Enter password to read！" />
    <label for="pass">Enter password to read！</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
U2FsdGVkX18+wD5bnXgyYBWRZxZayIMd3JoionX8bY0=
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>HTML常用标签</title>
    <url>/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE.html</url>
    <content><![CDATA[<h2 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h2><h3 id="HTML标题"><a href="#HTML标题" class="headerlink" title="HTML标题"></a>HTML标题</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>h1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>h3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>h4<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h5</span>&gt;</span>h5<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h6</span>&gt;</span>h6<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="水平线-分割线"><a href="#水平线-分割线" class="headerlink" title="水平线/分割线"></a>水平线/分割线</h3><p><code>&lt;hr/&gt;</code></p>
<h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p><code>html注释：&lt;!-- comment --&gt;</code></p>
<h3 id="段落及换行"><a href="#段落及换行" class="headerlink" title="段落及换行"></a>段落及换行</h3><p>html段落<code>&lt;p&gt;</code>以及段落换行<code>&lt;br/&gt;</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello <span class="tag">&lt;<span class="name">br</span>/&gt;</span> world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="文本格式化"><a href="#文本格式化" class="headerlink" title="文本格式化"></a>文本格式化</h3><table>
<thead>
<tr>
<th align="center">标签</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>&lt;b&gt;</code></td>
<td align="center">加粗</td>
</tr>
<tr>
<td align="center"><code>&lt;big&gt;</code></td>
<td align="center">大号字体</td>
</tr>
<tr>
<td align="center"><code>&lt;em&gt;</code></td>
<td align="center">着重文字</td>
</tr>
<tr>
<td align="center"><code>&lt;i&gt;</code></td>
<td align="center">斜体</td>
</tr>
<tr>
<td align="center"><code>&lt;small&gt;</code></td>
<td align="center">小号字体</td>
</tr>
<tr>
<td align="center"><code>&lt;sub&gt;</code></td>
<td align="center">下标</td>
</tr>
<tr>
<td align="center"><code>&lt;sup&gt;</code></td>
<td align="center">上标</td>
</tr>
</tbody></table>
<h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p><code>&lt;a&gt;</code>比较重要的属性有两个，分别是href、target<br>href指定超链接地址<br>target指定打开方式<br>&emsp;_blank  新页面打开</p>
<h4 id="普通链接"><a href="#普通链接" class="headerlink" title="普通链接"></a>普通链接</h4><p><code>&lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;</code></p>
<h4 id="邮件链接"><a href="#邮件链接" class="headerlink" title="邮件链接"></a>邮件链接</h4><p>标签最简式<br><code>&lt;a href=&quot;mailto:xxx@xx.com&quot;&gt;联系站长&lt;/a&gt;</code></p>
<h3 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h3><p>使用格式：<code>&lt;img src=&quot;url&quot;&gt;</code><br>&emsp;alt  定义当图片无法加载时，显示什么信息<br>&emsp;width 定义宽度，单位可以为像素  也可以为百分比<br>&emsp;height 定义高度<br><code>&lt; img src=“11.jpg” width=&quot;100px&quot; height=&quot;200px&quot; title=&quot;title&quot; alt=&quot;图片无法显示，请刷新&quot;/&gt;</code></p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>表格由<code>&lt;table&gt;</code>来定义，每行<code>&lt;tr&gt;</code> 有许多单元格<code>&lt;td&gt;</code>。表头可以使用<code>&lt;th&gt;</code><br><code>&lt;table&gt;</code>标签属性：</p>
<blockquote>
<p>border：表格边框属性；当使用border=”1”设置边框时，会在所有td以及table上嵌套边框，当border加大时，只有table框会加粗。<br>cellspacing：单元格与单元格之间的间隙。当cellspacing=”0”时，单元格之间的间隙为0，但边框线并不会合并。<br>☆☆合并边框的写法style=”border-collapse:collapse;” 使用边框合并时，无需设置cellspacing。<br>cellpadding:单元格内边距，单元格中文字与单元格边框之间的距离。<br>width/height:表格的宽高<br>align：设置表格在父容器中的对齐方式 ，left/居左 center/居中 right/居右<br>☆☆当表格使用align属性时，相当于使表格浮动，可能会导致表格后面的元素受表格浮动影响，导致布局错乱。<br>bgcolor：背景色<br>background：背景图，后接相对路径。背景图和背景色同时生效时，图会覆盖背景色<br>bordercolor：设置边框颜色</p>
</blockquote>
<p>在<code>&lt;table&gt;</code>中可以嵌入<code>&lt;th&gt;  &lt;tr&gt;  &lt;td&gt;</code>等标签<br>　　<code>&lt;tr&gt;</code>   定义行<br>　　<code>&lt;th&gt;</code>   定义表头<br>　　　　colspan  定义表头单元格可以横跨的列数。<br>　　　　rowspan  定义表头单元格横跨的行数<br>　　　　heardes  定义与表头单元格相关联的一个或者多个单元格。(html5新增)　　　<br>　　<code>&lt;td&gt;</code>   定义单元格<br>　　　　colspan  定义单元格可以横跨的列数。<br>　　　　rowspan  定义单元格横跨的行数<br>　　　　heardes  定义与单元格相关联的一个或者多个单元格。(html5新增)　　<br>表格固定高度：overflow-y:auto;</p>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>无序列表<code>&lt;ul&gt;</code><br>有序列表<code>&lt;ol&gt;</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>male<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>female<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>male<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>female<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML标签</tag>
      </tags>
  </entry>
  <entry>
    <title>工作-BBK</title>
    <url>/%E5%B7%A5%E4%BD%9C-BBK.html</url>
    <content><![CDATA[
<br>
<a href="/现场软件备份路径.html" title="现场软件备份路径">现场软件备份路径</a>
<br>
<a href="/现场问题整理.html" title="现场问题整理">现场问题整理</a>
<br>

<br>
<a href="/现场软件安装包下载.html" title="现场软件安装包下载">现场软件安装包下载</a>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>托管DLL与非托管DLL</title>
    <url>/%E6%89%98%E7%AE%A1DLL%E4%B8%8E%E9%9D%9E%E6%89%98%E7%AE%A1DLL.html</url>
    <content><![CDATA[<p>&emsp;&emsp;托管DLL和非托管DLL的区别：狭义解释讲，托管DLL就在Dotnet环境生成的DLL文件；非托管DLL不是在Dotnet环境生成的DLL文件。<br>&emsp;&emsp;托管DLL文件，可以在Dotnet环境通过 “添加引用” 的方式，直接把托管DLL文件添加到项目中，然后通过 Using DLL命名空间，来调用相应的DLL对象；非托管DLL文件，在Dotnet环境应用时，通过DllImport 调用。</p>
<a id="more"></a>

<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>&emsp;&emsp;托管dll虽然符合windows的PE格式规范，但是代码是以IL的形式保存在.Text 区的，而不是机器码，CLR会在运行时JIT编译成机器码再交给操作系统执行，这也就为什么托管代码称之为”托管”的意义。<br>&emsp;&emsp;所以，要想注入托管dll，首先需要在目标进程中启动CLR，然后让CLR来加载managed dll。<br>&emsp;&emsp;托管DLL，指完全由.NET托管代码实现的DLL，完全依赖于 .NET 平台的 CLR 运行。托管DLL，受.NET CLR管控，支持内存自动回收等的，对于.NET平台是安全DLL<br>&emsp;&emsp;非托管DLL，是指完全或者部分 不是用.NET代码实现，不依赖于.NET平台即可运行，例如 COM方式 的DLL，不支持自动回收内存，对于.NET平台而言，也是非安全可控的。</p>
<hr>
<p>&emsp;&emsp;正常编程所用的高级语言，是无法被计算机识别的。需要先将高级语言翻译为机器语言，才能被机器理解和运行。<br>在标准C/C++中，编译过程是这样的：<br><img src="%E6%89%98%E7%AE%A1DLL%E4%B8%8E%E9%9D%9E%E6%89%98%E7%AE%A1DLL/Ccompile.jpg" alt><br>&emsp;&emsp;源代码首先经过预处理器，对头文件以及宏进行解析，然后经过编译器，生成汇编代码，接着，经过汇编，生成机器指令，最后将所有文件连接起来。这种编译方式的优点在于，最终直接生成了机器码，可以直接被计算机识别和运行，无需任何中间运行环境，但缺点也在于，由于不同平台能够识别的机器码不同，因此程序的跨平台能力较差。<br>&emsp;&emsp;而在Java语言中，源代码并没有被直接翻译成机器码，而是编译成了一种中间代码（字节码Bytecode）。因此，运行Java程序需要一个额外的JRE（Java Runtime Enviromental）运行环境，在JRE中存在着JVM（Java Virtual Mechinal，Java虚拟机），在程序运行的时候，会将中间代码进一步解释为机器码，并在机器上运行。<br>&emsp;&emsp;使用中间代码的好处在于，程序的跨平台性比较好，一次编译，可以在不同的设备上运行。<br>&emsp;&emsp;托管/非托管是微软的.net framework中特有的概念，其中，非托管代码也叫本地（native）代码。与Java中的机制类似，也是先将源代码编译成中间代码（MSIL，Microsoft Intermediate Language），然后再由.net中的CLR将中间代码编译成机器代码。<br>&emsp;&emsp;而C#与Java的区别在于，Java是先编译后解释，C#是两次编译。</p>
<hr>
<h3 id="调用DLL中的非托管函数一般方法"><a href="#调用DLL中的非托管函数一般方法" class="headerlink" title="调用DLL中的非托管函数一般方法"></a>调用DLL中的非托管函数一般方法</h3><p>首先，应该在C#语言源程序中声明外部方法，其基本形式是：<br>    [DLLImport(“DLL文件”)]<br>修饰符 extern 返回变量类型 方法名称 （参数列表）<br>其中：</p>
<blockquote>
<p>DLL文件：包含定义外部方法的库文件。<br>修饰符： 访问修饰符，除了abstract以外在声明方法时可以使用的修饰符。<br>返回变量类型：在DLL文件中你需调用方法的返回变量类型。<br>方法名称：在DLL文件中你需调用方法的名称。<br>参数列表：在DLL文件中你需调用方法的列表。</p>
</blockquote>
<p>注意：需要在程序声明中使用System.Runtime.InteropServices命名空间。<br>DllImport只能放置在方法声明上。<br>DLL文件必须位于程序当前目录或系统定义的查询路径中（即：系统环境变量中Path所设置的路径）。<br><font color="#FF0000"><strong>返回变量类型、方法名称、参数列表一定要与DLL文件中的定义相一致。</strong></font><br>若要使用其它函数名，可以使用EntryPoint属性设置，如：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">[<span class="meta">DllImport(<span class="meta-string">"user32.dll"</span>, EntryPoint=<span class="meta-string">"MessageBoxA"</span>)</span>]</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">MsgBox</span>(<span class="params"><span class="keyword">int</span> hWnd, <span class="keyword">string</span> msg, <span class="keyword">string</span> caption, <span class="keyword">int</span> type</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImportAttribute(<span class="meta-string">"CN210S_CSM_LV1.dll"</span>, EntryPoint = <span class="meta-string">"uds_calc_key"</span>, CharSet = CharSet.Ansi)</span>]</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">uds_calc_key_ldw</span>(<span class="params"><span class="keyword">string</span> seed, StringBuilder key</span>)</span>;</span><br></pre></td></tr></table></figure>

<p>其它可选的 DllImportAttribute 属性：</p>
<blockquote>
<p>CharSet： 指示用在入口点中的字符集，如：CharSet=CharSet.Ansi；<br>SetLastError： 指示方法是否保留 Win32”上一错误”，如：SetLastError=true；<br>ExactSpelling： 指示 EntryPoint 是否必须与指示的入口点的拼写完全匹配，如：ExactSpelling=false；<br>PreserveSig： 指示方法的签名应当被保留还是被转换， 如：PreserveSig=true；<br>CallingConvention： 指示入口点的调用约定， 如：CallingConvention=CallingConvention.Winapi；</p>
</blockquote>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>托管DLL</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库自动备份、删除数据</title>
    <url>/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD%E3%80%81%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE.html</url>
    <content><![CDATA[<p>文中指令可在windows命令行中执行测试<br>本文介绍的是实用简单的方式实现所需功能，所有功能均可写在上位机软件中自动实现，但不同现场很难通用<br>通过脚本的形式实现简单易改</p>
<a id="more"></a>
<h1 id="Postgresql"><a href="#Postgresql" class="headerlink" title="Postgresql"></a>Postgresql</h1><h2 id="数据库备份脚本"><a href="#数据库备份脚本" class="headerlink" title="数据库备份脚本"></a>数据库备份脚本</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo off</span><br><span class="line">set PRJDB=LocalDB</span><br><span class="line">set FileName=%PRJDB%_%date:~0,4%_%date:~5,2%_%date:~8,2%.backup</span><br><span class="line">if not exist &quot;D:\BBK\DBbackup&quot; (md D:\BBK\DBbackup)</span><br><span class="line">D:/&quot;Program Files (x86)&quot;/PostgreSQL/9.5/bin/pg_dump.exe --host localhost --port 5432 --username &quot;postgres&quot; --no-password  --format custom --verbose --file &quot;D:\BBK\DBbackup\%FileName%&quot; &quot;LocalDB&quot;</span><br></pre></td></tr></table></figure>

<p>说明：</p>
<blockquote>
<p>备份保存路径为<code>D:\BBK\DBbackup</code><br>命名为：LocalDB_年_月_日.backup<br><code>D:/&quot;Program Files (x86)&quot;/PostgreSQL/9.5/bin/pg_dump.exe</code>为Postgresql数据库程序所在路径</p>
</blockquote>
<h2 id="删除表中数据"><a href="#删除表中数据" class="headerlink" title="删除表中数据"></a>删除表中数据</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 删除一个月以前的数据</span><br><span class="line">D:/&quot;Program Files (x86)&quot;/PostgreSQL/9.5/bin/psql -h 127.0.0.1 -p 5432 -d LocalDB -U postgres --command &quot;delete from 侧滑表 where 测试时间 &lt; (now() - interval &apos;1 month&apos;)&quot;</span><br></pre></td></tr></table></figure>

<p>说明：</p>
<blockquote>
<p><code>D:/&quot;Program Files (x86)&quot;/PostgreSQL/9.5/bin</code>为Postgresql数据库程序所在文件夹</p>
</blockquote>
<h3 id="时间扩展"><a href="#时间扩展" class="headerlink" title="时间扩展"></a>时间扩展</h3><h4 id="年"><a href="#年" class="headerlink" title="年"></a>年</h4><p><code>interval &#39;2 years&#39;</code><br><code>interval &#39;2 year&#39;</code><br><code>interval &#39;2 y&#39;</code><br><code>interval &#39;2 Y&#39;</code><br><code>interval &#39;2Y&#39;</code></p>
<h4 id="月"><a href="#月" class="headerlink" title="月"></a>月</h4><p><code>interval &#39;1 month&#39;</code><br><code>interval &#39;one month&#39;</code></p>
<h4 id="周"><a href="#周" class="headerlink" title="周"></a>周</h4><p><code>interval &#39;3 week&#39;</code></p>
<p>说明：interval 可以不写</p>
<p>运行时会提示数据用户名密码<br>windows系统可在<code>%APPDATA%\postgresql\pgpass.conf</code>中添加服务器信息，实现免密操作<br>格式：地址:端口:数据库:用户名:密码<br>如：<code>127.0.0.1:5432:LocalDB:postgres:123</code><br>参考：<a href="https://www.postgresql.org/docs/current/libpq-pgpass.html" target="_blank" rel="noopener">https://www.postgresql.org/docs/current/libpq-pgpass.html</a></p>
<h2 id="自动运行"><a href="#自动运行" class="headerlink" title="自动运行"></a>自动运行</h2><p>将上述shell指令分别复制到文本文档中另存为 name.bat，然后创建任务计划自动调用；<br>任务计划创建方法：windows运行compmgmt.msc 新建任务计划程序按提示操作即可</p>
<h1 id="SQLServer"><a href="#SQLServer" class="headerlink" title="SQLServer"></a>SQLServer</h1><h2 id="数据库自动备份"><a href="#数据库自动备份" class="headerlink" title="数据库自动备份"></a>数据库自动备份</h2><p>打开数据库，依次进入：管理——维护计划，根据维护计划向导操作即可</p>
<h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><p>启动SQL Server Agent服务，在步骤中新建作业，类型选择transact-SQL，<br>命令中输入：<br>declare @tm <code>datetime</code><br>delete from <code>tablename</code> where tm&gt;=dateadd(month,-6,getdate())//删除表中6个月之前的数据<br>然后打开计划自定义执行周期</p>
<h1 id="Access"><a href="#Access" class="headerlink" title="Access"></a>Access</h1><p>直接用脚本复制重命名，新建任务计划自动执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set PRJDB=LocalDB</span><br><span class="line">set FileName=%PRJDB%_%date:~0,4%_%date:~5,2%_%date:~8,2%.backup</span><br><span class="line">copy D:\BBK\LocalDB.mdb D:\BBK\DBbackup\%FileName%&quot;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>工作</category>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Postgresql</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>csharp XML</title>
    <url>/CSharp%20XML.html</url>
    <content><![CDATA[<h2 id="XML创建、读取配置"><a href="#XML创建、读取配置" class="headerlink" title="XML创建、读取配置"></a>XML创建、读取配置</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">WirteConfig</span>(<span class="params"><span class="keyword">string</span> FileName, <span class="keyword">string</span> KeyName, <span class="keyword">string</span> Value</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> FilePath = OnlyOneStartUp.UseConfigPath;</span><br><span class="line">        <span class="keyword">string</span> AllFileName = FilePath + <span class="string">"\\"</span> + FileName + <span class="string">".xml"</span>;</span><br><span class="line">        <span class="keyword">if</span> (!Directory.Exists(FilePath))</span><br><span class="line">            Directory.CreateDirectory(FilePath);</span><br><span class="line"></span><br><span class="line">        DataSet ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">        <span class="keyword">if</span> (File.Exists(AllFileName))</span><br><span class="line">            ds.ReadXml(AllFileName);</span><br><span class="line">        <span class="keyword">if</span> (ds.Tables.Count &lt; <span class="number">1</span>)</span><br><span class="line">            ds.Tables.Add();</span><br><span class="line">        <span class="keyword">if</span> (ds.Tables[<span class="number">0</span>].Rows.Count &lt; <span class="number">1</span>)</span><br><span class="line">            ds.Tables[<span class="number">0</span>].Rows.Add();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!ds.Tables[<span class="number">0</span>].Columns.Contains(KeyName))</span><br><span class="line">            ds.Tables[<span class="number">0</span>].Columns.Add(KeyName);</span><br><span class="line">        ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][KeyName] = Value;</span><br><span class="line"></span><br><span class="line">        ds.WriteXml(AllFileName);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> sError = <span class="keyword">string</span>.Format(<span class="string">"写入配置信息Error:&#123;0&#125;"</span>, e.Message);</span><br><span class="line">        ErrorOut(MethodInfo.GetCurrentMethod().Name, sError);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 读出配置文件</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="FileName"&gt;</span>配置文件名称<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="KeyName"&gt;</span>键名<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Value"&gt;</span>返回的值<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">ReadConfig</span>(<span class="params"><span class="keyword">string</span> FileName, <span class="keyword">string</span> KeyName, <span class="keyword">ref</span> <span class="keyword">string</span> Value</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> FilePath = OnlyOneStartUp.UseConfigPath;</span><br><span class="line">        <span class="keyword">string</span> AllFileName = FilePath + <span class="string">"\\"</span> + FileName + <span class="string">".xml"</span>;</span><br><span class="line">        <span class="keyword">if</span> (!Directory.Exists(FilePath))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        DataSet ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">        <span class="keyword">if</span> (File.Exists(AllFileName))</span><br><span class="line">            ds.ReadXml(AllFileName);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (ds.Tables.Count &lt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (ds.Tables[<span class="number">0</span>].Rows.Count &lt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!ds.Tables[<span class="number">0</span>].Columns.Contains(KeyName))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        Value = Convert.ToString(ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][KeyName]);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> sError = <span class="keyword">string</span>.Format(<span class="string">"读取配置信息Error:&#123;0&#125;"</span>, e.Message);</span><br><span class="line">        ErrorOut(MethodInfo.GetCurrentMethod().Name, sError);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ReadConfigEx</span>(<span class="params"><span class="keyword">string</span> FileName, <span class="keyword">string</span> KeyName, <span class="keyword">ref</span> <span class="keyword">string</span> Value</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!ReadConfig(FileName, KeyName, <span class="keyword">ref</span> Value))</span><br><span class="line">        WirteConfig(FileName, KeyName, Value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>XML</tag>
      </tags>
  </entry>
  <entry>
    <title>现场软件备份路径</title>
    <url>/%E7%8E%B0%E5%9C%BA%E8%BD%AF%E4%BB%B6%E5%A4%87%E4%BB%BD%E8%B7%AF%E5%BE%84.html</url>
    <content><![CDATA[<p>网盘中软件工程下有相应文件夹的上传在相应文件夹中，没有的上传在对应项目文件夹中，后期会提醒Dean在软件工程中新建相应文件夹。<br><code>Z:\4-软件共享John\软件工程</code></p>
<a id="more"></a>
<h3 id="网盘地址"><a href="#网盘地址" class="headerlink" title="网盘地址"></a>网盘地址</h3><p>内网：<a href="http://192.168.1.80:5000/" target="_blank" rel="noopener">http://192.168.1.80:5000/</a><br>外网：<a href="https://bbknick.synology.me:5001/" target="_blank" rel="noopener">https://bbknick.synology.me:5001/</a></p>
<h2 id="北汽"><a href="#北汽" class="headerlink" title="北汽"></a>北汽</h2><h4 id="莱西被动式ACC"><a href="#莱西被动式ACC" class="headerlink" title="莱西被动式ACC"></a>莱西被动式ACC</h4><h5 id="更新时间：20190806"><a href="#更新时间：20190806" class="headerlink" title="更新时间：20190806 "></a><font color="#FF0000">更新时间：20190806 </font></h5><p><code>Z:\6-项目管理Jason\2018\218039 北汽新能源莱西工厂一套驾驶辅助标定设备项目-Jones\17-现场设备调试程序</code></p>
<h4 id="北汽昆明"><a href="#北汽昆明" class="headerlink" title="北汽昆明"></a>北汽昆明</h4><h5 id="更新时间：20190806-1"><a href="#更新时间：20190806-1" class="headerlink" title="更新时间：20190806 "></a><font color="#FF0000">更新时间：20190806 </font></h5><p><code>Z:\6-项目管理Jason\2017\117314 北汽新能源汽车工程技术中心（昆明）检测线项目-Jones\17-现场设备调试程序\设备程序</code></p>
<h2 id="众泰"><a href="#众泰" class="headerlink" title="众泰"></a>众泰</h2><h4 id="贵港腾骏"><a href="#贵港腾骏" class="headerlink" title="贵港腾骏"></a>贵港腾骏</h4><h5 id="更新时间：20190806-2"><a href="#更新时间：20190806-2" class="headerlink" title="更新时间：20190806 "></a><font color="#FF0000">更新时间：20190806 </font></h5><p><code>Z:\4-软件共享John\软件工程\腾骏\腾骏贵港</code></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>现场软件备份</tag>
      </tags>
  </entry>
  <entry>
    <title>CSharp基础</title>
    <url>/CSharp%E5%9F%BA%E7%A1%80.html</url>
    <content><![CDATA[<p>记录写bug过程中遇到的一些疑问</p>
<a id="more"></a>

<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>值类型存储在堆栈上，引用类型在栈中存储一个引用，其实际的存储位置位于托管堆。<br>C#类为引用类型，结构为值类型。<br>从值类型转化为引用类型称为装箱，如果方法需要把一个对象作为参数，而且传送一个值类型，装箱操作会自动进行；装箱的值类型可以使用拆箱操作转换为值类型，在拆箱时，<strong>需要使用类型转换运算符</strong>。</p>
<h3 id="值类型"><a href="#值类型" class="headerlink" title="值类型"></a>值类型</h3><p>结构体 数值类型(整数，浮点数，高精度浮点数) 可空类型 布尔 字符 枚举</p>
<h3 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h3><p>数组，用户定义的类、接口、委托，object，字符串</p>
<h2 id="装箱和拆箱"><a href="#装箱和拆箱" class="headerlink" title="装箱和拆箱"></a>装箱和拆箱</h2><p>装箱是一种通过将变量存储到System.Object中来显式地将值类型转换为引用类型的机制。当您装入值时，CLR会将新对象分配到堆中，并将值类型的值复制到该实例中。例如：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">20</span>;  </span><br><span class="line"><span class="keyword">object</span> b = a; <span class="comment">//装箱</span></span><br></pre></td></tr></table></figure>

<p>相反的操作是拆箱，它是将引用类型转换回值类型的过程。此过程验证接收数据类型是否与装箱类型一致;<br><code>int c = (int)b; // 拆箱</code></p>
<h2 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h2><blockquote>
<p>特征：</p>
<blockquote>
<p>类型安全<br>性能<br>二进制代码复用</p>
</blockquote>
</blockquote>
<p>详见： <a href="/泛型的特点.html" title="泛型的特点">泛型的特点</a></p>
<h3 id="为什么不用object代替泛型"><a href="#为什么不用object代替泛型" class="headerlink" title="为什么不用object代替泛型"></a>为什么不用object代替泛型</h3><p>由于Object为所有类型的基类，所以可以处理任何数据类型的数据，但是其中存在这拆箱和装箱，如果数据太多会影响到程序的性能。<br>在使用泛型的时候程序会在编译阶段根据我们提供的类型生成相应的二进制代码，无须进行装箱和拆箱操作。</p>
<h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><h3 id="为什么要用接口"><a href="#为什么要用接口" class="headerlink" title="为什么要用接口"></a>为什么要用接口</h3><p>接口一般由上层人员发起，下层人员实现。<br>写接口并不是为了扩展，而是为了扩展以后的模块仍然跟项目模块保持高度一致，为了扩展后的规范化。</p>
<h3 id="实例化接口对象"><a href="#实例化接口对象" class="headerlink" title="实例化接口对象"></a>实例化接口对象</h3><h4 id="接口回调"><a href="#接口回调" class="headerlink" title="接口回调"></a>接口回调</h4><p>接口不仅可以声明对象，而且可以把对象实例化，还可以当做参数被传入。<br>即继承中的向上转型，父类 FL=new 子类()，只不过这里的父类就是interface接口。</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title">Itemp</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="function"><span class="keyword">double</span> <span class="title">plus</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">num</span> : <span class="title">Itemp</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">double</span> aa, bb;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">num</span>(<span class="params"><span class="keyword">double</span> a, <span class="keyword">double</span> b</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">    <span class="keyword">this</span>.bb = b;</span><br><span class="line">    <span class="keyword">this</span>.aa = a;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">plus</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">    <span class="keyword">return</span> (aa + bb);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Itemp tm = <span class="literal">null</span>;<span class="comment">//声明接口对象引用</span></span><br><span class="line">  tm = <span class="keyword">new</span> num(<span class="number">1</span>, <span class="number">2</span>);<span class="comment">//接口回调(向上转型)</span></span><br><span class="line">  Console.WriteLine(tm.plus());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>

<h2 id="类型参数约束"><a href="#类型参数约束" class="headerlink" title="类型参数约束"></a>类型参数约束</h2><p>&emsp;&emsp;在定义泛型类时，可以对客户端代码能够在实例化类时用于类型参数的类型种类施加限制。如果客户端代码尝试使用某个约束所不允许的类型来实例化类，则会产生编译时错误。这些限制称为约束。<br>类型参数约束.NET支持的类型参数约束有以下五种：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">where</span> T : <span class="keyword">struct</span>  <span class="comment">//类型参数必须是值类型；可以指定除 Nullable 以外的任何值类型</span></span><br><span class="line"><span class="keyword">where</span> T : <span class="keyword">class</span>   <span class="comment">//类型参数必须是引用类型；这一点也适用于任何类、接口、委托或数组类型</span></span><br><span class="line">where T : new()   //类型参数必须具有无参数的公共构造函数。当与其他约束一起使用时，new() 约束必须最后指定</span><br><span class="line"><span class="keyword">where</span> T : NameOfBaseClass   <span class="comment">//类型参数必须是指定的基类或派生自指定的基类</span></span><br><span class="line"><span class="keyword">where</span> T : NameOfInterface   <span class="comment">//类型参数必须是指定的接口或实现指定的接口。可以指定多个接口约束。约束接口也可以是泛型的</span></span><br><span class="line"><span class="keyword">where</span> T : U    <span class="comment">//为 T 提供的类型参数必须是为 U 提供的参数或派生自为 U 提供的参数</span></span><br></pre></td></tr></table></figure>

<h2 id="当前程序运行路径"><a href="#当前程序运行路径" class="headerlink" title="当前程序运行路径"></a>当前程序运行路径</h2><p><code>Directory.GetCurrentDirectory() + &quot;\\Config</code></p>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>现场问题整理</title>
    <url>/%E7%8E%B0%E5%9C%BA%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86.html</url>
    <content><![CDATA[<h2 id="通讯测试"><a href="#通讯测试" class="headerlink" title="通讯测试"></a>通讯测试</h2><p>串口测试车辆通讯问题<br>SendID：<code>0730</code>；RecvID：<code>0738</code><br><code>33 33 07 38 FF FF 88 88</code> 设置滤波 只接收ID为<code>0738</code>的指令<br><code>55 55 07 30 02 10 03 00 00 00 00 00 88 88</code> 发送指令 发送ID为<code>0730</code><br>其中：<font color="#FF0000"> 02 10 03 00 00 00 00 00 </font> 为CAN指令，第一位为长度位。</p>
<h2 id="四轮大灯"><a href="#四轮大灯" class="headerlink" title="四轮大灯"></a>四轮大灯</h2><h3 id="四轮设备中文乱码导致数据上传失败"><a href="#四轮设备中文乱码导致数据上传失败" class="headerlink" title="四轮设备中文乱码导致数据上传失败"></a>四轮设备中文乱码导致数据上传失败</h3><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><blockquote>
<p>更改时间、区域为China 详情请咨询 <a href="mailto:coulson@bbkco.com.cn" target="_blank" rel="noopener">Coulsonxia</a></p>
</blockquote>
<h3 id="宝骏现场大灯数据单独上传"><a href="#宝骏现场大灯数据单独上传" class="headerlink" title="宝骏现场大灯数据单独上传"></a>宝骏现场大灯数据单独上传</h3><h4 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h4><blockquote>
<p>流程中新建TCPClient用于接收大灯通讯<br>启动大灯需要发送车型信息，格式为：{0x02}{车辆信息_ToHLA_ZTS};{车辆信息_ToHLA_VIN}{0x0D}{0x0A}<br>接收解析并保存大灯数据</p>
</blockquote>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>现场问题</tag>
      </tags>
  </entry>
  <entry>
    <title>现场软件安装包下载</title>
    <url>/%E7%8E%B0%E5%9C%BA%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%8C%85%E4%B8%8B%E8%BD%BD.html</url>
    <content><![CDATA[<h4 id="百度网盘下载推荐用ENFI下载器"><a href="#百度网盘下载推荐用ENFI下载器" class="headerlink" title="百度网盘下载推荐用ENFI下载器"></a>百度网盘下载推荐用ENFI下载器</h4><p>链接：<a href="https://www.enfi.cloud/#/index" target="_blank" rel="noopener">https://www.enfi.cloud/#/index</a></p>
<h4 id="串口调试助手"><a href="#串口调试助手" class="headerlink" title="串口调试助手"></a>串口调试助手</h4><p>链接：<a href="https://pan.baidu.com/s/1KAisgybEesC8fMTwJ-oK3w" target="_blank" rel="noopener">https://pan.baidu.com/s/1KAisgybEesC8fMTwJ-oK3w</a><br>提取码：au8d</p>
<h4 id="Socktools"><a href="#Socktools" class="headerlink" title="Socktools"></a>Socktools</h4><p>链接：<a href="https://pan.baidu.com/s/1lXWZWLjt9LE4xxCjK873-Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1lXWZWLjt9LE4xxCjK873-Q</a><br>提取码：v5qn</p>
<h4 id="NetFramework4-0"><a href="#NetFramework4-0" class="headerlink" title=".NetFramework4.0"></a>.NetFramework4.0</h4><p>链接：<a href="https://pan.baidu.com/s/1Hwdt4rEToEK4Ao4ljvmURA" target="_blank" rel="noopener">https://pan.baidu.com/s/1Hwdt4rEToEK4Ao4ljvmURA</a><br>提取码：wlfc</p>
<h4 id="虚拟串口"><a href="#虚拟串口" class="headerlink" title="虚拟串口"></a>虚拟串口</h4><p>链接：<a href="https://pan.baidu.com/s/1FrqtaKrp74EPmyvVqNOu6g" target="_blank" rel="noopener">https://pan.baidu.com/s/1FrqtaKrp74EPmyvVqNOu6g</a><br>提取码：wkv3</p>
<h4 id="VisualStudio2010"><a href="#VisualStudio2010" class="headerlink" title="VisualStudio2010"></a>VisualStudio2010</h4><p>链接：<a href="https://pan.baidu.com/s/1Z-EUIWWsJmUN22KS8QNKcg" target="_blank" rel="noopener">https://pan.baidu.com/s/1Z-EUIWWsJmUN22KS8QNKcg</a><br>提取码：rwpn</p>
<h4 id="SQLServer2008"><a href="#SQLServer2008" class="headerlink" title="SQLServer2008"></a>SQLServer2008</h4><p>链接：<a href="https://pan.baidu.com/s/15hGavjba8ewaFxlyd_K-dw" target="_blank" rel="noopener">https://pan.baidu.com/s/15hGavjba8ewaFxlyd_K-dw</a><br>提取码：xdxa</p>
<h4 id="KepServer5-2"><a href="#KepServer5-2" class="headerlink" title="KepServer5.2"></a>KepServer5.2</h4><p>链接：<a href="https://pan.baidu.com/s/1zmX5Myqts5zzG3DTjairdg" target="_blank" rel="noopener">https://pan.baidu.com/s/1zmX5Myqts5zzG3DTjairdg</a><br>提取码：7dwx</p>
<h4 id="Postgresql9-5-3"><a href="#Postgresql9-5-3" class="headerlink" title="Postgresql9.5.3"></a>Postgresql9.5.3</h4><p>链接：<a href="https://pan.baidu.com/s/1NA4aNTu9CGmAEYd9aeo-Gg" target="_blank" rel="noopener">https://pan.baidu.com/s/1NA4aNTu9CGmAEYd9aeo-Gg</a><br>提取码：l9h6</p>
<h4 id="Setup-Npgsql-2-2-3-0-r2-net40"><a href="#Setup-Npgsql-2-2-3-0-r2-net40" class="headerlink" title="Setup_Npgsql-2.2.3.0-r2-net40"></a>Setup_Npgsql-2.2.3.0-r2-net40</h4><p>链接：<a href="https://pan.baidu.com/s/1wLBTi8vgJUCvlqO8HvorOQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1wLBTi8vgJUCvlqO8HvorOQ</a><br>提取码：yv4h</p>
<h4 id="Orical-10g-Client"><a href="#Orical-10g-Client" class="headerlink" title="Orical 10g Client"></a>Orical 10g Client</h4><p>链接：<a href="https://pan.baidu.com/s/1btHhUl-ataDjq6J7KAWfuA" target="_blank" rel="noopener">https://pan.baidu.com/s/1btHhUl-ataDjq6J7KAWfuA</a><br>提取码：ks71</p>
<h4 id="psqlodbc-x86"><a href="#psqlodbc-x86" class="headerlink" title="psqlodbc_x86"></a>psqlodbc_x86</h4><p>链接：<a href="https://pan.baidu.com/s/19FKNrVT4CxO5yHyvhVayOw" target="_blank" rel="noopener">https://pan.baidu.com/s/19FKNrVT4CxO5yHyvhVayOw</a><br>提取码：9yud</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>安装包</tag>
      </tags>
  </entry>
  <entry>
    <title>CSharp Static</title>
    <url>/CSharp%20Static.html</url>
    <content><![CDATA[<p>静态方法只能访问类的静态成员，不能访问类的非静态成员；<br>非静态方法可以访问类的静态成员，也可以访问类的非静态成员；<br>静态方法不能使用实例来调用，只能使用类名来调用。</p>
<a id="more"></a>
<h4 id="static"><a href="#static" class="headerlink" title="static"></a>static</h4><h5 id="静态全局变量"><a href="#静态全局变量" class="headerlink" title="静态全局变量"></a>静态全局变量</h5><blockquote>
<p>特点：</p>
<blockquote>
<p>1、该变量在全局数据区分配内存。<br>2、初始化：如果不显式初始化，那么将被隐式初始化为0。</p>
</blockquote>
</blockquote>
<h5 id="静态局部变量"><a href="#静态局部变量" class="headerlink" title="静态局部变量"></a>静态局部变量</h5><blockquote>
<p>特点：</p>
<blockquote>
<p>1、该变量在全局数据区分配内存。<br>2、初始化：如果不显式初始化，那么将被隐式初始化为0。<br>3、<strong>它始终驻留在全局数据区，直到程序运行结束。但其作用域为局部作用域，当定义它的函数或语句块结束时，其作用域随之结束。</strong></p>
</blockquote>
</blockquote>
<h5 id="静态数据成员"><a href="#静态数据成员" class="headerlink" title="静态数据成员"></a>静态数据成员</h5><blockquote>
<p>内存分配：在程序的全局数据区分配。<br>初始化和定义：</p>
<blockquote>
<p>1、静态数据成员定义时要分配空间，所以不能在类声明中定义。<br>2、为了避免在多个使用该类的源文件中，对其重复定义，所以，不能在类的头文件中定义。<br>3、静态数据成员因为程序一开始运行就必需存在，所以其初始化的最佳位置在类的内部实现。</p>
</blockquote>
</blockquote>
<blockquote>
<p>特点</p>
<blockquote>
<p>对相于 public,protected,private 关键字的影响它和普通数据成员一样，因为其空间在全局数据区分配，属于所有本类的对象共享，所以，它不属于特定的类对象，在没产生类对象时其作用域就可见，即在没有产生类的实例时，我们就可以操作它。</p>
</blockquote>
</blockquote>
<blockquote>
<p>访问形式</p>
<blockquote>
<p>类对象名.静态数据成员名</p>
</blockquote>
</blockquote>
<p>静态数据成员，主要用在类的所有实例都拥有的属性上。比如，对于一个存款类，帐号相对于每个实例都是不同的，但每个实例的利息是相同的。所以，应该把利息设为存款类的静态数据成员。这有两个好处，第一，不管定义多少个存款类对象，利息数据成员都共享分配在全局区的内存，所以节省存贮空间。第二，一旦利息需要改变时，只要改变一次，则所有存款类对象的利息全改变过来了，因为它们实际上是共用一个东西。</p>
<h5 id="静态成员函数"><a href="#静态成员函数" class="headerlink" title="静态成员函数"></a>静态成员函数</h5><blockquote>
<p>特点：</p>
<blockquote>
<p>1、静态成员函数与类相联系，不与类的对象相联系。<br>2、静态成员函数不能访问非静态数据成员。原因很简单，非静态数据成员属于特定的类实例。</p>
</blockquote>
</blockquote>
<blockquote>
<p>作用：</p>
<blockquote>
<p>主要用于对静态数据成员的操作。</p>
</blockquote>
</blockquote>
<blockquote>
<p>调用形式：</p>
<blockquote>
<p>类对象名.静态成员函数名（）</p>
</blockquote>
</blockquote>
<h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><p>静态方法只能访问类的静态成员，不能访问类的非静态成员；<br>非静态方法可以访问类的静态成员，也可以访问类的非静态成员；<br>静态方法不能使用实例来调用，只能使用类名来调用。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> i = getNum();</span><br><span class="line"><span class="keyword">int</span> j = getNum();</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getNum</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">"i=&#123;0&#125;"</span>,i);</span><br><span class="line">    Console.WriteLine(<span class="string">"j=&#123;0&#125;"</span>, <span class="keyword">new</span> class1().j);</span><br><span class="line">    Console.Read();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>分析：<code>Console.WriteLine(&quot;i={0}&quot;,i);</code>这里<code>i</code>是<code>static</code>变量，而且类<code>class1</code>是第一次被引用，要先为<code>class1</code>里面所有的<code>static</code>变量分配内存。尽管现在有超线程技术，但是指令在逻辑还是一条一条的按顺序执行的，所以先为<code>static int i</code>分配内存，并且在该内存中保持<code>int</code>的缺省值<code>0</code>，接着再为<code>static</code> <code>int num</code> 变量分配内存，值当然也为<code>0</code>。</p>
<p>然后执行第二步，为变量赋值：先为<code>static int i</code>变量赋值，<code>i＝getNum()</code>，看getNum里面的代码，就是<code>return num</code>，这个时候<code>num</code>的值是<code>0</code>，于是<code>i</code>就为<code>0</code>了。然后对变量<code>num</code>赋值，<code>num＝1；</code>这行代码执行后，<code>num</code>就为<code>1</code>了。</p>
<h5 id="static的优点是什么？为什么要使用static-变量或函数？？"><a href="#static的优点是什么？为什么要使用static-变量或函数？？" class="headerlink" title="static的优点是什么？为什么要使用static 变量或函数？？"></a>static的优点是什么？为什么要使用static 变量或函数？？</h5><p>有一些频繁使用的东西，如果你每次使用都重新<code>new</code>一下，那么这个开销可能会很高，如果使用<code>static</code>，一直放在内存中，那么想用就直接用，而不需要重新<code>new</code>一块空间初始化数据。那么<code>static</code>就是为了实现一个系统的缓存作用的，其生命周期直到应用程序退出结束。</p>
<p>静态成员包括静态字段和静态属性，静态成员和类相关联，不依赖于对象而存在，只能由类访问，而不能由对象访问；</p>
<p>静态成员属于类所有，无认创建多少实例对象，静态成员在内存中只有一份；实例成员属于类的实例所有，每创建一个实例对象，实例成员都会在内存中分配一块内存区域。<br>所以静态成员一般用于存放共享的数据段，如数据库连接字符串等。</p>
<p>一个类如果只包含静态成员和静态方法，则该类可以定义为静态类，给类加上<code>static</code>修饰符；</p>
<h5 id="静态方法和非静态方法："><a href="#静态方法和非静态方法：" class="headerlink" title="静态方法和非静态方法："></a>静态方法和非静态方法：</h5><p>一、性能上：静态方法和实例方法差别不大。所有方法，不管是静态方法还是实例方法，都是在JIT加载类时分配内存，不同的是静态方法以类名引用，而实例方法对对象实例引用。创建实例时，不会再为类的方法分配内存，所有的实例对象共用一个类的方法代码。因此静态方法和实例方法的调用，在性能上的差别微乎其微。</p>
<p>二、静态方法只能由类访问；实例方法只能由对象访问。</p>
<blockquote>
<p>优点：</p>
<blockquote>
<p>1、静态变量在类载入时，就装入内存<br>2、使用时不用 New 就意味的不必 创建类中 所有对象，就可以调用 某个方法</p>
</blockquote>
</blockquote>
<blockquote>
<p>缺点：</p>
<blockquote>
<p>垃圾回收机制 不能 回收 静态变量，静态类变量 会常驻内存</p>
</blockquote>
</blockquote>
<h5 id="c-中静态类的优缺点"><a href="#c-中静态类的优缺点" class="headerlink" title="c#中静态类的优缺点"></a>c#中静态类的优缺点</h5><blockquote>
<p>缺点：</p>
<blockquote>
<p>1、整个类型在程序运行期间只加载一次。 这样是对于那些经常使用的类型来说的，那就不用每次使用前都先加载。效率高些。但是对那些不常用的类型来说。<br>2、如果是静态类型，那就要一直占用相当的内存；一直到程序停止。或者应用程序域被卸载。所以应该只对那些常用的类型定义成静态类型。</p>
</blockquote>
</blockquote>
<blockquote>
<p>优点：</p>
<blockquote>
<p>1、它们仅包含静态成员。<br>2、它们不能被实例化。<br>3、它们是密封的。<br>4、它们不能包含实例构造函数（C# 编程指南）。</p>
</blockquote>
</blockquote>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>static</tag>
      </tags>
  </entry>
  <entry>
    <title>IBM MQ</title>
    <url>/IBM%20MQ.html</url>
    <content><![CDATA[<center>写在前面</center>
文中代码部分参考
https://blog.csdn.net/java_sparrow/article/details/80626705

<p><strong>若只做客户端部分的设计不需要安装客户端</strong></p>
<p>网上关于IBMMQ相关资源实在太少，感谢前人的努力，站在前人的肩膀实在上太舒服了</p>
<a id="more"></a>
<h2 id="IBMMQ-软件安装设置"><a href="#IBMMQ-软件安装设置" class="headerlink" title="IBMMQ 软件安装设置"></a>IBMMQ 软件安装设置</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装包(WebSphereMQ8.0)已上传网盘，下载后直接安装即可。<br>链接：<a href="https://pan.baidu.com/s/1P9Dz74tvf8_SExH0Dl0hHA" target="_blank" rel="noopener">https://pan.baidu.com/s/1P9Dz74tvf8_SExH0Dl0hHA</a><br>提取码：0a87</p>
<h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><p>下文中未提到的部分默认参数即可</p>
<h4 id="创建队列管理器"><a href="#创建队列管理器" class="headerlink" title="创建队列管理器"></a>创建队列管理器</h4><p><img src="IBM%20MQ/QM.PNG" alt></p>
<h5 id="设置侦听端口"><a href="#设置侦听端口" class="headerlink" title="设置侦听端口"></a>设置侦听端口</h5><p><img src="IBM%20MQ/QM3.png" alt></p>
<h4 id="创建通道"><a href="#创建通道" class="headerlink" title="创建通道"></a>创建通道</h4><p><img src="IBM%20MQ/CHANNEL.PNG" alt></p>
<h4 id="创建队列"><a href="#创建队列" class="headerlink" title="创建队列"></a>创建队列</h4><p><img src="IBM%20MQ/Q.PNG" alt></p>
<h4 id="添加用户组"><a href="#添加用户组" class="headerlink" title="添加用户组"></a>添加用户组</h4><p>将当前用户添加到IBMMQ管理组<br><img src="IBM%20MQ/USER.png" alt></p>
<p>其中对象名为下图所示安装IBMMQ后自动创建的组mqm<br><img src="IBM%20MQ/GROUP.png" alt></p>
<p>至此，IBMMQ环境设置完毕</p>
<h2 id="C-连接MQ"><a href="#C-连接MQ" class="headerlink" title="C# 连接MQ"></a>C# 连接MQ</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h4 id="已安装IBMMQ软件"><a href="#已安装IBMMQ软件" class="headerlink" title="已安装IBMMQ软件"></a>已安装IBMMQ软件</h4><p>程序中引用：amqmdnet.dll库文件（IBMMQ客户端安装后生成）<br>路径分别为：<br>C:\Program Files\IBM\WebSphere MQ\bin\amqmdnet.dll<br>程序中添加using IBM.WMQ;<br>程序安装完成后可能缺少mqdc.dll文件，可下载后放在安装路径<br>C:\Program Files\IBM\WebSphere MQ\bin64 下<br>链接：<a href="https://pan.baidu.com/s/19XMuE1q46K1E3BfO8lPPIQ" target="_blank" rel="noopener">https://pan.baidu.com/s/19XMuE1q46K1E3BfO8lPPIQ</a><br>提取码：5qhq</p>
<h4 id="免安装IBMMQ"><a href="#免安装IBMMQ" class="headerlink" title="免安装IBMMQ"></a>免安装IBMMQ</h4><p>准备好amqmdnet.dll在程序中直接引用即可下载地址：<br>链接：<a href="https://pan.baidu.com/s/1Qb4bdDpqXmyQO5_Jx4hmnA" target="_blank" rel="noopener">https://pan.baidu.com/s/1Qb4bdDpqXmyQO5_Jx4hmnA</a><br>提取码：soua<br>若缺少其他文件请自取：IBMMQ8.0安装路径Bin文件夹<br>链接：<a href="https://pan.baidu.com/s/1vdg4J2I1-1qLcHh_hnfXBA" target="_blank" rel="noopener">https://pan.baidu.com/s/1vdg4J2I1-1qLcHh_hnfXBA</a><br>提取码：kgi9</p>
<h3 id="C-代码"><a href="#C-代码" class="headerlink" title="C#代码"></a>C#代码</h3><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><h5 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h5><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> MQQueueManager qMgr;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> CCSID = <span class="number">437</span>;</span><br><span class="line">MQEnvironment.Hostname = <span class="string">"10.91.232.46"</span>;</span><br><span class="line">MQEnvironment.Channel = <span class="string">"CHANNEL1"</span>;</span><br><span class="line">MQEnvironment.Port = <span class="number">8802</span>;</span><br><span class="line">MQEnvironment.UserId = <span class="string">"user"</span>;</span><br><span class="line">MQEnvironment.Password = <span class="string">"Password"</span>;</span><br><span class="line"><span class="comment">// 队列管理器</span></span><br><span class="line">qMgr = <span class="keyword">new</span> MQQueueManager(<span class="string">"LG_2IN1_QMGR"</span>);</span><br></pre></td></tr></table></figure>

<h5 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h5><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> MQQueueManager qMgr;</span><br><span class="line">Hashtable queueProperties = <span class="keyword">new</span> Hashtable();</span><br><span class="line">queueProperties[MQC.TRANSPORT_PROPERTY] = MQC.TRANSPORT_MQSERIES_MANAGED;</span><br><span class="line">queueProperties[MQC.HOST_NAME_PROPERTY] = <span class="string">"192.168.1.9"</span>;</span><br><span class="line">queueProperties[MQC.PORT_PROPERTY] = <span class="number">8802</span>;</span><br><span class="line">queueProperties[MQC.CHANNEL_PROPERTY] = <span class="string">"CHANNEL1"</span>;</span><br><span class="line">queueProperties[MQC.USER_ID_PROPERTY] = <span class="string">"user"</span>;</span><br><span class="line">queueProperties[MQC.PASSWORD_PROPERTY] = <span class="string">"Password"</span>;</span><br><span class="line">queueProperties[MQC.CCSID_PROPERTY] = <span class="string">"1381"</span>;</span><br><span class="line">qMgr = <span class="keyword">new</span> MQQueueManager(<span class="string">"LG_2IN1_QMGR"</span>, queueProperties);</span><br></pre></td></tr></table></figure>

<h4 id="发送数据"><a href="#发送数据" class="headerlink" title="发送数据"></a>发送数据</h4><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendMsg</span>(<span class="params">String msgStr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> openOptions = MQC.MQOO_INPUT_AS_Q_DEF | MQC.MQOO_OUTPUT | MQC.MQOO_INQUIRE;</span><br><span class="line">    MQQueue queue = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 建立通道的连接</span></span><br><span class="line">        queue = qMgr.AccessQueue(queueString, openOptions, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        MQMessage msg = <span class="keyword">new</span> MQMessage();<span class="comment">// 要写入队列的消息</span></span><br><span class="line">        msg.Format = MQC.MQFMT_STRING;</span><br><span class="line">        msg.CharacterSet = CCSID;</span><br><span class="line">        msg.Encoding = CCSID;</span><br><span class="line">        <span class="comment">// msg.writeObject(msgStr);</span></span><br><span class="line">        msg.WriteString(msgStr); <span class="comment">//将消息写入消息对象中</span></span><br><span class="line">        MQPutMessageOptions pmo = <span class="keyword">new</span> MQPutMessageOptions();</span><br><span class="line">        msg.Expiry = <span class="number">-1</span>; <span class="comment">// 设置消息用不过期</span></span><br><span class="line">        queue.Put(msg, pmo);<span class="comment">// 将消息放入队列</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        XmlFO.LogOut(<span class="string">"IBMMQ"</span>,e.ToString());</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (queue != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                queue.Close();</span><br><span class="line">                <span class="comment">// qMgr.disconnect();</span></span><br><span class="line">                XmlFO.LogOut(<span class="string">"IBMMQ"</span>,<span class="string">"写入的消息为："</span> + msgStr);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (MQException e) &#123;</span><br><span class="line">                XmlFO.LogOut(<span class="string">"IBMMQ"</span>, e.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>
<h4 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h4><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMsg</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> openOptions = MQC.MQOO_INPUT_AS_Q_DEF | MQC.MQOO_OUTPUT | MQC.MQOO_INQUIRE;</span><br><span class="line">    MQQueue queue = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        queue = qMgr.accessQueue(queueString, openOptions, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"==========================="</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"该队列当前的深度为:"</span> + queue.getCurrentDepth());</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"==========================="</span>);</span><br><span class="line">        <span class="keyword">int</span> depth = queue.getCurrentDepth();</span><br><span class="line">        <span class="comment">// 将队列的里的消息读出来</span></span><br><span class="line">        <span class="keyword">while</span> (depth-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            MQMessage msg = <span class="keyword">new</span> MQMessage();<span class="comment">// 要读的队列的消息</span></span><br><span class="line">            MQGetMessageOptions gmo = <span class="keyword">new</span> MQGetMessageOptions();</span><br><span class="line">            queue.<span class="keyword">get</span>(msg, gmo);</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="string">"消息的大小为："</span> + msg.getDataLength());</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="string">"消息的内容："</span> + msg.readStringOfByteLength(msg.getDataLength()));</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="string">"---------------------------"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        XmlFO.LogOut(<span class="string">"IBMMQ"</span>, e.ToString());</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (queue != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                queue.close();</span><br><span class="line">                qMgr.disconnect();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (MQException e) &#123;</span><br><span class="line">                XmlFO.LogOut(<span class="string">"IBMMQ"</span>, e.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>
]]></content>
      <categories>
        <category>MQ</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>IBMMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>诊断指令说明--OBD模块</title>
    <url>/%E8%AF%8A%E6%96%AD%E6%8C%87%E4%BB%A4%E8%AF%B4%E6%98%8E--OBD%E6%A8%A1%E5%9D%97.html</url>
    <content><![CDATA[<h2 id="通讯测试"><a href="#通讯测试" class="headerlink" title="通讯测试"></a>通讯测试</h2><p>串口测试车辆通讯问题<br>SendID：<code>0730</code>；RecvID：<code>0738</code><br><code>33 33 07 38 FF FF 88 88</code> 设置滤波 只接收ID为<code>0738</code>的指令<br><code>55 55 07 30 02 10 03 00 00 00 00 00 88 88</code> 发送指令 发送ID为<code>0730</code><br>其中：<font color="#FF0000"> 02 </font> <font color="#00FF00"> 10 03 </font> <font color="#000000"> 00 00 00 00 00 </font>为CAN指令，第一位为长度位。<br>为什么用55指令测试通讯：</p>
<blockquote>
<p>55指令中不包含CAN通讯等待的时间参数，不会出现第三版协议因超时时间较短而导致收不到车辆回复。</p>
</blockquote>
<h2 id="第三版协议指令说明"><a href="#第三版协议指令说明" class="headerlink" title="第三版协议指令说明"></a>第三版协议指令说明</h2><h3 id="发送数据"><a href="#发送数据" class="headerlink" title="发送数据"></a>发送数据</h3><p>F0 F0<br>XX XX// 数据长度<br>XX //指令类型:<br>&emsp;&emsp;10: CAN数据（针对ISO15765协议而定）<br>&emsp;&emsp;13: 设置CAN通信滤波ID<br>&emsp;&emsp;14: 只发送指定长度(小于等于8)CAN数据<br>&emsp;&emsp;15:设置CAN通信波特率及标准帧拓展帧<br>&emsp;&emsp;20 :K线数据<br>&emsp;&emsp;25: 设置K线初始化波特率及通信波特率<br>&emsp;&emsp;05: 设置超时时间 CAN通讯短等待回复时间，默认100ms，长等待时间，默认5000ms<br>XX XX XX XX //本机ID<br>XX XX XX XX //目标ID<br>XX n…//数据<br>FF//结尾</p>
<h3 id="接收数据"><a href="#接收数据" class="headerlink" title="接收数据"></a>接收数据</h3><p>0F 0F<br>XX XX// 数据长度<br>XX //指令类型:<br>&emsp;&emsp;10: CAN数据（针对ISO15765协议而定）<br>&emsp;&emsp;13: 设置CAN通信滤波ID<br>&emsp;&emsp;14: 接收到已设置了CAN通信滤波ID的CAN数据<br>&emsp;&emsp;15:设置CAN通信波特率及标准帧拓展帧<br>&emsp;&emsp;20: K线数据<br>&emsp;&emsp;25: 设置K线初始化波特率及通信波特率<br>&emsp;&emsp;05: 设置通信响应超时时间成功的响应指令<br>&emsp;&emsp;7F: 收到错误回复，比如超时、数据格式错误等<br>XX XX XX XX //本机ID<br>XX XX XX XX //目标ID<br>XX n…//数据<br>FF//结尾</p>
<p>示例：<br>发送：<code>F0 F0 00 0C 10 00 00 07 20 00 00 07 30 10 03 FF</code><br>接收：<code>0F 0F 00 10 10 00 00 07 20 00 00 07 30 50 03 00 32 01 F4 FF</code></p>
<h3 id="设置指定滤波ID及读取超时时间-0x12"><a href="#设置指定滤波ID及读取超时时间-0x12" class="headerlink" title="设置指定滤波ID及读取超时时间(0x12)"></a>设置指定滤波ID及读取超时时间(0x12)</h3><p>发送：<code>F0 F0 00 07 12 00 00 07 30 14 FF</code><br>接收：若CAN总线上指定滤波ID(<code>00 00 07 20</code>)对应的数据及超时时间（20*10=200ms），则返回：<br><code>0F 0F 00 0E 12 00 00 07 30 00 01 02 03 04 05 06 07 FF</code> //(<code>00 00 07 30</code> 目标ID)<br>否则返回超时提示；</p>
<h3 id="设置滤波ID-0x13"><a href="#设置滤波ID-0x13" class="headerlink" title="设置滤波ID(0x13)"></a>设置滤波ID(0x13)</h3><p>发送：<code>F0 F0 00 0A 13 00 00 07 20 FF FF FF FF FF</code><br>接收：若CAN总线上有设置的ID对应的数据，则返回：<br><code>0F 0F 00 0E 14 00 00 07 30 50 03 00 32 01 F4 FF</code>//(<code>00 00 07 30</code> 目标ID)<br>否则无返回；</p>
<h3 id="只发送单帧数据-0x14"><a href="#只发送单帧数据-0x14" class="headerlink" title="只发送单帧数据(0x14)"></a>只发送单帧数据(0x14)</h3><p>发送：<code>F0 F0 00 0E 14 00 00 07 20 00 00 00 00 12 34 56 78 FF</code><br>发送的目标ID: <code>00 00 07 20</code>  发送的CAN数据: <code>12 34 56 78</code></p>
<h3 id="设置波特率及标准帧拓展帧（0x15）"><a href="#设置波特率及标准帧拓展帧（0x15）" class="headerlink" title="设置波特率及标准帧拓展帧（0x15）"></a>设置波特率及标准帧拓展帧（0x15）</h3><p>第6字节及第7字节表示设置波特率大小，单位kbps<br>第8字节及第9字节表示设置标准帧或拓展帧：<code>00 00</code> 标准帧 <code>00 01</code> 拓展帧<br>接收数据01代表设置成功，无返回或者返回其他字节数目则设置失败，请注意检测数据格式。<br>比如<br>发送：<code>F0 F0 00 06 15 01 F4 00 01 FF</code>//设置波特率500K，拓展帧<br>接收：<code>0F 0F 00 03 15 01 FF</code>//设置成功</p>
<h3 id="设置波特率及标准帧拓展帧，无返回确认指令（针对0x15）-0x16"><a href="#设置波特率及标准帧拓展帧，无返回确认指令（针对0x15）-0x16" class="headerlink" title="设置波特率及标准帧拓展帧，无返回确认指令（针对0x15）(0x16)"></a>设置波特率及标准帧拓展帧，无返回确认指令（针对0x15）(0x16)</h3><p>第6字节及第7字节表示设置波特率大小，单位kbps<br>第8字节及第9字节表示设置标准帧或拓展帧：<code>00 00</code> 标准帧 <code>00 01</code> 拓展帧<br>设置成功与否，都不返回数据<br>发送：<code>F0 F0 00 06 16 01 F4 00 01 FF</code>//设置波特率500K，拓展帧<br>接收：无</p>
<h3 id="K-Line设置初始波特率及正常通讯波特率（0x25）"><a href="#K-Line设置初始波特率及正常通讯波特率（0x25）" class="headerlink" title="K-Line设置初始波特率及正常通讯波特率（0x25）"></a>K-Line设置初始波特率及正常通讯波特率（0x25）</h3><p>第6字节及第7字节表示设置初始波特率（单位：bps），默认200bps<br>第8字节及第9字节表示设置正常通讯波特率（单位：bps），默认10400bps<br>接收数据01代表设置成功，无返回或者返回其他字节数目则设置失败，请注意检测数据格式。</p>
<blockquote>
<p>发送：<code>F0 F0 00 06 25 00 C8 28 A0 FF</code>//设置波初始波特率200bps及正常通讯波特率10400bps<br>接收：<code>0F 0F 00 03 25 01 FF</code>//设置成功</p>
</blockquote>
<h3 id="K线指令（0x20）"><a href="#K线指令（0x20）" class="headerlink" title="K线指令（0x20）"></a>K线指令（0x20）</h3><p>发送：<code>F0 F0 00 08 20 80 28 F1 01 81 1b FF</code><br>接收：<code>0F 0F 00 0A 20 80 F1 28 03 C1 6B 8F 57 FF</code></p>
<h3 id="通讯错误的回复指令（0x7F）"><a href="#通讯错误的回复指令（0x7F）" class="headerlink" title="通讯错误的回复指令（0x7F）"></a>通讯错误的回复指令（0x7F）</h3><p><code>0F 0F 00 03 7F XX FF</code></p>
<h4 id="故障码说明"><a href="#故障码说明" class="headerlink" title="故障码说明"></a>故障码说明</h4><table>
<thead>
<tr>
<th align="center"><code>XX</code>故障码(Hex)</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>00</code></td>
<td align="center">等待接收或延时发送</td>
</tr>
<tr>
<td align="center"><code>02</code></td>
<td align="center">发送单帧100ms超时未收到CAN数据</td>
</tr>
<tr>
<td align="center"><code>03</code></td>
<td align="center">5000ms超时提示</td>
</tr>
<tr>
<td align="center"><code>04</code></td>
<td align="center">接收多帧时，未收到数据100ms超时提示</td>
</tr>
<tr>
<td align="center"><code>05</code></td>
<td align="center">读取指定ID数据，超时提示</td>
</tr>
<tr>
<td align="center"><code>11</code></td>
<td align="center">接收多帧时未收到流控帧提示</td>
</tr>
<tr>
<td align="center"><code>12</code></td>
<td align="center">接收到的CAN数据长度大于7错误提示</td>
</tr>
<tr>
<td align="center"><code>13</code></td>
<td align="center">接收到未符合要求的数据类型</td>
</tr>
<tr>
<td align="center"><code>21</code></td>
<td align="center">发送Kline数据500ms超时未收到CAN数据</td>
</tr>
<tr>
<td align="center"><code>F2</code></td>
<td align="center">接收到PC数据不是以0xFF结尾</td>
</tr>
<tr>
<td align="center"><code>F1</code></td>
<td align="center">CAN数据超过4096个字节</td>
</tr>
<tr>
<td align="center"><code>2A</code></td>
<td align="center">K线初始化后未接收到”格式”字节</td>
</tr>
<tr>
<td align="center"><code>2B</code></td>
<td align="center">K线初始化后自反馈是未接收到指定长度K线数据</td>
</tr>
<tr>
<td align="center"><code>2C</code></td>
<td align="center">K线未接收到0x80字节</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>诊断指令</tag>
        <tag>CAN</tag>
      </tags>
  </entry>
  <entry>
    <title>IDMDownload</title>
    <url>/IDMDownload.html</url>
    <content><![CDATA[<center>写在前面</center>
Google Chrome 利用IDM下载器下载资源，可下载百度网盘资源
<a id="more"></a>

<h3 id="安装Google-Chrome"><a href="#安装Google-Chrome" class="headerlink" title="安装Google Chrome"></a>安装Google Chrome</h3><h3 id="安装浏览器插件Tampermonkey"><a href="#安装浏览器插件Tampermonkey" class="headerlink" title="安装浏览器插件Tampermonkey"></a>安装浏览器插件Tampermonkey</h3><h3 id="安装百度网盘直接下载助手脚本"><a href="#安装百度网盘直接下载助手脚本" class="headerlink" title="安装百度网盘直接下载助手脚本"></a>安装百度网盘直接下载助手脚本</h3><h3 id="安装IDM-integration-Module"><a href="#安装IDM-integration-Module" class="headerlink" title="安装IDM integration Module"></a>安装IDM integration Module</h3>]]></content>
  </entry>
  <entry>
    <title>国六排放指令说明</title>
    <url>/%E5%9B%BD%E5%85%AD%E6%8E%92%E6%94%BE%E6%8C%87%E4%BB%A4%E8%AF%B4%E6%98%8E.html</url>
    <content><![CDATA[<center>写在前面</center>
&emsp; 国六排放测试过程中常用通讯指令说明

<p>详细资料请参考ISO15031-5或J1979-DA</p>
<a id="more"></a>

<h2 id="ISO15031-5"><a href="#ISO15031-5" class="headerlink" title="ISO15031-5"></a>ISO15031-5</h2><h3 id="15765-4"><a href="#15765-4" class="headerlink" title="15765-4"></a>15765-4</h3><h4 id="Service-01"><a href="#Service-01" class="headerlink" title="Service 01"></a>Service 01</h4><p>请求当前动力系统诊断数据<br>01后最多可以读取6个PID(Parameter Identification)<br>请求：01 PID PID PID PID PID PID<br>回复：41 PID Data PID Data PID Data PID Data PID Data PID Data</p>
<h5 id="PID"><a href="#PID" class="headerlink" title="PID"></a>PID</h5><table>
<thead>
<tr>
<th align="center">PID</th>
<th align="center">说明</th>
<th align="center">数据长度（byte）</th>
<th align="center">计算</th>
</tr>
</thead>
<tbody><tr>
<td align="center">00</td>
<td align="center">查看支持的PID</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">01</td>
<td align="center">清除故障诊断码后的监视器状态</td>
<td align="center">4</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">04</td>
<td align="center">负载值</td>
<td align="center">1</td>
<td align="center">y=x/255</td>
</tr>
<tr>
<td align="center"><font color="#FF0000"> 05  </font></td>
<td align="center"><font color="#FF0000"> 冷却液温度  </font></td>
<td align="center">1</td>
<td align="center">y=x-40</td>
</tr>
<tr>
<td align="center">0B</td>
<td align="center">进气歧管绝对压力</td>
<td align="center">1</td>
<td align="center">y=x</td>
</tr>
<tr>
<td align="center"><font color="#FF0000"> 0C  </font></td>
<td align="center"><font color="#FF0000"> 发动机转速  </font></td>
<td align="center">2</td>
<td align="center">y=x/4</td>
</tr>
<tr>
<td align="center"><font color="#FF0000"> 0D  </font></td>
<td align="center"><font color="#FF0000"> 车速  </font></td>
<td align="center">1</td>
<td align="center">y=x</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">空气流量</td>
<td align="center">2</td>
<td align="center">y=x/100</td>
</tr>
<tr>
<td align="center">11</td>
<td align="center">节气门位置</td>
<td align="center">1</td>
<td align="center">y=x/255</td>
</tr>
<tr>
<td align="center">44</td>
<td align="center">Commanded Equivalence Ratio</td>
<td align="center">2</td>
<td align="center">y=2x/65535</td>
</tr>
<tr>
<td align="center"><font color="#FF0000"> 5C  </font></td>
<td align="center"><font color="#FF0000"> 油温  </font></td>
<td align="center">1</td>
<td align="center">y=x-40</td>
</tr>
<tr>
<td align="center">6A</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">6E</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">78</td>
<td align="center">尾气温度</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">7A</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">83</td>
<td align="center">NOx传感器</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">85</td>
<td align="center">NOx控制系统</td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<h6 id="PID-00"><a href="#PID-00" class="headerlink" title="PID 00"></a>PID 00</h6><p>请求：01 00<br>回复：</p>
<blockquote>
<p>41 00 A B C D //PID 01~20<br>41 20 A B C D //PID 21~40<br>41 40 A B C D //PID 41~60<br>41 60 A B C D //PID 61~80<br>41 80 A B C D //PID 81~A0<br>41 A0 A B C D //PID A1~C0<br>41 C0 A B C D //PID C1~E0<br>41 E0 A B C D //PID E1~FF</p>
</blockquote>
<p><code>41 00 A B C D</code><br>Data A bit7 ~ Data D bit0 表示是否支持PID 01~20</p>
<p>如：<code>41 00 90 39 00 00</code><br>Data A = 90 = 1001 0000<br>bit7 = 1; bit4 = 1<br>表示支持 PID 01、PID 04<br>Data B = 39 = 0011 1001<br>bit5 = bit4 = bit3 = bit0 = 1<br>表示支持 PID 0B、PID 0C、PID 0D、PID 10</p>
<h4 id="Service-09"><a href="#Service-09" class="headerlink" title="Service 09"></a>Service 09</h4><h5 id="PID-1"><a href="#PID-1" class="headerlink" title="PID"></a>PID</h5><table>
<thead>
<tr>
<th align="center">PID</th>
<th align="center">说明</th>
<th align="center">数据长度（byte）</th>
<th align="center">计算</th>
</tr>
</thead>
<tbody><tr>
<td align="center">02</td>
<td align="center">VIN</td>
<td align="center">17</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">04</td>
<td align="center">Cal.ID</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">06</td>
<td align="center">Cal.CVN</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">08</td>
<td align="center">IPT</td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<h2 id="ISO27145"><a href="#ISO27145" class="headerlink" title="ISO27145"></a>ISO27145</h2><h4 id="Service-22"><a href="#Service-22" class="headerlink" title="Service 22"></a>Service 22</h4><p>22 F4 对应 ISO15031的01服务<br>22 F8 对应 ISO15031的09服务</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>ISO15031-5</tag>
        <tag>15765-4</tag>
      </tags>
  </entry>
  <entry>
    <title>CSharp调用SQL存储过程</title>
    <url>/CSharp%E8%B0%83%E7%94%A8SQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B.html</url>
    <content><![CDATA[<center>写在前面</center>
C# 执行SQLServer数据库中的存储过程，新增数据
<a id="more"></a>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">存储过程名：SP_Check_Equipotential</span><br><span class="line">	参数：</span><br><span class="line">		@Part2GNDInfo varchar(3000),<span class="comment">--</span></span><br><span class="line">		@Part2GND decimal(3,2),<span class="comment">--</span></span><br><span class="line">		@Resultflag int output,<span class="comment">--1保存成功  0保存失败</span></span><br><span class="line">		@ResultMessage varchar(4000)output<span class="comment">--返回success 或 错误信息</span></span><br><span class="line">	返回值：</span><br><span class="line">		@Resultflag int output,<span class="comment">--1保存成功  0保存失败</span></span><br><span class="line">		@ResultMessage varchar(4000)output<span class="comment">--返回success 或 错误信息</span></span><br></pre></td></tr></table></figure>

<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">SqlConnection DbConnection = <span class="keyword">new</span> SqlConnection(m_MESConnString);</span><br><span class="line">SqlCommand command = <span class="keyword">new</span> SqlCommand(<span class="string">"SP_Check_Equipotential"</span>, DbConnection);</span><br><span class="line">DbConnection.Open();</span><br><span class="line">InitCommand(<span class="keyword">ref</span> command);</span><br><span class="line">command.Parameters[<span class="string">"@Part2GNDInfo"</span>].Value = Part2GNDInfo;</span><br><span class="line">command.Parameters[<span class="string">"@Part2GND"</span>].Value = Convert.ToDecimal(mo2o(dr[<span class="string">"步骤一最大值"</span>],<span class="literal">true</span>));</span><br><span class="line">command.ExecuteNonQuery();</span><br><span class="line"><span class="keyword">int</span> result = command.Parameters[<span class="string">"@Resultflag"</span>].Value.zInt32();</span><br><span class="line"><span class="keyword">string</span> ResultMessage = command.Parameters[<span class="string">"@ResultMessage"</span>].Value.ToString();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">InitCommand</span>(<span class="params"><span class="keyword">ref</span> SqlCommand command</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    command.CommandType = CommandType.StoredProcedure;</span><br><span class="line">    command.Parameters.Add(<span class="string">"@Part2GNDInfo"</span>, SqlDbType.VarChar, <span class="number">3000</span>);</span><br><span class="line">    SqlParameter Part2GND = <span class="keyword">new</span> SqlParameter(<span class="string">"@Part2GND"</span>, SqlDbType.Decimal);</span><br><span class="line">    Part2GND.Precision = <span class="number">3</span>;</span><br><span class="line">    Part2GND.Scale = <span class="number">2</span>;</span><br><span class="line">    command.Parameters.Add(Part2GND);</span><br><span class="line">    command.Parameters.Add(<span class="string">"@Resultflag"</span>, SqlDbType.Int, <span class="number">1</span>);</span><br><span class="line">    command.Parameters[<span class="string">"@Resultflag"</span>].Direction = ParameterDirection.Output;</span><br><span class="line">    command.Parameters.Add(<span class="string">"@ResultMessage"</span>, SqlDbType.VarChar, <span class="number">4000</span>);</span><br><span class="line">    command.Parameters[<span class="string">"@ResultMessage"</span>].Direction = ParameterDirection.Output;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>存储过程</tag>
      </tags>
  </entry>
  <entry>
    <title>上汽通用五菱</title>
    <url>/%E4%B8%8A%E6%B1%BD%E9%80%9A%E7%94%A8%E4%BA%94%E8%8F%B1.html</url>
    <content><![CDATA[<center>写在前面</center>
上汽通用五菱现场跟其他现场程序主要区别在于`PlatABS`，及时记录每次更改。

<p>程序路径在<code>D:\BaiduNetdiskDownload\GX\Platforms2\PlatABS</code></p>
<a id="more"></a>

<h2 id="柳州"><a href="#柳州" class="headerlink" title="柳州"></a>柳州</h2><h3 id="20191125"><a href="#20191125" class="headerlink" title="20191125"></a>20191125</h3><p>在RBABS_SGMW增加齿讯学习</p>
<h2 id="青岛"><a href="#青岛" class="headerlink" title="青岛"></a>青岛</h2><h2 id="印尼"><a href="#印尼" class="headerlink" title="印尼"></a>印尼</h2>]]></content>
      <categories>
        <category>现场</category>
      </categories>
      <tags>
        <tag>上汽</tag>
        <tag>五菱</tag>
      </tags>
  </entry>
  <entry>
    <title>git command</title>
    <url>/git%20command.html</url>
    <content><![CDATA[<center>写在前面</center>

<a id="more"></a>
<h2 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h2><h3 id="Bash-常用命令"><a href="#Bash-常用命令" class="headerlink" title="Bash 常用命令"></a>Bash 常用命令</h3><table>
<thead>
<tr>
<th align="left">command</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">cd</td>
<td align="center">切换目录</td>
</tr>
<tr>
<td align="left">pwd</td>
<td align="center">查看当前目录</td>
</tr>
<tr>
<td align="left">ls(ll)</td>
<td align="center">查看当前目录文件</td>
</tr>
<tr>
<td align="left">touch file.*</td>
<td align="center">新建文件</td>
</tr>
<tr>
<td align="left">rm file.*</td>
<td align="center">删除文件</td>
</tr>
<tr>
<td align="left">mkdir fold</td>
<td align="center">新建文件夹</td>
</tr>
<tr>
<td align="left">rm -r fold</td>
<td align="center">删除文件夹</td>
</tr>
<tr>
<td align="left">mv file destfold file</td>
<td align="center">移动文件</td>
</tr>
<tr>
<td align="left">clear</td>
<td align="center">清屏</td>
</tr>
<tr>
<td align="left">history</td>
<td align="center">查看历史命令</td>
</tr>
</tbody></table>
<h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><h3 id="设置用户名与邮箱"><a href="#设置用户名与邮箱" class="headerlink" title="设置用户名与邮箱"></a>设置用户名与邮箱</h3><p><code>git config --global user.name &quot;Your Name&quot;</code></p>
<p><code>git config --global user.email &quot;email@example.com&quot;</code></p>
<table>
<thead>
<tr>
<th align="left">command</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">git init</td>
<td align="center">在指定路径下执行，创建本地仓库</td>
</tr>
<tr>
<td align="left">git config -l</td>
<td align="center">查看git环境详细配置</td>
</tr>
<tr>
<td align="left">git config –system –list</td>
<td align="center">查看系统config</td>
</tr>
<tr>
<td align="left">git config –global  –list</td>
<td align="center">查看当前用户（global）配置</td>
</tr>
<tr>
<td align="left">git config –local  –list</td>
<td align="center">查看当前仓库配置信息</td>
</tr>
<tr>
<td align="left">git add</td>
<td align="center">提交文件到暂存区，多个文件空格分开</td>
</tr>
<tr>
<td align="left">git commit</td>
<td align="center">提交到仓库分支</td>
</tr>
<tr>
<td align="left">git commit -m “说明”</td>
<td align="center">添加本次提交的说明便于查看更改记录</td>
</tr>
<tr>
<td align="left">git log</td>
<td align="center">历史版本信息 Git中版本用HEAD做标识，当前版本为HEAD，上一个版本是HEAD^</td>
</tr>
<tr>
<td align="left">git reset –hard HEAD^</td>
<td align="center">退回到上个版本</td>
</tr>
<tr>
<td align="left">git reset –hard commit_id</td>
<td align="center">HEAD 可用commit id前几位</td>
</tr>
<tr>
<td align="left">git reflog</td>
<td align="center">查看之前所有版本信息</td>
</tr>
<tr>
<td align="left">git status</td>
<td align="center">查看状态</td>
</tr>
<tr>
<td align="left">git diff HEAD – file</td>
<td align="center">查看工作区与版本库中的区别</td>
</tr>
<tr>
<td align="left">git checkout – file</td>
<td align="center">将工作区恢复到暂存区或版本库中的内容</td>
</tr>
<tr>
<td align="left">git reset HEAD file</td>
<td align="center">将暂存区恢复到版本库的内容</td>
</tr>
<tr>
<td align="left">git rm file</td>
<td align="center">删除文件</td>
</tr>
<tr>
<td align="left">git remote add origin <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:yourgithubname/Repositoryname.git</td>
<td align="center">关联远程库</td>
</tr>
<tr>
<td align="left">git push -u origin master</td>
<td align="center">将本地仓库推送到远程仓库master分支并关联本地master分支</td>
</tr>
<tr>
<td align="left">git push origin master</td>
<td align="center">推送到远程master分支</td>
</tr>
<tr>
<td align="left">git clone <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:githubname/Repositoryname.git</td>
<td align="center">clone到本地</td>
</tr>
<tr>
<td align="left">git branch bra</td>
<td align="center">创建bra分支</td>
</tr>
<tr>
<td align="left">git checkout bra</td>
<td align="center">切换到bra分支</td>
</tr>
<tr>
<td align="left">git checkout -b bra</td>
<td align="center">等效于上面两条指令</td>
</tr>
<tr>
<td align="left">git branch</td>
<td align="center">查看分支，当前分支用*标识，切换分支后提交到当前分支</td>
</tr>
<tr>
<td align="left">git checkout master</td>
<td align="center">切换到master分支</td>
</tr>
<tr>
<td align="left">git merge</td>
<td align="center">合并指定分支到当前分支</td>
</tr>
<tr>
<td align="left">git branch -d bra</td>
<td align="center">删除bra分支</td>
</tr>
<tr>
<td align="left">git switch -c bra</td>
<td align="center">创建并切换分支</td>
</tr>
<tr>
<td align="left">git switch master</td>
<td align="center">切换到master分支</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
  </entry>
  <entry>
    <title>Python learning - Script</title>
    <url>/Python%20learning%20-%20Script.html</url>
    <content><![CDATA[<center>写在前面</center>

<a id="more"></a>

<h2 id="例：获取Bilibili播放量"><a href="#例：获取Bilibili播放量" class="headerlink" title="例：获取Bilibili播放量"></a>例：获取Bilibili播放量</h2><div><div class="fold_hider"><div class="close hider_title">点击展开/折叠示例</div></div><div class="fold">
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="comment">#html = requests.get("https://www.bilibili.com/anime/index/#st=1&amp;order=2&amp;season_version=-1&amp;area=-1&amp;is_finish=-1&amp;copyright=-1&amp;season_status=-1&amp;season_month=-1&amp;year=-1&amp;style_id=-1&amp;sort=0&amp;page=1")</span></span><br><span class="line"><span class="comment">#html = urlopen("https://www.bilibili.com/anime/index/#st=1&amp;order=2&amp;season_version=-1&amp;area=-1&amp;is_finish=-1&amp;copyright=-1&amp;season_status=-1&amp;season_month=-1&amp;year=-1&amp;style_id=-1&amp;sort=0&amp;page=1")</span></span><br><span class="line"><span class="comment">#html.encoding = 'utf-8'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"test.csv"</span>, <span class="string">"w+"</span>) <span class="keyword">as</span> csvfile:</span><br><span class="line">    writer = csv.writer(csvfile, delimiter=<span class="string">','</span>)</span><br><span class="line">    writer.writerow([<span class="string">"Name"</span>, <span class="string">"Viewers"</span>])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">        option = webdriver.ChromeOptions()</span><br><span class="line">        <span class="comment"># 设置不加载页面</span></span><br><span class="line">        option.add_argument(<span class="string">"headless"</span>)</span><br><span class="line">        <span class="comment"># 设置默认编码为 utf-8</span></span><br><span class="line">        option.add_argument(<span class="string">'lang=zh_CN.UTF-8'</span>)</span><br><span class="line">        option.add_argument(<span class="string">'--disable - plugins'</span>)</span><br><span class="line">        <span class="comment">#option.add_argument('blink-settings=imagesEnabled=false')</span></span><br><span class="line">        <span class="comment">#prefs = &#123;"profile.managed_default_content_settings.images": 2&#125;</span></span><br><span class="line">        <span class="comment">#option.add_experimental_option("prefs", prefs)</span></span><br><span class="line">        driver = webdriver.Chrome(chrome_options=option)</span><br><span class="line">        html = <span class="string">"https://www.bilibili.com/anime/index/#st=1&amp;order=2&amp;season_version=-1&amp;area=-1&amp;is_finish=-1&amp;copyright=-1&amp;season_status=-1&amp;season_month=-1&amp;year=-1&amp;style_id=-1&amp;sort=0&amp;page="</span> + str(i)</span><br><span class="line">        print(html)</span><br><span class="line">        html.encode(<span class="string">'utf-8'</span>)</span><br><span class="line">        driver.get(html)</span><br><span class="line">        time.sleep(<span class="number">3</span>)</span><br><span class="line">        driver.minimize_window()</span><br><span class="line">        bsObj = BeautifulSoup(driver.page_source.replace(<span class="string">'&amp;nbsp;'</span>, <span class="string">' '</span>),<span class="string">"lxml"</span>)</span><br><span class="line">        <span class="comment">#AnimeList = bsObj.select("bangumi-item")</span></span><br><span class="line">        AnimeList = bsObj.findAll(class_=<span class="string">"bangumi-item"</span>)</span><br><span class="line">        <span class="keyword">for</span> ani <span class="keyword">in</span> AnimeList:</span><br><span class="line">            writer.writerow([ani.find(<span class="string">"a"</span>,class_=<span class="string">"bangumi-title"</span>).get_text(),ani.find(<span class="string">"div"</span>,class_=<span class="string">"shadow"</span>).get_text()])</span><br><span class="line">            url = ani.find(<span class="string">"div"</span>,class_=<span class="string">"common-lazy-img"</span>).find(<span class="string">"img"</span>)[<span class="string">'src'</span>]</span><br><span class="line">            <span class="keyword">if</span> len(url) &lt; <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            reg = re.search(<span class="string">r'@(.*)'</span>,url).group()</span><br><span class="line">            url = url.replace(<span class="string">'//'</span>,<span class="string">'https://'</span>).replace(reg,<span class="string">''</span>)</span><br><span class="line">            urllib.request.urlretrieve(url,<span class="string">"&#123;0&#125;.jpg"</span>.format(ani.find(<span class="string">"a"</span>,class_=<span class="string">"bangumi-title"</span>).get_text().replace(<span class="string">'/'</span>,<span class="string">'-'</span>)))</span><br><span class="line">            <span class="comment">#with open("testpic.png","wb") as pic:</span></span><br><span class="line">                <span class="comment">#pic.write(response.content)</span></span><br><span class="line">        driver.quit()</span><br><span class="line"><span class="string">'''except:</span></span><br><span class="line"><span class="string">    print("报错退出")</span></span><br><span class="line"><span class="string">finally:</span></span><br><span class="line"><span class="string">    driver.quit()'''</span></span><br><span class="line"><span class="comment">#for anime in AnimeList:</span></span><br><span class="line">    <span class="comment">#print(anime.find("a",class_="bangumi-title").get_text())</span></span><br><span class="line"><span class="string">'''taskkill /im chromedriver.exe /F</span></span><br><span class="line"><span class="string">　　taskkill /im chrome.exe /F'''</span></span><br></pre></td></tr></table></figure>

</div></div>

<h2 id="chrome-Options"><a href="#chrome-Options" class="headerlink" title="chrome Options"></a>chrome Options</h2><p>chromeOptions 是一个配置 chrome 启动是属性的类。通过这个类，我们可以为chrome配置如下参数：</p>
<blockquote>
</blockquote>
<p>设置 chrome 二进制文件位置 (binary_location)<br>添加启动参数 (add_argument)<br>添加扩展应用 (add_extension, add_encoded_extension)<br>添加实验性质的设置参数 (add_experimental_option)<br>设置调试器地址 (debugger_address)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># .\Lib\site-packages\selenium\webdriver\chrome\options.py</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Options</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 设置 chrome 二进制文件位置</span></span><br><span class="line">        self._binary_location = <span class="string">''</span></span><br><span class="line">        <span class="comment"># 添加启动参数</span></span><br><span class="line">        self._arguments = []</span><br><span class="line">        <span class="comment"># 添加扩展应用</span></span><br><span class="line">        self._extension_files = []</span><br><span class="line">        self._extensions = []</span><br><span class="line">        <span class="comment"># 添加实验性质的设置参数</span></span><br><span class="line">        self._experimental_options = &#123;&#125;</span><br><span class="line">        <span class="comment"># 设置调试器地址</span></span><br><span class="line">        self._debugger_address = <span class="literal">None</span></span><br></pre></td></tr></table></figure>

<h3 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h3><div><div class="fold_hider"><div class="close hider_title">点击展开/折叠示例</div></div><div class="fold">
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line">options = webdriver.ChromeOptions()</span><br><span class="line"><span class="comment"># 设置默认编码为 utf-8</span></span><br><span class="line">options.add_argument(<span class="string">'lang=zh_CN.UTF-8'</span>)</span><br><span class="line"><span class="comment"># 禁止图片的加载</span></span><br><span class="line">prefs = &#123;<span class="string">"profile.managed_default_content_settings.images"</span>: <span class="number">2</span>&#125;</span><br><span class="line">options.add_experimental_option(<span class="string">"prefs"</span>, prefs)</span><br><span class="line"><span class="comment"># 设置无账号密码的代理</span></span><br><span class="line">options.add_argument(<span class="string">'--proxy-server=http://ip:port'</span>)  </span><br><span class="line"><span class="comment"># 设置有账号密码的代理</span></span><br><span class="line">proxyauth_plugin_path = create_proxyauth_extension(</span><br><span class="line">            proxy_host=<span class="string">'host'</span>,</span><br><span class="line">            proxy_port=<span class="string">'port'</span>,</span><br><span class="line">            proxy_username=<span class="string">"username"</span>,</span><br><span class="line">            proxy_password=<span class="string">"password"</span></span><br><span class="line">        )</span><br><span class="line">options.add_extension(proxyauth_plugin_path)</span><br><span class="line"></span><br><span class="line">options.add_argument(<span class="string">'window-size=1920x3000'</span>)  <span class="comment"># 指定浏览器分辨率</span></span><br><span class="line">options.add_argument(<span class="string">'--disable-gpu'</span>)  <span class="comment"># 谷歌文档提到需要加上这个属性来规避bug</span></span><br><span class="line">options.add_argument(<span class="string">'--disable-infobars'</span>)  <span class="comment"># 禁用浏览器正在被自动化程序控制的提示</span></span><br><span class="line">options.add_argument(<span class="string">'--hide-scrollbars'</span>)  <span class="comment"># 隐藏滚动条, 应对一些特殊页面</span></span><br><span class="line">options.add_argument(<span class="string">'blink-settings=imagesEnabled=false'</span>)  <span class="comment"># 不加载图片, 提升速度</span></span><br><span class="line">options.add_argument(<span class="string">'--headless'</span>)  <span class="comment"># 浏览器不提供可视化页面. linux下如果系统不支持可视化不加这条会启动失败</span></span><br><span class="line">options.binary_location = <span class="string">r"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"</span>  <span class="comment"># 手动指定使用的浏览器位置</span></span><br><span class="line"><span class="string">''' –user-data-dir=”[PATH]” 指定用户文件夹User Data路径，可以把书签这样的用户数据保存在系统分区以外的分区。</span></span><br><span class="line"><span class="string">　　–disk-cache-dir=”[PATH]“ 指定缓存Cache路径</span></span><br><span class="line"><span class="string">　　–disk-cache-size= 指定Cache大小，单位Byte</span></span><br><span class="line"><span class="string">　　–first run 重置到初始状态，第一次运行</span></span><br><span class="line"><span class="string">　　–incognito 隐身模式启动</span></span><br><span class="line"><span class="string">　　–disable-javascript 禁用Javascript</span></span><br><span class="line"><span class="string">　　--omnibox-popup-count="num" 将地址栏弹出的提示菜单数量改为num个。我都改为15个了。</span></span><br><span class="line"><span class="string">　　--user-agent="xxxxxxxx" 修改HTTP请求头部的Agent字符串，可以通过about:version页面查看修改效果</span></span><br><span class="line"><span class="string">　　--disable-plugins 禁止加载所有插件，可以增加速度。可以通过about:plugins页面查看效果</span></span><br><span class="line"><span class="string">　　--disable-javascript 禁用JavaScript，如果觉得速度慢在加上这个</span></span><br><span class="line"><span class="string">　　--disable-java 禁用java</span></span><br><span class="line"><span class="string">　　--start-maximized 启动就最大化</span></span><br><span class="line"><span class="string">　　--no-sandbox 取消沙盒模式</span></span><br><span class="line"><span class="string">　　--single-process 单进程运行</span></span><br><span class="line"><span class="string">　　--process-per-tab 每个标签使用单独进程</span></span><br><span class="line"><span class="string">　　--process-per-site 每个站点使用单独进程</span></span><br><span class="line"><span class="string">　　--in-process-plugins 插件不启用单独进程</span></span><br><span class="line"><span class="string">　　--disable-popup-blocking 禁用弹出拦截</span></span><br><span class="line"><span class="string">　　--disable-plugins 禁用插件</span></span><br><span class="line"><span class="string">　　--disable-images 禁用图像</span></span><br><span class="line"><span class="string">　　--incognito 启动进入隐身模式</span></span><br><span class="line"><span class="string">　　--enable-udd-profiles 启用账户切换菜单</span></span><br><span class="line"><span class="string">　　--proxy-pac-url 使用pac代理 [via 1/2]</span></span><br><span class="line"><span class="string">　　--lang=zh-CN 设置语言为简体中文</span></span><br><span class="line"><span class="string">　　--disk-cache-dir 自定义缓存目录</span></span><br><span class="line"><span class="string">　　--disk-cache-size 自定义缓存最大值（单位byte）</span></span><br><span class="line"><span class="string">　　--media-cache-size 自定义多媒体缓存最大值（单位byte）</span></span><br><span class="line"><span class="string">　　--bookmark-menu 在工具 栏增加一个书签按钮</span></span><br><span class="line"><span class="string">　　--enable-sync 启用书签同步</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">driver = webdriver.Chrome(chrome_options = options)</span><br></pre></td></tr></table></figure>

</div></div>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python3</tag>
        <tag>Script</tag>
      </tags>
  </entry>
  <entry>
    <title>现场工作代码路径说明</title>
    <url>/%E7%8E%B0%E5%9C%BA%E5%B7%A5%E4%BD%9C%E4%BB%A3%E7%A0%81%E8%B7%AF%E5%BE%84%E8%AF%B4%E6%98%8E.html</url>
    <content><![CDATA[<center>写在前面</center>
程序版本更新后可能没有合入原有程序，本文作为各现场的程序在电脑中存放的路径进行说明
<a id="more"></a>

<h2 id="国六排放"><a href="#国六排放" class="headerlink" title="国六排放"></a>国六排放</h2><h3 id="MES联网"><a href="#MES联网" class="headerlink" title="MES联网"></a>MES联网</h3><p><code>D:\BaiduNetdiskDownload\GX\Platforms2\PlatABS</code></p>
<p>包含上汽临港、上汽南京、上汽宁德、上汽郑州、上汽无锡大通、<br>长沙菲亚特、杭州福特(包含QLS，双怠速转速控制)、重庆福特、哈尔滨福特(继承杭州福特未测试)</p>
<h2 id="上汽"><a href="#上汽" class="headerlink" title="上汽"></a>上汽</h2><h3 id="上汽检测线"><a href="#上汽检测线" class="headerlink" title="上汽检测线"></a>上汽检测线</h3><p>上汽DSA：<code>D:\工作\software\Platforms_Using\Platforms2\SocketOpraLib</code></p>
<p>其中包括上汽郑州FAS、360；上汽宁德现场程序。</p>
<h2 id="五菱"><a href="#五菱" class="headerlink" title="五菱"></a>五菱</h2><p>五菱ABS：<code>D:\工作\software\Platforms_Using\PlatABS\RBABS_SGMW</code></p>
<p>20191028新增宝骏现场更改保持在线3E 00为3E 80备份，目前调试未成功，采用备份程序</p>
<p>程序包含所有五菱现场最新的ABS程序</p>
<h2 id="东风"><a href="#东风" class="headerlink" title="东风"></a>东风</h2><h3 id="东风小康"><a href="#东风小康" class="headerlink" title="东风小康"></a>东风小康</h3><p>东风小康MES：<code>D:\工作\现场工作文件整理\东风小康\319015-201905\Platforms2-正在使用\SpeciallNeed</code></p>
<p>程序为东风小康现场最新MES程序，新增64字节车型识别</p>
<h3 id="东风乘用车-武汉"><a href="#东风乘用车-武汉" class="headerlink" title="东风乘用车(武汉)"></a>东风乘用车(武汉)</h3><p><code>D:\工作\现场工作文件整理\武汉东风乘用车\Platforms2-武汉东风乘用车</code></p>
<p>其中SpecialNeed中包含FAS工位AEB相关提示，CanCmdOpraLib包含FAS相关安全算法<br>ABS：<code>D:\BaiduNetdiskDownload\GX\Platforms2\PlatABS\RBABS_DF</code></p>
<h2 id="合众"><a href="#合众" class="headerlink" title="合众"></a>合众</h2><p><code>D:\BaiduNetdiskDownload\GX\Platforms2\PlatABS</code><br>201909新增EP30ESC</p>
<h2 id="比亚迪"><a href="#比亚迪" class="headerlink" title="比亚迪"></a>比亚迪</h2><p><code>D:\BaiduNetdiskDownload\GX\Platforms2\Platforms2\CanCmdOpraLib</code><br>201904增加联电供应商的转速控制</p>
<h2 id="程序合并进行中"><a href="#程序合并进行中" class="headerlink" title="程序合并进行中"></a>程序合并进行中</h2><h3 id="PlatABS"><a href="#PlatABS" class="headerlink" title="PlatABS"></a>PlatABS</h3><p>最新程序在<code>D:\BaiduNetdiskDownload\GX\Platforms2\PlatABS</code>中
20191120将五菱ABS更新至本工程代码中，待测试，其中包含齿讯学习</p>
<h4 id="ABS"><a href="#ABS" class="headerlink" title="ABS"></a>ABS</h4><p>合众<br>东风乘用车</p>
<h4 id="国六"><a href="#国六" class="headerlink" title="国六"></a>国六</h4><table>
<thead>
<tr>
<th align="center">现场</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">上汽临港</td>
<td align="center">MES</td>
</tr>
<tr>
<td align="center">上汽名爵</td>
<td align="center">MES</td>
</tr>
<tr>
<td align="center">上汽宁德</td>
<td align="center">MES</td>
</tr>
<tr>
<td align="center">上汽郑州一期</td>
<td align="center">MES</td>
</tr>
<tr>
<td align="center">上汽无锡大通</td>
<td align="center">MES、车型信息获取、ZTS匹配</td>
</tr>
<tr>
<td align="center">福特杭州</td>
<td align="center">MES、QLS、双怠速转速控制</td>
</tr>
<tr>
<td align="center">福特重庆</td>
<td align="center">MES、QLS、双怠速转速控制</td>
</tr>
<tr>
<td align="center">福特哈尔滨</td>
<td align="center">MES、QLS、双怠速转速控制</td>
</tr>
<tr>
<td align="center">菲亚特长沙</td>
<td align="center">MES</td>
</tr>
</tbody></table>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>北汽莱西FAS</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>Python script save somethings</title>
    <url>/Python%20script%20save%20somethings.html</url>
    <content><![CDATA[<center>写在前面</center>

<a id="more"></a>
<h2 id="保存图片"><a href="#保存图片" class="headerlink" title="保存图片"></a>保存图片</h2><h3 id="urllib"><a href="#urllib" class="headerlink" title="urllib"></a>urllib</h3><p>用法：urlretrieve(url, filename=None, reporthook=None, data=None)</p>
<blockquote>
</blockquote>
<p>参数 finename 指定了保存本地路径（如果参数未指定，urllib会生成一个临时文件保存数据）<br>参数 reporthook 是一个回调函数，当连接上服务器、以及相应的数据块传输完毕时会触发该回调，我们可以利用这个回调函数来显示当前的下载进度<br>参数 data 指 post 到服务器的数据，该方法返回一个包含两个元素的(filename, headers)元组，filename 表示保存到本地的路径，header 表示服务器的响应头</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="comment">#常用</span></span><br><span class="line">img_src = <span class="string">'http://724.169pp.net/bizhi/2017/039/1.jpg'</span></span><br><span class="line">urllib.request.urlretrieve(img_src,<span class="string">r'C:\\Users\\ME\\Desktop\\1.jpg'</span>)</span><br><span class="line"><span class="comment">#second</span></span><br><span class="line">data = urllib.urlopen(img_src).read()</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"bbb.jpg"</span>, <span class="string">"wb"</span>)<span class="keyword">as</span> f:  <span class="comment"># wb是写二进制</span></span><br><span class="line">    f.write(data)</span><br></pre></td></tr></table></figure>

<h3 id="PIL-requests"><a href="#PIL-requests" class="headerlink" title="PIL+requests"></a>PIL+requests</h3><p>PIL：Python Imaging Library，已经是Python平台事实上的图像处理标准库了。PIL功能非常强大，但API却非常简单易用<br>requests是python实现的最简单易用的HTTP库，建议爬虫使用requests库。默认安装好python之后，是没有安装requests模块的，需要单独通过pip安装<br>BytesIO是用来操作二进制数据的，因为图片是二进制数据，和它相对的自然是StringIO，这是用来存str的。他们的区别就好似python读写普通文件和二进制文件</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line">img_src = <span class="string">'http://724.169pp.net/bizhi/2017/039/1.jpg'</span></span><br><span class="line">response = requests.get(img_src)</span><br><span class="line">image = Image.open(BytesIO(response.content))</span><br><span class="line"><span class="comment">#image = Image.open(StringIO(response.content))</span></span><br><span class="line">image.save(<span class="string">r'C:\\Users\\ME\\Desktop\\'</span> + <span class="string">'1.jpg'</span>)</span><br><span class="line"><span class="comment">#second 常用</span></span><br><span class="line">src = <span class="string">"https://i0.hdslb.com/bfs/sycp/creative_img/201912/01b2f081d58e49c708c1d32b7b8c20ed.jpg"</span></span><br><span class="line"><span class="comment">#r = requests.get(src,headers=header)</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"bbb.jpg"</span>, <span class="string">"wb"</span>)<span class="keyword">as</span> f:  <span class="comment"># wb是写二进制</span></span><br><span class="line">    f.write(requests.get(src,headers=header).content)</span><br></pre></td></tr></table></figure>

<h2 id="保存视频"><a href="#保存视频" class="headerlink" title="保存视频"></a>保存视频</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">response =  requests.get(<span class="string">'https://vd4.bdstatic.com/mda-jcrx64vi5vct2d2u/sc/mda-jcrx64vi5vct2d2u.mp4?auth_key=1557734214-0-0-d6a29a90222c6caf233e8a2a34c2e37a&amp;bcevod_channel=searchbox_feed&amp;pd=bjh&amp;abtest=all'</span>)</span><br><span class="line">video = response.content         <span class="comment">#把文件保存成二进制</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">r'D:\图片\绿色.mp4'</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> fw:</span><br><span class="line">    fw.write(video)           <span class="comment">#将文件内容写入该文件</span></span><br><span class="line">    fw.flush()               <span class="comment">#刷新</span></span><br></pre></td></tr></table></figure>

<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">

</div></div>
]]></content>
      <categories>
        <category>Python3</category>
      </categories>
  </entry>
  <entry>
    <title>数据库链接字符串汇总</title>
    <url>/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%93%BE%E6%8E%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B1%87%E6%80%BB.html</url>
    <content><![CDATA[<p>链接字符串：<br><a href="https://www.connectionstrings.com/" target="_blank" rel="noopener">https://www.connectionstrings.com/</a></p>
<a id="more"></a>


<h2 id="通用示例"><a href="#通用示例" class="headerlink" title="通用示例"></a>通用示例</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">string</span> ConnStr_EOLDDATA = <span class="string">"$System.Data.SqlClient$Data Source=.;Initial Catalog=EOLDATA;Persist Security Info=True;User ID=sa;Password=321"</span>;</span><br><span class="line"><span class="keyword">string</span> SqlLoginTable = <span class="keyword">string</span>.Format(<span class="string">"select * from [登录表] where [VIN] = '&#123;0&#125;'"</span>, textBoxVIN.Text);</span><br><span class="line">DbDataAdapter AdapLogin = BConnString.CreateDataAdapter(SqlLoginTable, ConnStr_EOLDDATA);</span><br><span class="line">DataTable dtLogin = <span class="keyword">new</span> DataTable();</span><br><span class="line">AdapLogin.Fill(dtLogin);</span><br><span class="line">DataRow drLogin = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (dtLogin.Rows.Count &lt; <span class="number">1</span>)</span><br><span class="line">    drLogin = dtLogin.Rows.Add();</span><br><span class="line"><span class="keyword">else</span> drLogin = dtLogin.Rows[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//drLogin = dtLogin.Rows.Count &lt; 1 ? dtLogin.Rows.Add() : dtLogin.Rows[0];</span></span><br></pre></td></tr></table></figure>

<h2 id="Access"><a href="#Access" class="headerlink" title="Access"></a>Access</h2><p>链接字符串：<code>$System.Data.OleDb$Provider=Microsoft.Jet.OLEDB.4.0;Data Source=LoginSet.mdb</code><br>SQL字符串：<code>select * from [Table] where ZTS = &#39;zts&#39;</code></p>
<p><code>string strSql = string.Format(&quot;select * from FinalData where DateTime&gt;#{0}#&quot;, dTime);</code></p>
<h2 id="Postgresql"><a href="#Postgresql" class="headerlink" title="Postgresql"></a>Postgresql</h2><p>链接字符串：<code>$Npgsql$Database=LocalDB;Host=LocalHost;Port=5432;Username=postgres;Password=123</code><br>SQL字符串：<code>select * from [Table] where VIN=&#39;vin&#39; order by ID desc</code><br><code>string strLocalSql = string.Format(&quot;select * from [四轮表] order by [测试时间] desc limit 1&quot;);</code></p>
<h3 id="判断字段中包含某字符串所在位"><a href="#判断字段中包含某字符串所在位" class="headerlink" title="判断字段中包含某字符串所在位"></a>判断字段中包含某字符串所在位</h3><p><code>select * from [车型库] where POSITION(&#39;{0}&#39; in [VIN])&gt;0</code><br>eg:<code>postion(&#39;abc&#39; in &#39;123abc123&#39;)</code>—&gt;4</p>
<h3 id="时间判断"><a href="#时间判断" class="headerlink" title="时间判断"></a>时间判断</h3><p><code>SELECT * FROM [FAS表] where [VIN]=&#39;{0}&#39; and to_char([测试时间],&#39;yyyy-MM-dd HH24:MI:ss&#39;)=&#39;{1}&#39; limit 1</code></p>
<h2 id="SQLServer"><a href="#SQLServer" class="headerlink" title="SQLServer"></a>SQLServer</h2><p>SQLServer字符串：<code>$System.Data.SqlClient$Data Source=EOLSERVICE;Initial Catalog=EOLData;Persist Security Info=True;User ID=sa;Password=321</code><br>SQL字符串：<code>select * from [Table] where VIN=&#39;vin&#39; order by ID desc</code></p>
<h3 id="SQLServer判断字段中包含某字符串所在位"><a href="#SQLServer判断字段中包含某字符串所在位" class="headerlink" title="SQLServer判断字段中包含某字符串所在位"></a>SQLServer判断字段中包含某字符串所在位</h3><p><code>select * from [车型库] where charindex(&#39;{0}&#39;,[VIN])&gt;0</code></p>
<h3 id="选择左侧为某字符串"><a href="#选择左侧为某字符串" class="headerlink" title="选择左侧为某字符串"></a>选择左侧为某字符串</h3><p><code>select * from [车型库] where left([VIN],3)=&#39;LZW&#39;</code></p>
<h2 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h2><p>不需要借助客户端可直接访问数据库<br><code>string Ora_ConnStr = &quot;User ID=jcxuser;Password=jcxuser;Data Source =(DESCRIPTION = (ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.111.89)(PORT = 1521))) (CONNECT_DATA = (SERVER = DEDICATED)(SERVICE_NAME = yadata)))&quot;;</code></p>
<p>需要安装Oracle客户端并配置链接方可访问<br><code>string Ora_ConnStrOLEDB = &quot;Provider=OraOLEDB.Oracle;Data Source=yadata;Persist Security Info=True;Password=jcxuser;User ID=jcxuser&quot;;</code><br>有时间对比这两种链接字符串的区别，下面可访问但访问数据不全<br><code>string Ora_ConnStr = &quot;$System.Data.OleDb$Provider=MSDAORA;Data Source=yadata;Persist Security Info=True;Password=jcxuser;User ID=jcxuser&quot;;</code></p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">OracleConnection conn = <span class="keyword">new</span> OracleConnection(Ora_ConnStr);</span><br><span class="line">conn.Open();</span><br><span class="line"><span class="keyword">string</span> OracleSqlStr = <span class="keyword">string</span>.Format(<span class="string">"select * from &#123;0&#125; where SN =  '&#123;1&#125;'"</span>, Ora_tableForVSN, sVIN);</span><br><span class="line">DataTable dtVSN = <span class="keyword">new</span> DataTable();</span><br><span class="line">OracleDataAdapter odaVSN = <span class="keyword">new</span> OracleDataAdapter(OracleSqlStr,  Ora_ConnStr);</span><br><span class="line">odaVSN.Fill(dtVSN);</span><br><span class="line">conn.Close();</span><br></pre></td></tr></table></figure>

<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">OleDbConnection conn = <span class="keyword">new</span> OleDbConnection(Ora_ConnStrOLEDB);</span><br><span class="line">conn.Open();</span><br><span class="line">OleDbCommand cmdVSN = conn.CreateCommand();</span><br><span class="line">cmdVSN.CommandText = <span class="keyword">string</span>.Format(<span class="string">"select * from &#123;0&#125; where SN = '&#123;1&#125;'"</span>, Ora_tableForVSN, sVIN);</span><br><span class="line">DataTable dtVSN = <span class="keyword">new</span> DataTable();</span><br><span class="line">OleDbDataAdapter odaVSN = <span class="keyword">new</span> OleDbDataAdapter();</span><br><span class="line">odaVSN.SelectCommand = cmdVSN;</span><br><span class="line">odaVSN.Fill(dtVSN);</span><br><span class="line">conn.Close();</span><br></pre></td></tr></table></figure>

<p>SQLServer向Oracle数据库传数据</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> Oracle.ManagedDataAccess;</span><br><span class="line"></span><br><span class="line">OracleConnection cnn = <span class="keyword">new</span> OracleConnection(mesConnStr);</span><br><span class="line">cnn.Open();</span><br><span class="line">DataTable dtMES = <span class="keyword">new</span> DataTable();</span><br><span class="line">OracleDataAdapter oda = <span class="keyword">new</span> OracleDataAdapter(oraSql, mesConnStr);</span><br><span class="line">OracleCommandBuilder ocb = <span class="keyword">new</span> OracleCommandBuilder(oda);</span><br><span class="line">oda.SelectCommand.CommandText = oraSql;</span><br><span class="line">oda.InsertCommand = ocb.GetInsertCommand();</span><br><span class="line">oda.Fill(dtMES);</span><br><span class="line">cnn.Close();</span><br><span class="line"></span><br><span class="line">DataRow drMES = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (dtMES.Rows.Count &gt; <span class="number">0</span>)</span><br><span class="line">    drMES = dtMES.Rows[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span> drMES = dtMES.Rows.Add();</span><br><span class="line"><span class="keyword">foreach</span> (DataColumn dcEOL <span class="keyword">in</span> upload.Columns)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (dtMES.Columns.Contains(dcEOL.ColumnName))</span><br><span class="line">        drMES[dcEOL.ColumnName] = drEOL[dcEOL.ColumnName];</span><br><span class="line">&#125;</span><br><span class="line">oda.Update(dtMES);</span><br><span class="line">dtMES.AcceptChanges();</span><br></pre></td></tr></table></figure>

<h2 id="SQLite"><a href="#SQLite" class="headerlink" title="SQLite"></a>SQLite</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建数据库表</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">CreateTable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SQLiteConnection cn = <span class="keyword">new</span> SQLiteConnection(connStr);<span class="comment">//建立数据库连接</span></span><br><span class="line">    <span class="keyword">if</span> (cn.State!= System.Data.ConnectionState.Open)</span><br><span class="line">    &#123;</span><br><span class="line">        cn.Open();<span class="comment">//打开数据库</span></span><br><span class="line">        SQLiteCommand cmd = <span class="keyword">new</span> SQLiteCommand();</span><br><span class="line">        cmd.Connection = cn;<span class="comment">//把 SQLiteCommand的 Connection和SQLiteConnection 联系起来</span></span><br><span class="line">        cmd.CommandText = <span class="string">"CREATE TABLE IF NOT EXISTS t1(id varchar(4),score int)"</span>;<span class="comment">//输入SQL语句</span></span><br><span class="line">        cmd.ExecuteNonQuery();<span class="comment">//调用此方法运行</span></span><br><span class="line">    &#125;</span><br><span class="line">    cn.Close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!File.Exists(dbPath))</span><br><span class="line">    SQLiteConnection.CreateFile(dbPath);</span><br><span class="line">SQLiteConnection sqliteConn = <span class="keyword">new</span> SQLiteConnection(<span class="string">"data source="</span> + dbPath);</span><br><span class="line"> <span class="keyword">if</span> (sqliteConn.State != System.Data.ConnectionState.Open)</span><br><span class="line"> &#123;</span><br><span class="line">     sqliteConn.Open();</span><br><span class="line">     SQLiteCommand cmd = <span class="keyword">new</span> SQLiteCommand();</span><br><span class="line">     cmd.Connection = sqliteConn;</span><br><span class="line">     <span class="comment">//cmd.CommandText = "DROP TABLE IF EXISTS t1";</span></span><br><span class="line">     <span class="comment">//cmd.CommandText = "CREATE TABLE " + "FirstTabel" + "(Name varchar,Team varchar, Number varchar)";</span></span><br><span class="line">     <span class="comment">//cmd.CommandText = "INSERT INTO FirstTabel VALUES('Kobe','Lakers','24')";</span></span><br><span class="line">     <span class="comment">//cmd.CommandText = "REPLACE INTO t1(id,age) VALUES(@id,@age)";</span></span><br><span class="line">     <span class="comment">//cmd.CommandText = "UPDATE t1 SET id=@id,age=@age WHERE id='0123456789'";</span></span><br><span class="line">     <span class="comment">//cmd.CommandText = "DELETE FROM t1 WHERE id='99999'";</span></span><br><span class="line">     <span class="comment">//cmd.CommandText = "ALTER TABLE t1 ADD COLUMN age int";</span></span><br><span class="line">     cmd.CommandText = <span class="string">"insert into FirstTabel(Name,Team,Number) values(@name,@team,@number)"</span>;</span><br><span class="line">     cmd.Parameters.AddWithValue(<span class="string">"@name"</span>, <span class="string">"Kobe"</span>);</span><br><span class="line">     cmd.Parameters.AddWithValue(<span class="string">"@Team"</span>, <span class="string">"Lakers"</span>);</span><br><span class="line">     cmd.Parameters.AddWithValue(<span class="string">"@Number"</span>, <span class="string">"24"</span>);</span><br><span class="line">     cmd.ExecuteNonQuery();</span><br><span class="line"> &#125;</span><br><span class="line"> sqliteConn.Close();</span><br><span class="line"><span class="comment">//常用</span></span><br><span class="line">SQLiteConnection cn = <span class="keyword">new</span> SQLiteConnection(connStr);</span><br><span class="line">cn.Open();</span><br><span class="line">SQLiteCommand cmd = cn.CreateCommand();</span><br><span class="line">cmd.CommandText= <span class="keyword">string</span>.Format(<span class="string">"select * from &#123;0&#125; where SN = '&#123;1&#125;'"</span>, Ora_tableForVSN, sVIN);</span><br><span class="line"><span class="comment">//方法一：用DataAdapter和DataTable类，调用方法为using System.Data</span></span><br><span class="line">SQLiteDataAdapter adapter = <span class="keyword">new</span> SQLiteDataAdapter(cmd);</span><br><span class="line">DataTable table = <span class="keyword">new</span> DataTable();</span><br><span class="line">adapter.Fill(table);</span><br><span class="line">cn.Close();</span><br><span class="line"><span class="comment">//方法二：用DataReader，这个效率高些</span></span><br><span class="line">SQLiteDataReader reader = cmd.ExecuteReader();</span><br></pre></td></tr></table></figure>

<h2 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> MySql.Data.MySqlClient;</span><br><span class="line"></span><br><span class="line">MySqlConnection myconn = <span class="keyword">new</span> MySqlConnection(<span class="string">"server=10.102.62.26;database=cartest_reporter;user id=root;password=root;Charset=utf8"</span>);</span><br><span class="line">myconn.Open();</span><br><span class="line">MySqlCommand mycom = myconn.CreateCommand();</span><br><span class="line">mycom.CommandText = <span class="string">"SELECT *FROM student1"</span>;</span><br><span class="line">MySqlDataAdapter adap = <span class="keyword">new</span> MySqlDataAdapter(mycom);</span><br><span class="line">MySqlCommandBuilder mysqlcb = <span class="keyword">new</span> MySqlCommandBuilder(adap);<span class="comment">// insert</span></span><br><span class="line">DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line">adap.Fill(dt);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*string MES_ConnStr = @"server = 10.23.1.67;Uid = testams;Pwd = test@ams;database= test;CharSet=utf8";</span></span><br><span class="line"><span class="comment">MySqlConnection conn = new MySqlConnection(MES_ConnStr);</span></span><br><span class="line"><span class="comment">if (conn.State != ConnectionState.Open)</span></span><br><span class="line"><span class="comment">    conn.Open();</span></span><br><span class="line"><span class="comment">strOra_Sql = string.Format("select * from &#123;0&#125;", MESTableName);</span></span><br><span class="line"><span class="comment">MySqlDataAdapter sdap = new MySqlDataAdapter();</span></span><br><span class="line"><span class="comment">MySqlCommand mycmdFind = new MySqlCommand(strOra_Sql, conn);</span></span><br><span class="line"><span class="comment">MySqlCommandBuilder cb = new MySqlCommandBuilder(sdap);</span></span><br><span class="line"><span class="comment">DataTable dt = new DataTable();</span></span><br><span class="line"><span class="comment">sdap.SelectCommand = mycmdFind;</span></span><br><span class="line"><span class="comment">sdap.Fill(dt);</span></span><br><span class="line"><span class="comment">DataRow dr = dt.NewRow();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">foreach (string s in ListMap.Keys)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    dr[s] = drEOL[ListMap[s]];</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">dt.Rows.Add(dr);</span></span><br><span class="line"><span class="comment">sdap.Update(dt);</span></span><br><span class="line"><span class="comment">conn.Close();*/</span></span><br></pre></td></tr></table></figure>

<h2 id="Excel"><a href="#Excel" class="headerlink" title="Excel"></a>Excel</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">DataSet ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">OleDbConnection conn = <span class="keyword">new</span> OleDbConnection(strConn);</span><br><span class="line"><span class="keyword">string</span> sql = <span class="keyword">string</span>.Format(<span class="string">"select * from [&#123;0&#125;$] where [VIN] like '%&#123;1&#125;%'"</span>,</span><br><span class="line">    sourceTableName, VINString);</span><br><span class="line">OleDbDataAdapter oada = <span class="keyword">new</span> OleDbDataAdapter(sql, conn);</span><br><span class="line">oada.Fill(ds);</span><br><span class="line"><span class="keyword">foreach</span> (DataRow drr <span class="keyword">in</span> ds.Tables[<span class="number">0</span>].Rows)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>工作</category>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>链接字符串</tag>
      </tags>
  </entry>
  <entry>
    <title>网络学习随记</title>
    <url>/%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E9%9A%8F%E8%AE%B0.html</url>
    <content><![CDATA[<center>写在前面</center>
应用层-表示层-会话层---HTTP/FTP/DNS/Telnet...
传输层---TCP/UDP
网络层---IP/ARP/ICMP/RARP
数据链路层
物理层
<a id="more"></a>

<h2 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h2><p>-Bit流  </p>
<h2 id="数据链路层-帧"><a href="#数据链路层-帧" class="headerlink" title="数据链路层 帧"></a>数据链路层 帧</h2><p>交换机 可识别MAC<br>FCS|Data|SIP|DIP|SMAC|DMAC</p>
<h2 id="网络层-包"><a href="#网络层-包" class="headerlink" title="网络层 包"></a>网络层 包</h2><h3 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h3><p>IP、ARP、ICMP、IGMP<br>路由器 可识别IP<br>Data|SIP|DIP</p>
<h4 id="ARP"><a href="#ARP" class="headerlink" title="ARP"></a>ARP</h4><p>ARP广播查询目标MAC地址<br>ipconfig /all查看网卡MAC<br>arp -a查询局域网内MAC<br><strong><em>ARP欺骗</em></strong><br>arp -s ip mac设置静态MAC(更改网络通讯中IP对应的MAC)<br>网卡属性中修复可重置</p>
<h4 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h4><p>PING-Packet Internet Grope因特网包探索器<br>ping局域网延迟一般小于10ms<br>TTL数据包生存周期，每过一个路由-1，防止网络回路<br>ping ip -i n 通过n值查看途经路由器IP<br>默认TTL：</p>
<blockquote>
<p>Linux : 64<br>Windows : 128<br>Unix : 255</p>
</blockquote>
<p>tracert ip 跟踪数据包路径<br>pathping 跟踪数据包路径，计算丢包情况</p>
<h3 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h3><p>静态路由 管理员配置路径<br>动态路由 RIP协议 最大15级</p>
<h2 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h2><p>netstat -n查看会话<br>netstat -nb查看会话及会话进程<br>netstat -an查看监听端口</p>
<h3 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h3><p>16位<br>常用端口：0-1023<br>登机端口：1024-49151<br>客户端端口：49152-65535<br>常见应用层协议端口</p>
<table>
<thead>
<tr>
<th>协议</th>
<th>端口</th>
</tr>
</thead>
<tbody><tr>
<td>http</td>
<td>TCP:80</td>
</tr>
<tr>
<td>https</td>
<td>TCP:443</td>
</tr>
<tr>
<td>ftp</td>
<td>TCP:21</td>
</tr>
<tr>
<td>RDP</td>
<td>TCP:3389  远程桌面</td>
</tr>
<tr>
<td>SMTP</td>
<td>TCP:25</td>
</tr>
<tr>
<td>POP3</td>
<td>TCP:110</td>
</tr>
<tr>
<td>Telnet</td>
<td>TCP:23</td>
</tr>
<tr>
<td>SQL</td>
<td>TCP:1433</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>DNS</td>
<td>UDP:53(一般)</td>
</tr>
</tbody></table>
<h3 id="套接字"><a href="#套接字" class="headerlink" title="套接字"></a>套接字</h3><p>socket=IP:Port</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>设置开/关机/登录启动脚本<br>gpedit.msc</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">

</div></div>
]]></content>
  </entry>
  <entry>
    <title>VCU</title>
    <url>/VCU.html</url>
    <content><![CDATA[<center>写在前面</center>

<a id="more"></a>

<h2 id="协议需求"><a href="#协议需求" class="headerlink" title="协议需求"></a>协议需求</h2><p>CANID：</p>
<h3 id="静态"><a href="#静态" class="headerlink" title="静态"></a>静态</h3><p>预充截止电压PreChargeVoltageGetTest：      (D01E- Battery External Voltage电池包外侧总电压)<br>绝缘电阻InsulationResistanceGetTest：      (D01C- Battery Insulation Resistance电池包的绝缘值)<br>电池静态温度BatteryTemperatureRiseTestT1：  (D02B- Battery Average Temperature电池温升)</p>
<h3 id="动态"><a href="#动态" class="headerlink" title="动态"></a>动态</h3><p>MCU转速MCUSpeedGetTest：                   (电机当前转速D034- Motor Actual Speed)<br>MCU温度MCUTempretureGetTest：D061         (MCU温度D02E- Inverter Actual Temperature)<br>电机温度MotorTempretureGetTest：C952        (电机温度D036- Motor Actual Temperature)<br>放电电流BatteryTotalCurrentTest：D030        (充电电流D027- Battery Total Current充电时电流为负值)<br>电池温升BatteryTemperatureRiseTestT2：D047    (D02B- Battery Average Temperature电池温升)<br>车速传感器SpeedSensorGetTest：<br>判断制动踏板ReadBrakeStatus：<br>刹车回馈电流FeedbackCurrentGetTest：D030     (D027- Battery Total Current回馈电流)</p>
<p>MCU转速与实际车速差值PreChargeVoltageGetTest：</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">

</div></div>
]]></content>
  </entry>
  <entry>
    <title>工作日志</title>
    <url>/%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%BF%97.html</url>
    <content><![CDATA[<center>写在前面</center>
记录所有项目工作日志以便查询，年份、项目号分类
<a id="more"></a>

<h2 id="2020"><a href="#2020" class="headerlink" title="2020"></a>2020</h2><h3 id="March3"><a href="#March3" class="headerlink" title="March3"></a>March3</h3><p>郑州日产登录工位偶发卡死现象处理<br>1、更改原有C++程序，在更新登录表处增加try…catch…<br>2、用新程序替换，程序中UDP更新服务器表格应在程序处理前</p>
<p>解决方式：更新登录表数据增加超时时间为0解决</p>
<p>金华零跑MES</p>
<h3 id="7月"><a href="#7月" class="headerlink" title="7月"></a>7月</h3><h4 id="青岛五菱"><a href="#青岛五菱" class="headerlink" title="青岛五菱"></a>青岛五菱</h4><p>双轴制动台改单轴测试小轴距E50ABS<br>现场制动台车型获取说明:扫完VIN后通过桌面上小黄车的软件从MES获取车型信息包括轴距、<strong>ABS类型</strong>等，调用的测试流程在SpecialNeed中进行判断赋值，车型库不需要手动维护，MES下载后自动维护。<br>现场更新不兼容程序有：</p>
<blockquote>
<p>CANCmdLib.dll<br>CanCmdOpraLib.dll 更改后100V车型K线通讯出现指令数据丢失<br>MBKDeviceWithOPC.dll 更新后无法控制滚筒转动</p>
</blockquote>
<p>E50ABS程序中读取DTC无法判断五菱现场的当前故障码</p>
<h3 id="8月"><a href="#8月" class="headerlink" title="8月"></a>8月</h3><h4 id="郑州日产"><a href="#郑州日产" class="headerlink" title="郑州日产"></a>郑州日产</h4><p>增加compactor标定</p>
<h4 id="中牟日产"><a href="#中牟日产" class="headerlink" title="中牟日产"></a>中牟日产</h4><p>增加国六打印程序，客户只查看不打印，很多信息均从客户配置的excel中读取</p>
<h3 id="9月"><a href="#9月" class="headerlink" title="9月"></a>9月</h3><h4 id="十堰小康"><a href="#十堰小康" class="headerlink" title="十堰小康"></a>十堰小康</h4><p>RFID调试、国六数据上传国家</p>
<h4 id="长春一汽轿车"><a href="#长春一汽轿车" class="headerlink" title="长春一汽轿车"></a>长春一汽轿车</h4><p>新增E111ESP标定和动态测试，跟205、141程序一样。</p>
<p>更改4线服务器线号<br>更改3线转毂线号，速度表主键丢失导致速度表无法上传</p>
<h4 id="一汽红旗"><a href="#一汽红旗" class="headerlink" title="一汽红旗"></a>一汽红旗</h4><p>更新绝缘检测程序，提升20s测试节拍<br>调试HUD，测试完成传结果给手持，更改测试项判断修正界面显示整体合格</p>
<h3 id="10月"><a href="#10月" class="headerlink" title="10月"></a>10月</h3><h4 id="十堰小康老厂"><a href="#十堰小康老厂" class="headerlink" title="十堰小康老厂"></a>十堰小康老厂</h4><p>四轮工位增加ACC标定<br>1017 - 流程调试完成，测试过程中左上反馈的角度与实际相反，标定顺序没问题标靶面对车的一面先低头、再平、再抬头。<br>     - 垂直合格范围-3~-1度存在疑问。<br>角度计算在RBABS_ShiYXiaoKang.ADASCalculate中的AEBCalculate(ECU回复指令;是否需要调整;调整圈数)</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">AEBCalculate</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span>[] SepPara;</span><br><span class="line">        XmlFO.SepParams(sPara, <span class="number">3</span>, <span class="keyword">out</span> SepPara);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bRecv = StringToBytes(SepPara[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] tmpBytes = <span class="keyword">new</span> <span class="keyword">byte</span>[] &#123; bRecv[<span class="number">4</span>], bRecv[<span class="number">3</span>] &#125;;</span><br><span class="line">        Int16 iHorizontal = BitConverter.ToInt16(tmpBytes, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">double</span> dHorizontal = (iHorizontal * <span class="number">0.01</span>);</span><br><span class="line">        XmlFO.LogOut(<span class="string">"ACCCalculate"</span>, <span class="string">"dHorizontal:"</span> + dHorizontal);</span><br><span class="line">        <span class="keyword">double</span> dHorTurns = dHorizontal / <span class="number">0.5359</span>;</span><br><span class="line"></span><br><span class="line">        tmpBytes = <span class="keyword">new</span> <span class="keyword">byte</span>[] &#123; bRecv[<span class="number">6</span>], bRecv[<span class="number">5</span>] &#125;;</span><br><span class="line">        Int16 iVertical = BitConverter.ToInt16(tmpBytes, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">double</span> dVertical = (iVertical * <span class="number">0.01</span>);</span><br><span class="line">        XmlFO.LogOut(<span class="string">"ACCCalculate"</span>, <span class="string">"dVertical:"</span> + dVertical);</span><br><span class="line">        <span class="keyword">double</span> dVerTurns = (<span class="number">-2</span> - dVertical) / <span class="number">0.7729</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">string</span> adjustTips = <span class="keyword">string</span>.Empty;</span><br><span class="line">        <span class="keyword">if</span> (dVertical &lt; <span class="number">-3</span> || dVertical &gt; <span class="number">-1</span></span><br><span class="line">            || dHorizontal &lt; <span class="number">-0.3</span> || dHorizontal &gt; <span class="number">0.3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// Res</span></span><br><span class="line">            XmlFO.ListObject[SepPara[<span class="number">1</span>]].xValue = <span class="string">"Y"</span>;</span><br><span class="line">            adjustTips = <span class="string">"左上："</span> + (dHorTurns &gt; <span class="number">0</span> ? <span class="string">"逆时针："</span> + dHorTurns.ToString(<span class="string">"0.00"</span>) + <span class="string">"圈"</span> :</span><br><span class="line">                <span class="string">"顺时针："</span> + (-dHorTurns).ToString(<span class="string">"0.00"</span>) + <span class="string">"圈"</span>);</span><br><span class="line">            adjustTips += <span class="string">"右下："</span> + (dVerTurns &gt; <span class="number">0</span> ? <span class="string">"逆时针："</span> + dVerTurns.ToString(<span class="string">"0.00"</span>) + <span class="string">"圈"</span> :</span><br><span class="line">                <span class="string">"顺时针："</span> + (-dVerTurns).ToString(<span class="string">"0.00"</span>) + <span class="string">"圈"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            XmlFO.ListObject[SepPara[<span class="number">1</span>]].xValue = <span class="string">"N"</span>;</span><br><span class="line">            adjustTips = <span class="string">"水平角度："</span> + dHorizontal.ToString(<span class="string">"0.00"</span>);</span><br><span class="line">            adjustTips += <span class="string">"垂直角度："</span> + dVertical.ToString(<span class="string">"0.00"</span>);</span><br><span class="line">            adjustTips += <span class="string">"; 不需要调整"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        XmlFO.ListObject[SepPara[<span class="number">2</span>]].xValue = adjustTips;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>

<h4 id="武汉东风雷诺"><a href="#武汉东风雷诺" class="headerlink" title="武汉东风雷诺"></a>武汉东风雷诺</h4><p>卡规侧滑 Modbus读取<br>卡规：192.168.100.17 : 502<br>侧滑：192.168.100.18 : 502</p>
<p>03读取保持寄存器，地址为 C0<br>卡规：0x0B, 0x03, 0x00, 0x00, 0x00, 0x06, 0xFF, 0x03, 0x00, 0xC0, 0x00, 0x02<br>侧滑: 0x0B, 0x03, 0x00, 0x00, 0x00, 0x06, 0xFF, 0x03, 0x00, 0xC0, 0x00, 0x02<br>      0x0B, 0x01, 0x00, 0x00, 0x00, 0x06, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x01<br>      0x0F, 0x03, 0x00, 0x00, 0x00, 0x06, 0xFF, 0x03, 0x01, 0x80, 0x00, 0x01<br>      0x0F, 0x01, 0x00, 0x00, 0x00, 0x06, 0xFF, 0x06, 0x01, 0x80, 0x00, 0x00// 0xXX</p>
<p>四轮卡规读取：配置文件为MeasToolAnalogLeveler-LH.dat，二进制文件直接转换<br>公式为：<code>swaAngle = (AI - swaB) / (AI &gt; swaB ? positiveK : negativeK);</code></p>
<p>侧滑模拟量计算公式(来自fori源代码)：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> AI = RvBuf[<span class="number">9</span>] * <span class="number">256</span> + RvBuf[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">if</span> ((RvBuf[<span class="number">9</span>] &amp; <span class="number">0x80</span>) == <span class="number">0x80</span>)</span><br><span class="line">    AI = AI - <span class="number">65535</span> - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (AI &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    AI = (AI &amp; <span class="number">0xFFF0</span>) &gt;&gt; <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    AI = System.Math.Abs(AI);</span><br><span class="line">    AI = -(((Int16)AI &amp; <span class="number">0xFFF0</span>) &gt;&gt; <span class="number">4</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>更新侧滑软件，更新为Edison给的方式；<br>转毂在RBDVTEx基础上更改，新增RBDVTForiH</p>
<h3 id="11月"><a href="#11月" class="headerlink" title="11月"></a>11月</h3><h4 id="西安比亚迪"><a href="#西安比亚迪" class="headerlink" title="西安比亚迪"></a>西安比亚迪</h4><p>IPB升级，参考长沙比亚迪：四轮标定包括SAS、内部传感器、VPC<br>转毂做IPB泄漏检查和动态(ESC)，泄漏检查结果上传到福瑞数据库</p>
<h4 id="长春一汽轿车-1"><a href="#长春一汽轿车-1" class="headerlink" title="长春一汽轿车"></a>长春一汽轿车</h4><p>速度表无法上传：access数据库主键丢失</p>
<h2 id="2021"><a href="#2021" class="headerlink" title="2021"></a>2021</h2><h3 id="3月"><a href="#3月" class="headerlink" title="3月"></a>3月</h3><h4 id="武汉日产"><a href="#武汉日产" class="headerlink" title="武汉日产"></a>武汉日产</h4><p>速度制动台，驱动程序同转毂<br>技术协议中包含：制动、速度、ABS、声级、刹车距离<br>目前只测试：制动、速度。</p>
<h4 id="武汉东风乘用车"><a href="#武汉东风乘用车" class="headerlink" title="武汉东风乘用车"></a>武汉东风乘用车</h4><p>DVT更新G35程序后1112ESC测试中出现故障判定不合格，换回以前的always文件解决(时间太久忘记改了什么，新程序测试结束多了读取故障码的步骤)</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>Python爬虫基础</title>
    <url>/Python%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80.html</url>
    <content><![CDATA[<h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><p>URL格式：<a href="http://host[:port][path]" target="_blank" rel="noopener">http://host[:port][path]</a><br>host：合法的Internet主机域名或IP地址<br>port：端口号，默认为80<br>path：请求资源的路径</p>
<h2 id="Urllib"><a href="#Urllib" class="headerlink" title="Urllib"></a>Urllib</h2><table>
<thead>
<tr>
<th>Urllib库</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>urllib.request</td>
<td>请求模块</td>
</tr>
<tr>
<td>urllib.error</td>
<td>异常处理模块</td>
</tr>
<tr>
<td>urllib.parse</td>
<td>url解析模块</td>
</tr>
<tr>
<td>urllib.robotparser</td>
<td>robots.txt解析模块</td>
</tr>
</tbody></table>
<p>urllib.request.urlopen(url,data=None,[timeout,]*,cafile=None,cadefault=False,context=None)</p>
<h2 id="Requests"><a href="#Requests" class="headerlink" title="Requests"></a>Requests</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">r = requests.get(url,params=<span class="literal">None</span>,**kwargs)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>Requests方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>requests.request()</td>
<td>构造一个请求，支撑以下各方法</td>
</tr>
<tr>
<td>requests.get()</td>
<td>获取HTML网页，对应HTTP的GET</td>
</tr>
<tr>
<td>requests.head()</td>
<td>获取HTMLheader，对应HTML的HEAD</td>
</tr>
<tr>
<td>requests.post()</td>
<td>向HTML网页提交POST请求</td>
</tr>
<tr>
<td>requests.put()</td>
<td>向HTML网页提交PUT请求</td>
</tr>
<tr>
<td>requests.patch()</td>
<td>向HTML网页提交局部修改请求</td>
</tr>
<tr>
<td>requests.delete()</td>
<td>向HTML网页提交删除请求</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>Requests对象属性</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>r.status_code</td>
<td>HTTP请求返回的状态，200连接成功，404表示失败</td>
</tr>
<tr>
<td>r.text</td>
<td>HTTP响应内容的字符串形式，URL对应的页面内容</td>
</tr>
<tr>
<td>r.encoding</td>
<td>HTTP header中猜测的响应内容编码方式</td>
</tr>
<tr>
<td>r.apparent_encoding</td>
<td>内容中分析出的响应内容编码格式（备选编码格式）</td>
</tr>
<tr>
<td>r.content</td>
<td>HTTP响应内容的二进制格式</td>
</tr>
</tbody></table>
<p>r.encoding：如果header中不存在charset，则默认编码为ISO-8859-1(不支持解析中文)<br>将r.apparent_encoding设置为utf-8可解决上述可能出现乱码问题</p>
<h3 id="baidu搜索关键词"><a href="#baidu搜索关键词" class="headerlink" title="baidu搜索关键词"></a>baidu搜索关键词</h3><p>百度搜索关键词对应：wd=keyword</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">kv = &#123;<span class="string">'wd'</span>:<span class="string">'Python'</span>&#125;</span><br><span class="line">r = requests.get(<span class="string">"http://www.baidu.com/s"</span>,params = kv)</span><br></pre></td></tr></table></figure>

<h3 id="通用代码框架"><a href="#通用代码框架" class="headerlink" title="通用代码框架"></a>通用代码框架</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">    header = &#123;<span class="string">'user-agent'</span>:<span class="string">'Mozilla/5.0'</span>&#125;</span><br><span class="line">    r = requests.get(url,headers=header)</span><br><span class="line">    r.raise_for_status() <span class="comment">#如果状态不是200则引发HTTPError异常</span></span><br><span class="line">    r.encoding = r.apparent_encoding</span><br><span class="line">    <span class="keyword">return</span> r.text</span><br><span class="line">  <span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"异常"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">  url = <span class="string">"http://"</span></span><br><span class="line">  print(GetHTMLText(url))</span><br></pre></td></tr></table></figure>

<h2 id="信息标记形式"><a href="#信息标记形式" class="headerlink" title="信息标记形式"></a>信息标记形式</h2><h3 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h3><p>标签、属性、内容</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- --&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><p>有类型的键值对表示<br>无法注释</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"key":"value"</span><br><span class="line">"key":["value1","value2"]</span><br><span class="line">"key":&#123;"subkey":"subvalue"&#125;</span><br></pre></td></tr></table></figure>

<h3 id="YAML"><a href="#YAML" class="headerlink" title="YAML"></a>YAML</h3><p>无类型键值对</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">key:</span><span class="string">value</span></span><br><span class="line"><span class="attr">key:</span><span class="comment">#comments</span></span><br><span class="line"><span class="bullet">-</span><span class="string">value1</span></span><br><span class="line"><span class="bullet">-</span><span class="string">value2</span></span><br><span class="line"><span class="attr">key:</span></span><br><span class="line"><span class="attr">  subkey:</span><span class="string">subvalue</span></span><br></pre></td></tr></table></figure>

<h2 id="Selenium"><a href="#Selenium" class="headerlink" title="Selenium"></a>Selenium</h2><h3 id="声明浏览器对象"><a href="#声明浏览器对象" class="headerlink" title="声明浏览器对象"></a>声明浏览器对象</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">browser = webdriver.Firefox()</span><br><span class="line">browser = webdriver.Edge()</span><br><span class="line">browser = webdriver.Safari()</span><br><span class="line">browser = webdriver.PhantomJS()</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打开网页</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">browser.get(<span class="string">"https://www.baidu.com"</span>)</span><br><span class="line">print(browser.page_source)</span><br><span class="line">browser.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找单个元素</span></span><br><span class="line">first = browser.find_element_by_id(<span class="string">'q'</span>)</span><br><span class="line">second = browser.find_element_by_css_selector(<span class="string">'#q'</span>)<span class="comment"># #表示id,.表示类,不加前缀表示标签</span></span><br><span class="line">third = browser.find_element_by_xpath(<span class="string">'//*[@id="q"]'</span>)</span><br><span class="line">print(first,second,third)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 通用方法</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line">common = browser.find_element(By.ID,<span class="string">'q'</span>)</span><br><span class="line">commons = browser.find_elements(By.ID,<span class="string">'q'</span>) <span class="comment"># 查找多个元素</span></span><br><span class="line">browser.close()</span><br></pre></td></tr></table></figure>

<h3 id="元素交互"><a href="#元素交互" class="headerlink" title="元素交互"></a>元素交互</h3><h4 id="实现淘宝搜索功能"><a href="#实现淘宝搜索功能" class="headerlink" title="实现淘宝搜索功能"></a>实现淘宝搜索功能</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">browser.get(<span class="string">"https://www.taobao.com"</span>)</span><br><span class="line">input = browser.find_element_by_id(<span class="string">'q'</span>) <span class="comment">#找到网页中搜索框对应的id</span></span><br><span class="line">input.send_keys(<span class="string">'iPhone'</span>) <span class="comment">#向搜索框中传递的参数</span></span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">input.clear()</span><br><span class="line">input.send_keys(<span class="string">'iPad'</span>)</span><br><span class="line">button = browser.find_element_by_class_name(<span class="string">'btn_search'</span>) <span class="comment">#找到搜索按钮对应的name</span></span><br><span class="line">button.click()</span><br></pre></td></tr></table></figure>

<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h3 id="爬取图片、视频等"><a href="#爬取图片、视频等" class="headerlink" title="爬取图片、视频等"></a>爬取图片、视频等</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">url = <span class="string">""</span></span><br><span class="line">root = <span class="string">"D://Python//Pic"</span></span><br><span class="line">path = root + url.split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(root):</span><br><span class="line">    os.mkdir(root)</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    <span class="keyword">with</span> open(path,<span class="string">'wb'</span>) <span class="keyword">as</span> f</span><br><span class="line">      f.write(r.content)</span><br><span class="line">      f.close()</span><br><span class="line">      print(<span class="string">"文件保存成功"</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"文件已存在"</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">  print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure>

</div></div>
]]></content>
  </entry>
  <entry>
    <title>BBK软件设置密码方法</title>
    <url>/BBK%E8%BD%AF%E4%BB%B6%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81%E6%96%B9%E6%B3%95.html</url>
    <content><![CDATA[<center>写在前面</center>
BBK软件设置密码方法
<a id="more"></a>

<h2 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h2><p>在Bin文件夹中找到LoginLock.Lock文件，将其复制到C盘根目录下<br>若无此文件可新建文本文档后另存为此名称，内容为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SuperAccount = &quot;BBKTSTSYS&quot;;</span><br><span class="line">SuperPassword = &quot;ZMY20140527&quot;;</span><br></pre></td></tr></table></figure>

<p>均为英文字符</p>
<h2 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h2><p>编辑方式打开设备程序使用的always文件(桌面快捷方式对应文件)<br>1、双击打开组合列表中Always下的InitForm组合<br>2、双击打开Menu，点击HELP进入菜单编辑界面<br>3、选择需要设置密码的菜单项及子项后，选择右侧<strong><em>需要权限</em></strong>,权限0为不需要权限，不同应权限可设置相应密码<br>0~9为权限等级，高等级可访问低等级权限，比如权限9可访问所有内容<br>4、更改完成后依次点击保存后退出</p>
<h2 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h2><h3 id="设置权限密码"><a href="#设置权限密码" class="headerlink" title="设置权限密码"></a>设置权限密码</h3><p>双击打开always程序，点击左上角登录弹出如下界面</p>
<p><img src="BBK%E8%BD%AF%E4%BB%B6%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81%E6%96%B9%E6%B3%95/Login.png" alt></p>
<p>输入管理员账号后点击<strong><em>设置</em></strong>进行账户管理<br>SuperAccount = “BBKTSTSYS”<br>SuperPassword = “ZMY20140527”</p>
<p><img src="BBK%E8%BD%AF%E4%BB%B6%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81%E6%96%B9%E6%B3%95/Account.png" alt></p>
<p>设置完成后便可登录相应等级账户</p>
]]></content>
  </entry>
  <entry>
    <title>BBKTimeLock</title>
    <url>/BBKTimeLock.html</url>
    <content><![CDATA[<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="Enter password to read！" />
    <label for="pass">Enter password to read！</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">

</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>lambda Expressions</title>
    <url>/lambda%20Expressions.html</url>
    <content><![CDATA[<center>写在前面</center>

<a id="more"></a>

<h2 id="Expression-lambda"><a href="#Expression-lambda" class="headerlink" title="Expression lambda"></a>Expression lambda</h2><p>使用 lambda 声明运算符 =&gt; 从其主体中分离 lambda 参数列表。 若要创建 Lambda 表达式，需要在 Lambda 运算符左侧指定输入参数（如果有），然后在另一侧输入表达式或语句块。</p>
<p>任何 Lambda 表达式都可以转换为委托类型。 Lambda 表达式可以转换的委托类型由其参数和返回值的类型定义。如果 lambda 表达式不返回值，则可以将其转换为 Action 委托类型之一；否则，可将其转换为 Func 委托类型之一。 例如，有 2 个参数且不返回值的 Lambda 表达式可转换为 Action&lt;T1,T2&gt; 委托。 有 1 个参数且不返回值的 Lambda 表达式可转换为 Func&lt;T,TResult&gt; 委托。 以下示例中，lambda 表达式 x =&gt; x * x （指定名为 x 的参数并返回 x 平方值）将分配给委托类型的变量：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">Func&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; square = x =&gt; x * x;</span><br><span class="line">Console.WriteLine(square(<span class="number">5</span>));</span><br><span class="line"><span class="comment">// Output:</span></span><br><span class="line"><span class="comment">// 25</span></span><br></pre></td></tr></table></figure>

<p>仅当 lambda 只有一个输入参数时，括号才是可选的；否则括号是必需的。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用空括号指定零个输入参数：</span></span><br><span class="line">Action line = () =&gt; Console.WriteLine();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 括号内的两个或更多输入参数使用逗号加以分隔：</span></span><br><span class="line">Func&lt;<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">bool</span>&gt; testForEquality = (x, y) =&gt; x == y;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 有时，编译器无法推断输入类型。 可以显式指定类型，如下面的示例所示：</span></span><br><span class="line">Func&lt;<span class="keyword">int</span>, <span class="keyword">string</span>, <span class="keyword">bool</span>&gt; isTooLong = (<span class="keyword">int</span> x, <span class="keyword">string</span> s) =&gt; s.Length &gt; x;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入参数类型必须全部为显式或全部为隐式；</span></span><br></pre></td></tr></table></figure>

<h2 id="Statement-lambda"><a href="#Statement-lambda" class="headerlink" title="Statement lambda"></a>Statement lambda</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">(input-parameters) =&gt; &#123; &lt;sequence-of-statements&gt; &#125;</span><br><span class="line"></span><br><span class="line">Func&lt;<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">int</span>&gt; func = (x, y)</span><br><span class="line">    =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; y; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            x += i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>

<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">

</div></div>
]]></content>
  </entry>
  <entry>
    <title>Hashmap、Hashtabel、Dictionary</title>
    <url>/Hashmap%E3%80%81Hashtabel%E3%80%81Dictionary.html</url>
    <content><![CDATA[<center>写在前面</center>
参考：https://blog.csdn.net/woshimaxiao1/article/details/83661464
<a id="more"></a>

<h2 id="Hashmap"><a href="#Hashmap" class="headerlink" title="Hashmap"></a>Hashmap</h2><p>HashMap是Java 1.2引进的Map接口的一个实现，c#中无HashMap</p>
<h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>  采用一段连续的存储单元来存储数据。对于指定下标的查找，时间复杂度为O(1)；通过给定值进行查找，需要遍历数组，逐一比对给定关键字和数组元素，时间复杂度为O(n)，当然，对于有序数组，则可采用二分查找，插值查找，斐波那契查找等方式，可将查找复杂度提高为O(logn)；对于一般的插入删除操作，涉及到数组元素的移动，其平均复杂度也为O(n)</p>
<h3 id="线性链表"><a href="#线性链表" class="headerlink" title="线性链表"></a>线性链表</h3><p>  对于链表的新增，删除等操作（在找到指定操作位置后），仅需处理结点间的引用即可，时间复杂度为O(1)，而查找操作需要遍历链表逐一进行比对，复杂度为O(n)</p>
<h3 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h3><p>  对一棵相对平衡的有序二叉树，对其进行插入，查找，删除等操作，平均复杂度均为O(logn)。</p>
<h3 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h3><p>  相比上述几种数据结构，在哈希表中进行添加，删除，查找等操作，性能十分之高，不考虑哈希冲突的情况下，仅需一次定位即可完成，时间复杂度为O(1)。<br>  当要新增或查找某个元素，我们通过把当前元素的关键字 通过某个函数映射到数组中的某个位置，通过数组下标一次定位就可完成操作。<br>  <strong>存储位置 = 哈希函数f(关键字)</strong></p>
<h4 id="哈希冲突"><a href="#哈希冲突" class="headerlink" title="哈希冲突"></a>哈希冲突</h4><p>两个不同的元素，通过哈希函数得出的实际存储地址相同<br>HashMap采用了链地址法，也就是数组+链表的方式解决哈希冲突<br>HashMap数组的每一个元素不止是一个Entry对象，也是一个链表的头节点。每一个Entry对象通过Next指针指向它的下一个Entry节点。当新来的Entry映射到冲突的数组位置时，只需要插入到对应的链表即可<br>HashMap可以简单理解为由数组+链表组成，数组是HashMap的主体，链表则是主要为了解决哈希冲突而存在的</p>
<h2 id="Hashtable"><a href="#Hashtable" class="headerlink" title="Hashtable"></a>Hashtable</h2><p>哈希表（HashTable）又叫做散列表，是根据关键码值（即键值对）而直接访问的数据结构。也就是说，它通过把关键码映射到表中一个位置来访问记录，以加快查找速度，Hashtable是基于Dictionary类的</p>
<h2 id="Hashtable-与-Hashmap区别"><a href="#Hashtable-与-Hashmap区别" class="headerlink" title="Hashtable 与 Hashmap区别"></a>Hashtable 与 Hashmap区别</h2><h3 id="Hashtable-1"><a href="#Hashtable-1" class="headerlink" title="Hashtable"></a>Hashtable</h3><p>底层数组+链表实现，无论key还是value都不能为null，线程安全，实现线程安全的方式是在修改数据时锁住整个HashTable，效率低，ConcurrentHashMap做了相关优化<br>初始size为11，扩容：newsize = olesize*2+1<br>计算index的方法：index = (hash &amp; 0x7FFFFFFF) % tab.length</p>
<h3 id="Hashmap-1"><a href="#Hashmap-1" class="headerlink" title="Hashmap"></a>Hashmap</h3><p>底层数组+链表实现，可以存储null键和null值，线程不安全<br>初始size为16，扩容：newsize = oldsize*2，size一定为2的n次幂<br>扩容针对整个Map，每次扩容时，原来数组中的元素依次重新计算存放位置，并重新插入<br>插入元素后才判断该不该扩容，有可能无效扩容（插入后如果扩容，如果没有再次插入，就会产生无效扩容）<br>当Map中元素总数超过Entry数组的75%，触发扩容操作，为了减少链表长度，元素分配更均匀<br>计算index方法：index = hash &amp; (tab.length – 1)</p>
<h2 id="HashTable和Dictionary区别"><a href="#HashTable和Dictionary区别" class="headerlink" title="HashTable和Dictionary区别"></a>HashTable和Dictionary区别</h2><p>  HashTable不支持泛型，而Dictionary支持泛型。<br>  Hashtable 的元素属于 Object 类型，所以在存储或检索值类型时通常发生装箱和拆箱的操作，所以你可能需要进行一些类型转换的操作，而且对于int,float这些值类型还需要进行装箱等操作，非常耗时。<br>  单线程程序中推荐使用 Dictionary, 有泛型优势, 且读取速度较快, 容量利用更充分。多线程程序中推荐使用 Hashtable, 默认的 Hashtable 允许单线程写入, 多线程读取, 对 Hashtable 进一步调用 Synchronized() 方法可以获得完全线程安全的类型. 而 Dictionary 非线程安全, 必须人为使用 lock 语句进行保护, 效率大减。<br>  在通过代码测试的时候发现key是整数型Dictionary的效率比Hashtable快，如果key是字符串型，Dictionary的效率没有Hashtable快。</p>
]]></content>
  </entry>
  <entry>
    <title>PostgreSQL数据库</title>
    <url>/PostgreSQL%E6%95%B0%E6%8D%AE%E5%BA%93.html</url>
    <content><![CDATA[<center>写在前面</center>
BBK设备数据库常用操作说明
<a id="more"></a>

<h2 id="新增数据表"><a href="#新增数据表" class="headerlink" title="新增数据表"></a>新增数据表</h2><p>创建脚本修改字段和表名<br>打开数据表所在路径：<br><img src="PostgreSQL%E6%95%B0%E6%8D%AE%E5%BA%93/TablePath.png" alt></p>
<p>更改图中相应字段表名后点击黑色方框中的执行按钮并确认输出窗口为成功即可<br><img src="PostgreSQL%E6%95%B0%E6%8D%AE%E5%BA%93/CreatTableScript.png" alt></p>
<p><img src="PostgreSQL%E6%95%B0%E6%8D%AE%E5%BA%93/TableScript.png" alt></p>
<h2 id="新增字段"><a href="#新增字段" class="headerlink" title="新增字段"></a>新增字段</h2><p>当保存数据时Systemerror.log中存在警告缺少字段是可在数据库中新增缺少的字段<br><img src="PostgreSQL%E6%95%B0%E6%8D%AE%E5%BA%93/MissField.png" alt></p>
<p>图中Miss Field List:后面就是数据库中缺少的字段名</p>
<h3 id="创建脚本新增字段"><a href="#创建脚本新增字段" class="headerlink" title="创建脚本新增字段"></a>创建脚本新增字段</h3><p><img src="PostgreSQL%E6%95%B0%E6%8D%AE%E5%BA%93/CreatFieldScript.png" alt></p>
<p>如下所示，新增字段并根据需要更改字段长度即可</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- Column: "前轮侧滑"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- ALTER TABLE public."侧滑表" DROP COLUMN "前轮侧滑";</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> public.<span class="string">"侧滑表"</span> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> <span class="string">"新增字段1"</span> <span class="built_in">character</span> <span class="built_in">varying</span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> public.<span class="string">"侧滑表"</span> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> <span class="string">"新增字段2"</span> <span class="built_in">character</span> <span class="built_in">varying</span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> public.<span class="string">"侧滑表"</span> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> <span class="string">"新增字段3"</span> <span class="built_in">character</span> <span class="built_in">varying</span>(<span class="number">10</span>);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>PostgreSQL</category>
      </categories>
  </entry>
  <entry>
    <title>刷题记</title>
    <url>/%E5%88%B7%E9%A2%98%E8%AE%B0.html</url>
    <content><![CDATA[<center>简介</center>
记录刷题过程中遇到问题及新知识
<a id="more"></a>

<h2 id="System-Collections"><a href="#System-Collections" class="headerlink" title="System.Collections"></a>System.Collections</h2><h3 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h3><p>在C#中，数组由于是固定长度的，由于这种限制不方便，所以出现了ArrayList<br>ArrayList是可变长数组，可以将任意多的数据Add到ArrayList里面。其内部维护的数组，当长度不足时，会自动扩容为原来的两倍。<br>但是ArrayList也有一个缺点，就是存入ArrayList里面的数据都是Object类型的，所以如果将值类型存入和取出的时候会发生装箱、拆箱操作(就是值类型与引用类型之间的转换)，这个会影响程序性能。在.Net 2.0泛型出现以后，就提供了List<t>。</t></p>
<h3 id="List"><a href="#List" class="headerlink" title="List"></a>List<t></t></h3><p>List<t>是ArrayList的泛型版本，它不再需要装箱拆箱，直接取，直接用，它基本与ArrayList一致，不过在使用的时候要先设置好它的类型，而设置好类型之后，不是这种类型的数据，是不允许Add进去的<br>就性能来说，如果要存进数组的只有一种数据，那么无疑List<t>是最优选择<br><strong>List存储的数据是有序并且可以重复的。 采用链表存储数据</strong></t></t></p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">List&lt;<span class="keyword">int</span>&gt; ListInt = <span class="keyword">new</span> List&lt;<span class="keyword">int</span>&gt;();</span><br><span class="line"><span class="comment">// 属性</span></span><br><span class="line">Count</span><br><span class="line"><span class="comment">// 方法</span></span><br><span class="line">Add(T)</span><br><span class="line">AddRange(IEnumerable&lt;T&gt;)</span><br><span class="line">Clear()</span><br><span class="line">Contains(T)</span><br><span class="line">Find(Predicate&lt;T&gt;) <span class="comment">//搜索与指定谓词所定义的条件相匹配的元素，并返回整个 List&lt;T&gt; 中的第一个匹配元素</span></span><br><span class="line">FindAll(Predicate&lt;T&gt;) <span class="comment">//检索与指定谓词定义的条件匹配的所有元素 返回List&lt;&gt;</span></span><br><span class="line">IndexOf(T)	<span class="comment">//搜索指定的对象，并返回整个 List&lt;T&gt; 中第一个匹配项的从零开始的索引</span></span><br><span class="line">LastIndexOf(T)	<span class="comment">//搜索指定对象并返回整个 List&lt;T&gt; 中最后一个匹配项的从零开始索引</span></span><br><span class="line">IndexOf(T, Int32)	<span class="comment">//搜索指定对象并返回 List&lt;T&gt; 中从指定索引到最后一个元素这部分元素中第一个匹配项的从零开始索引</span></span><br><span class="line">IndexOf(T, Int32, Int32)	<span class="comment">//搜索指定对象并返回 List&lt;T&gt; 中从指定索引开始并包含指定元素数的这部分元素中第一个匹配项的从零开始索引</span></span><br><span class="line">Insert(Int32, T)	<span class="comment">//将元素插入到 List&lt;T&gt; 中的指定索引处</span></span><br><span class="line">Remove(T) <span class="comment">//从 List&lt;T&gt; 中删除特定对象的第一个匹配项</span></span><br><span class="line">Reverse()	<span class="comment">//将整个 List&lt;T&gt; 中元素的顺序反转</span></span><br><span class="line">Reverse(Int32, Int32)	<span class="comment">//将指定范围中元素的顺序反转</span></span><br><span class="line">Sort()	<span class="comment">//使用默认比较器对整个 List&lt;T&gt; 中的元素进行排序</span></span><br><span class="line">ToArray()	<span class="comment">//将 List&lt;T&gt; 的元素复制到新数组中</span></span><br></pre></td></tr></table></figure>

</div></div>
<h3 id="HashTable"><a href="#HashTable" class="headerlink" title="HashTable"></a>HashTable</h3><p>HashTable是一种根据key查找非常快的键值数据结构，不能有重复key，而且由于其特点，其长度总是一个素数，所以扩容后容量会比2倍大一点点，加载因子为0.72f。<br>当要大量使用key来查找value的时候，HashTable无疑是最有选择，HashTable与ArrayList一样，是非泛型的，value存进去是object,存取会发生装箱、拆箱，所以出现了Dictionary&lt;T,T&gt;</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 属性</span></span><br><span class="line">Count <span class="comment">//获取包含在 Hashtable 中的键/值对的数目</span></span><br><span class="line">Keys</span><br><span class="line">Values</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法</span></span><br><span class="line">Add(Object, Object)</span><br><span class="line">Clear()</span><br><span class="line">Clone()</span><br><span class="line">Contains(Object)</span><br><span class="line">ContainsKey(Object)</span><br><span class="line">ContainsValue(Object)</span><br><span class="line">GetHash(Object)	<span class="comment">//返回指定键的哈希代码</span></span><br><span class="line">Remove(Object)</span><br></pre></td></tr></table></figure>

</div></div>
<h3 id="Dictionary-lt-T-T-gt"><a href="#Dictionary-lt-T-T-gt" class="headerlink" title="Dictionary&lt;T,T&gt;"></a>Dictionary&lt;T,T&gt;</h3><p>Dictionary&lt;T,T&gt;是HashTable的泛型版本，存取同样快，但是不需要装箱和拆箱了。而且，其优化了算法，Hashtable是0.72，它的浪费容量少了很多</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">Dictionary&lt;<span class="keyword">string</span>,Person&gt; Dic = <span class="keyword">new</span> Dictionary&lt;<span class="keyword">string</span>,Person&gt;();</span><br></pre></td></tr></table></figure>

<h3 id="HashSet"><a href="#HashSet" class="headerlink" title="HashSet"></a>HashSet<t></t></h3><p>HashSet<t>类，算法，存储结构都与哈希表相同，主要是设计用来做高性能集运算的，例如对两个集合求交集、并集、差集等。集合中包含一组不重复出现且无特定顺序的元素<br><strong>HashSet存储的数据是无序并且唯一的，底层使用HashMap存储数据</strong><br>Add(T) 方法返回值为如果该元素添加到 HashSet<t> 对象中则为 true；如果该元素已存在则为 false</t></t></p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">HashSet&lt;<span class="keyword">int</span>&gt; numbers1;</span><br><span class="line">HashSet&lt;<span class="keyword">int</span>&gt; numbers2;</span><br><span class="line"><span class="comment">//分别进行numbers1和numbers2的值初始化或赋值</span></span><br><span class="line">numbers1.UnionWith(numbers2);<span class="comment">//求两个集合的并集。</span></span><br><span class="line">numbers1.IntersectWith(numbers2);<span class="comment">//求两个集合的交集。</span></span><br><span class="line">numbers1.ExceptWith(numbers2);<span class="comment">//求两个集合的差集。</span></span><br><span class="line">numbers1.SymmetricExceptWith(numbers2);<span class="comment">//求两个集合的对称差集。</span></span><br><span class="line"><span class="comment">// 属性</span></span><br><span class="line">Count <span class="comment">//获取集中包含的元素数</span></span><br><span class="line">Comparer <span class="comment">//获取用于确定集中的值是否相等的 IEqualityComparer&lt;T&gt; 对象</span></span><br><span class="line"><span class="comment">// 方法</span></span><br><span class="line">Add() <span class="comment">//将项目添加到HashSet之中</span></span><br><span class="line">Clear() <span class="comment">//清空HashSet里面的值</span></span><br><span class="line">Remove() <span class="comment">//从HashSet中移除值</span></span><br><span class="line">Contains() <span class="comment">//判断HashSet是否包含指定项目</span></span><br><span class="line">Equals(Object) <span class="comment">//判断是否相等</span></span><br></pre></td></tr></table></figure>

</div></div>
<h3 id="Queue、Queue"><a href="#Queue、Queue" class="headerlink" title="Queue、Queue"></a>Queue、Queue<t></t></h3><p>Queue队列，Queue<t>泛型队列，队列，先进先出</t></p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 属性</span></span><br><span class="line">Count</span><br><span class="line"><span class="comment">// 方法</span></span><br><span class="line">Clear()</span><br><span class="line">Contains(T)</span><br><span class="line">Dequeue()	<span class="comment">//移除并返回位于 Queue&lt;T&gt; 开始处的对象</span></span><br><span class="line">Enqueue(T)	<span class="comment">//将一个对象添加到 Queue&lt;T&gt; 的末尾</span></span><br><span class="line">Peek()	<span class="comment">//返回位于 Queue&lt;T&gt; 开始处的对象但不将其移除</span></span><br></pre></td></tr></table></figure>

</div></div>
<h3 id="Stack、Stack"><a href="#Stack、Stack" class="headerlink" title="Stack、Stack"></a>Stack、Stack<t></t></h3><p>Stack堆栈，先进后出</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 属性</span></span><br><span class="line">Count</span><br><span class="line"><span class="comment">// 方法</span></span><br><span class="line">Clear()</span><br><span class="line">Contains(T)</span><br><span class="line">Pop()	<span class="comment">//删除并返回 Stack&lt;T&gt; 顶部的对象</span></span><br><span class="line">Push(T)	<span class="comment">//在 Stack&lt;T&gt; 的顶部插入一个对象</span></span><br><span class="line">Peek()	<span class="comment">//返回位于 Stack&lt;T&gt; 顶部的对象但不将其移除</span></span><br><span class="line">TryPop(T)	<span class="comment">//返回一个值，该值指示 Stack&lt;T&gt; 的顶部是否有对象；如果有，则将其复制到 result 参数，并从 Stack&lt;T&gt; 中删除它</span></span><br></pre></td></tr></table></figure>

</div></div>
<h3 id="SortedList、SortedList-lt-TKey-TValue-gt"><a href="#SortedList、SortedList-lt-TKey-TValue-gt" class="headerlink" title="SortedList、SortedList&lt;TKey,TValue&gt;"></a>SortedList、SortedList&lt;TKey,TValue&gt;</h3><p>SortedList集合中的数据是有序的。可以通过key来匹配数据，也可以通过int下标来获取数据<br>添加操作比ArrayList，Hashtable略慢；查找、删除操作比ArrayList快，比Hashtable慢</p>
<h3 id="SortedDictionary-lt-TKey-TValue-gt"><a href="#SortedDictionary-lt-TKey-TValue-gt" class="headerlink" title="SortedDictionary&lt;TKey,TValue&gt;"></a>SortedDictionary&lt;TKey,TValue&gt;</h3><p>SortedDictionary&lt;TKey,TValue&gt;相比于SortedList&lt;TKey,TValue&gt;其性能优化了，SortedList&lt;TKey,TValue&gt;其内部维护的是数组而SortedDictionary&lt;TKey,TValue&gt;内部维护的是红黑树(平衡二叉树)的一种，因此其占用的内存，性能都好于SortedDictionary&lt;TKey,TValue&gt;。唯一差在不能用下标取值</p>
<h3 id="ListDictionary-单向链表-LinkedList-双向链表"><a href="#ListDictionary-单向链表-LinkedList-双向链表" class="headerlink" title="ListDictionary(单向链表),LinkedList(双向链表)"></a>ListDictionary(单向链表),LinkedList<t>(双向链表)</t></h3><p>List<t>,ArrayList,Hashtable等容器类，其内部维护的是数组Array来，ListDictionary和LinkedList<t>不用Array，而是用链表的形式来保存。链表最大的好处就是节约内存空间<br>ListDictionary是单向链表<br>LinkedList<t>双向链表。双向链表的优势，可以插入到任意位置</t></t></t></p>
<h3 id="HybridDictionary"><a href="#HybridDictionary" class="headerlink" title="HybridDictionary"></a>HybridDictionary</h3><p>HybridDictionary的类，充分利用了Hashtable查询效率高和ListDictionary占用内存空间少的优点，内置了Hashtable和ListDictionary两个容器，添加数据时内部逻辑如下:<br>当数据量小于8时，Hashtable为null，用ListDictionary保存数据<br>当数据量大于8时，实例化Hashtable，数据转移到Hashtable中，然后将ListDictionary置为null</p>
<h3 id="BitArray"><a href="#BitArray" class="headerlink" title="BitArray"></a>BitArray</h3><p>BitArray用于二进制运算，”或”、”非”、”与”、”异或非”等这种操作，只能存true或false</p>
<h2 id="字符串动态匹配算法"><a href="#字符串动态匹配算法" class="headerlink" title="字符串动态匹配算法"></a>字符串动态匹配算法</h2><p>BF算法<br>RK算法<br>BM算法<br>KPM算法<br>Sunday算法</p>
<h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><p>可理解为数列求通项过程<br>f(n) = f(n - 1) + f(n - 2)</p>
<h2 id="逻辑运算符短路效应"><a href="#逻辑运算符短路效应" class="headerlink" title="逻辑运算符短路效应"></a>逻辑运算符短路效应</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(A &amp;&amp; B)  <span class="comment">// 若 A 为 false ，则 B 的判断不会执行（即短路），直接判定 A &amp;&amp; B 为 false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(A || B) <span class="comment">// 若 A 为 true ，则 B 的判断不会执行（即短路），直接判定 A || B 为 true</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>字符串匹配算法</title>
    <url>/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D%E7%AE%97%E6%B3%95.html</url>
    <content><![CDATA[<center>写在前面</center>

<a id="more"></a>

<p>##</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">

</div></div>
]]></content>
  </entry>
  <entry>
    <title>动态EV(ETP)测试</title>
    <url>/%E5%8A%A8%E6%80%81EV(ETP)%E6%B5%8B%E8%AF%95.html</url>
    <content><![CDATA[<center>说明</center>
动态EV或ETP工位简单说明
<a id="more"></a>

<p>新版本ETP测试工况分四部分：加速、匀速、滑行、制动<br>测试内容除了基本电流电压等BMS数据读取还包括各阶段的效率及能量消耗率的计算等</p>
<h2 id="程序配置"><a href="#程序配置" class="headerlink" title="程序配置"></a>程序配置</h2><p>最新程序增加是否为同轴滚筒的配置：在EvDynamicTestCurve.xml中isCoaxial配置为true表示为同轴滚筒<br>非同轴滚筒计算时F为左右滚筒的合力</p>
<h2 id="计算方法"><a href="#计算方法" class="headerlink" title="计算方法"></a>计算方法</h2><p>加速、匀速过程中电能转化为动能，效率计算公式为 <strong>Fvt/UIt</strong><br>滑行、制动过程中动能转化为电能，效率计算公式为 <strong>UIt/Fvt</strong><br>其中F、v、U、I均为各阶段的平均值</p>
<h3 id="能量消耗率"><a href="#能量消耗率" class="headerlink" title="能量消耗率"></a>能量消耗率</h3><p>C = E/D 单位为(kW<em>h)/100km<br>程序中的计算公式为：整个过程中的平均100</em>UIt/d</p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>由于I为负数时表示放电加速所以计算时简单处理为<br>I为负：效率 = Fvt/UIt<br>I为正：效率 = UIt/Fvt</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>JSON字符串</title>
    <url>/JSON%E5%AD%97%E7%AC%A6%E4%B8%B2.html</url>
    <content><![CDATA[<center>写在前面</center>

<a id="more"></a>

<h2 id="C-生成方法"><a href="#C-生成方法" class="headerlink" title="C#生成方法"></a>C#生成方法</h2><h3 id="Newtonsoft"><a href="#Newtonsoft" class="headerlink" title="Newtonsoft"></a>Newtonsoft</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">String apiClass = <span class="string">"apiClass"</span>;</span><br><span class="line">String apiCommand = <span class="string">"apiCommand"</span>;</span><br><span class="line">JObject postedJObject = <span class="keyword">new</span> JObject();</span><br><span class="line">postedJObject.Add(<span class="string">"class"</span>, apiClass);</span><br><span class="line">postedJObject.Add(<span class="string">"cmd"</span>, apiCommand);</span><br><span class="line"></span><br><span class="line">String param1 = <span class="string">"param1"</span>;</span><br><span class="line">String param2 = <span class="string">"param2"</span>;</span><br><span class="line">JObject apiJsonParam = <span class="keyword">new</span> JObject();</span><br><span class="line">apiJsonParam.Add(<span class="string">"param1"</span>, param1);</span><br><span class="line">apiJsonParam.Add(<span class="string">"param2"</span>, param2);</span><br><span class="line">postedJObject.Add(<span class="string">"param"</span>, apiJsonParam);</span><br><span class="line">apiJsonParam[<span class="string">"param1"</span>] = param1);</span><br><span class="line">apiJsonParam[<span class="string">"param2"</span>] = param2);</span><br><span class="line">postedJObject[<span class="string">"param"</span>] = apiJsonParam;</span><br><span class="line"></span><br><span class="line">JArray jArray = <span class="keyword">new</span> JArray();</span><br><span class="line">JObject arr1 = <span class="keyword">new</span> JObject();</span><br><span class="line">arr1.Add(<span class="string">"arr1"</span>, <span class="string">"this is arr1"</span>);</span><br><span class="line">jArray.Add(arr1);</span><br><span class="line">JObject arr2 = <span class="keyword">new</span> JObject();</span><br><span class="line">arr2.Add(<span class="string">"arr2"</span>, <span class="string">"this is arr2"</span>);</span><br><span class="line">jArray.Add(arr2);</span><br><span class="line">postedJObject.Add(<span class="string">"jarray"</span>, jArray);</span><br><span class="line">String paramString = postedJObject.ToString(Newtonsoft.Json.Formatting.Indented, <span class="literal">null</span>);</span><br></pre></td></tr></table></figure>

<p>输出结果为</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"class"</span>: <span class="string">"apiClass"</span>,</span><br><span class="line">  <span class="string">"cmd"</span>: <span class="string">"apiCommand"</span>,</span><br><span class="line">  <span class="string">"param"</span>: &#123;</span><br><span class="line">    <span class="string">"param1"</span>: <span class="string">"param1"</span>,</span><br><span class="line">    <span class="string">"param2"</span>: <span class="string">"param2"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"jarray"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"arr1"</span>: <span class="string">"this is arr1"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"arr2"</span>: <span class="string">"this is arr2"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>

<h3 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h3><p>string StrJson = JsonConvert.SerializeObject(Classobj);</p>
<h4 id="读取JSON文件"><a href="#读取JSON文件" class="headerlink" title="读取JSON文件"></a>读取JSON文件</h4><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">string</span> json = <span class="keyword">string</span>.Empty;</span><br><span class="line"><span class="keyword">using</span> (FileStream fs = <span class="keyword">new</span> FileStream(filepath, FileMode.Open, System.IO.FileAccess.Read, FileShare.ReadWrite))</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">using</span> (StreamReader sr = <span class="keyword">new</span> StreamReader(fs, Encoding.GetEncoding(“gb2312”)))</span><br><span class="line">  &#123;</span><br><span class="line">    json = sr.ReadToEnd().ToString();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">string</span> json = GetFileJson(filepath);</span><br></pre></td></tr></table></figure>

<h3 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h3><p>ClassA a = JsonConvert.DeserializeObject<classa>(strResult);</classa></p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">List&lt;Student&gt; lstStuModel = <span class="keyword">new</span> List&lt;Student&gt;()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">new</span> Student()&#123;ID=<span class="number">1</span>,Name=<span class="string">"Name1"</span>,Age=<span class="number">250</span>,Sex=<span class="string">"男"</span>&#125;,</span><br><span class="line"><span class="keyword">new</span> Student()&#123;ID=<span class="number">2</span>,Name=<span class="string">"Name2"</span>,Age=<span class="number">300</span>,Sex=<span class="string">"女"</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Json.NET序列化</span></span><br><span class="line"><span class="keyword">string</span> jsonData = JsonConvert.SerializeObject(lstStuModel);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Json.NET反序列化</span></span><br><span class="line"><span class="keyword">string</span> json = <span class="string">@"&#123; 'Name':'Name1','Age':'3000','ID':'1','Sex':'女'&#125;"</span>;</span><br><span class="line">Student descJsonStu = JsonConvert.DeserializeObject&lt;Student&gt;(json);<span class="comment">//反序列化</span></span><br><span class="line">Console.WriteLine(<span class="keyword">string</span>.Format(<span class="string">"反序列化： ID=&#123;0&#125;,Name=&#123;1&#125;,Sex=&#123;2&#125;,Sex=&#123;3&#125;"</span>, descJsonStu.ID, descJsonStu.Name, descJsonStu.Age, descJsonStu.Sex));</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>栈与队列Stack&amp;Queue</title>
    <url>/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97Stack&amp;Queue.html</url>
    <content><![CDATA[<center>写在前面</center>

<a id="more"></a>

<h2 id="栈与队列"><a href="#栈与队列" class="headerlink" title="栈与队列"></a>栈与队列</h2><p>线性表插入和删除操作不受限制 在任意位置进行<br>栈和队列是两种特殊的线性表。他们的数据元素之间具有顺序的逻辑关系，都采用顺序结构和链式结构存储</p>
<blockquote>
<p>栈的插入和删除操作只允许在线性表的尾端(栈顶Top)进行<br>队列插入操作限定在线性表的尾部而其它操作限定在表的头部进行</p>
</blockquote>
<p>栈的特点为后进先出，队列先进先出</p>
<h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><p>表尾称为栈顶（Top）,另一端称为栈底（Bottom），当栈中没有数据元素时叫空栈（Empty Stack）<br>方法：</p>
<blockquote>
<p>Push（）入栈 //添加数据<br>Pop（）出栈 //删除数据，返回被删除的数据<br>Peek（）//取得栈顶的元素，不删除<br>ToArray() //方法创建数组并将堆栈元素复制到其中<br>Contains() //方法判断一个元素是否在栈中<br>Clear（）//清空所有数据<br>Count //取得栈中元素的个数</p>
</blockquote>
<p>接口定义：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IStack</span>&#123;</span><br><span class="line"><span class="keyword">int</span> Count&#123;<span class="keyword">get</span>;&#125;<span class="comment">//求栈中元素个数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetLength</span>(<span class="params"></span>)</span>;<span class="comment">//求栈的长度</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsEmpty</span>(<span class="params"></span>)</span>;<span class="comment">//判断栈是否为空</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"></span>)</span>;<span class="comment">//清空操作</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Push</span>(<span class="params">T item</span>)</span>;<span class="comment">//入栈操作</span></span><br><span class="line"><span class="function">T <span class="title">Pop</span>(<span class="params"></span>)</span>;<span class="comment">//出栈操作</span></span><br><span class="line"><span class="function">T <span class="title">Peek</span>(<span class="params"></span>)</span>;<span class="comment">//取栈顶元素</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>栈的本质是一个线性表，线性表有两种存储形式，那么栈也有分为栈的顺序存储结构和栈的链式存储结构<br>用连续的存储空间来存储栈中的数据元素(使用数组)，这样的栈称为顺序栈(Sequence Stack)<br>类似于顺序表，用一维数组来存放顺序栈中的数据元素<br>栈顶指示器 top 设在数组下标为 0 的端，top随着插入和删除而变化，当栈为空时，top=-1</p>
<p>栈的另外一种存储方式是链式存储，这样的栈称为链栈(Linked Stack)<br>由于链栈的操作只是在一端进行，为了操作方便，把栈顶设在链表的头部，并且不需要头结点</p>
<p>示例</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Stack&lt;T&gt; staA = new Stack&lt;T&gt;();</span></span><br><span class="line">Stack&lt;<span class="keyword">string</span>&gt; staA = <span class="keyword">new</span> Stack&lt;<span class="keyword">string</span>&gt;();            </span><br><span class="line">staA.Push(<span class="string">"one"</span>);            </span><br><span class="line">staA.Push(<span class="string">"two"</span>);            </span><br><span class="line">staA.Push(<span class="string">"three"</span>);            </span><br><span class="line">staA.Push(<span class="string">"four"</span>);            </span><br><span class="line">staA.Push(<span class="string">"five"</span>);            </span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">string</span> a <span class="keyword">in</span> staA)<span class="comment">//遍历元素，将之变成string类型            </span></span><br><span class="line">&#123;                </span><br><span class="line">  Console.WriteLine(a);            </span><br><span class="line">&#125;             </span><br><span class="line"><span class="comment">//peek是把栈顶元素弹出（取出），但不删除            </span></span><br><span class="line">Console.WriteLine(<span class="string">"取出的元素是：&#123;0&#125;"</span>, staA.Peek());            </span><br><span class="line"><span class="comment">//pop是把栈顶的元素弹出（取出），并将其删除            </span></span><br><span class="line">Console.WriteLine(<span class="string">"删除的栈顶元素是：&#123;0&#125;"</span>,staA .Pop ());             </span><br><span class="line"><span class="comment">//此时再输出一次栈的元素，会发现five被删除了            </span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">string</span> b <span class="keyword">in</span> staA)            </span><br><span class="line">&#123;                </span><br><span class="line">  Console.ForegroundColor = ConsoleColor.Blue;                </span><br><span class="line">  Console.WriteLine(b);            </span><br><span class="line">&#125;             </span><br><span class="line"><span class="comment">//ToArray从栈底到栈顶将一个栈复制到另一个栈中            </span></span><br><span class="line">Stack&lt;<span class="keyword">string</span>&gt; staB = <span class="keyword">new</span> Stack&lt;<span class="keyword">string</span>&gt;(staA.ToArray());            </span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">string</span> c <span class="keyword">in</span> staB)            </span><br><span class="line">&#123;                </span><br><span class="line">  Console.ForegroundColor = ConsoleColor.Cyan;                </span><br><span class="line">  Console.WriteLine(c);            </span><br><span class="line">&#125;             </span><br><span class="line">Console.WriteLine(<span class="string">" "</span>);            </span><br><span class="line">Console.ForegroundColor = ConsoleColor.DarkRed;            </span><br><span class="line"><span class="comment">//contains方法，判断一个元素是否在栈中            </span></span><br><span class="line">Console.WriteLine(<span class="string">"six是否在栈中？"</span>);            </span><br><span class="line">Console.WriteLine(staA .Contains (<span class="string">"six"</span>));</span><br></pre></td></tr></table></figure>

<h2 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h2><p>插入操作的表尾称为队尾(Rear)，把进行其它操作的头部称为队头(Front)。当队列中没有数据元素时称为空队列(EmptyQueue)<br>方法：</p>
<blockquote>
<p>Enqueue() 入队（放在队尾）<br>Dequeue() 出队（移除队首元素，并返回被移除的元素）<br>Peek() 取得队首的元素，不移除<br>Clear() 清空元素</p>
</blockquote>
<p>接口定义：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">public interface IQueue&lt;T&gt;&#123;</span><br><span class="line"><span class="keyword">int</span> Count&#123;<span class="keyword">get</span>;&#125;<span class="comment">//取得队列长度的属性</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetLength</span>(<span class="params"></span>)</span>;<span class="comment">//求队列的长度</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsEmpty</span>(<span class="params"></span>)</span>;<span class="comment">//判断队列是否为空</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"></span>)</span>;<span class="comment">//清空队列</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Enqueue</span>(<span class="params">T item</span>)</span>;<span class="comment">//入队</span></span><br><span class="line"><span class="function">T <span class="title">Dequque</span>(<span class="params"></span>)</span>;<span class="comment">//出队</span></span><br><span class="line"><span class="function">T <span class="title">Peek</span>(<span class="params"></span>)</span>;<span class="comment">//取队头元素</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>用连续的存储空间来存储队列中的数据元素，这样的队列称为顺序队列(SequenceQueue)<br>类似于顺序栈，用一维数组来存放顺序队列中的数据元素。队头位置设在数组下标为 0 的端，用 front 表示；队尾位置设在数组的另一端，用rear 表示<br>front 和 rear 随着插入和删除而变化。当队列为空时， front=rear=-1</p>
<p>队列的另外一种存储方式是链式存储，这样的队列称为链队列(LinkedQueue)<br>由于链队列的操作只是在一端进行，为了操作方便，把队头设在链表的头部，并且不需要头结点</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">

</div></div>
]]></content>
  </entry>
  <entry>
    <title>GAE AppID</title>
    <url>/GAE%20AppID.html</url>
    <content><![CDATA[<center>写在前面</center>
GAEProxy AppID
<a id="more"></a>

<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">testpro<span class="number">-199603</span>|mytestpro<span class="number">-233908</span>|justinxxnet01|xxnet<span class="number">-1</span>|xxnet<span class="number">-2</span>|xxnet<span class="number">-3</span>|xxnet<span class="number">-4</span>|xxnet<span class="number">-5</span>|xxnet<span class="number">-6</span>|xxnet<span class="number">-7</span>|xxnet<span class="number">-8</span>|xxnet<span class="number">-9</span>|xxnet<span class="number">-10</span>|xxnet<span class="number">-11</span>|xxnet<span class="number">-12</span>|xxnet<span class="number">-13</span>|xxnet<span class="number">-14</span>|xxnet<span class="number">-15</span>|xxnet<span class="number">-16</span>|xxnet<span class="number">-17</span>|xxnet<span class="number">-18</span>|xxnet<span class="number">-19</span>|xxnet<span class="number">-20</span>|xxnet<span class="number">-21</span>|xxnet<span class="number">-22</span>|xxnet<span class="number">-23</span>|xxnet<span class="number">-24</span>|xxnet<span class="number">-25</span>|xxnet<span class="number">-26</span>|xxnet<span class="number">-27</span>|xxnet<span class="number">-28</span>|xxnet<span class="number">-29</span>|xxnet<span class="number">-30</span>|xxnet<span class="number">-31</span>|xxnet<span class="number">-32</span>|xxnet<span class="number">-33</span>|xxnet<span class="number">-34</span>|xxnet<span class="number">-35</span>|xxnet<span class="number">-36</span>|xxnet<span class="number">-37</span>|xxnet<span class="number">-38</span>|xxnet<span class="number">-39</span>|xxnet<span class="number">-40</span>|xxnet<span class="number">-41</span>|xxnet<span class="number">-42</span>|xxnet<span class="number">-43</span>|xxnet<span class="number">-44</span>|xxnet<span class="number">-45</span>|xxnet<span class="number">-46</span>|xxnet<span class="number">-47</span>|xxnet<span class="number">-48</span>|xxnet<span class="number">-49</span>|xxnet<span class="number">-50</span>|xxnet<span class="number">-51</span>|xxnet<span class="number">-52</span>|xxnet<span class="number">-53</span>|xxnet<span class="number">-54</span>|xxnet<span class="number">-55</span>|xxnet<span class="number">-56</span>|xxnet<span class="number">-57</span>|xxnet<span class="number">-58</span>|xxnet<span class="number">-59</span>|xxnet<span class="number">-60</span>|xxnet<span class="number">-61</span>|xxnet<span class="number">-62</span>|xxnet<span class="number">-63</span>|xxnet<span class="number">-64</span>|xxnet<span class="number">-65</span>|xxnet<span class="number">-66</span>|xxnet<span class="number">-67</span>|xxnet<span class="number">-68</span>|xxnet<span class="number">-69</span>|xxnet<span class="number">-70</span>|xxnet<span class="number">-71</span>|xxnet<span class="number">-72</span>|xxnet<span class="number">-72</span>|xxnet<span class="number">-73</span>|xxnet<span class="number">-74</span>|xxnet<span class="number">-75</span>|xxnet<span class="number">-76</span>|xxnet<span class="number">-77</span>|xxnet<span class="number">-78</span>|xxnet<span class="number">-79</span>|xxnet<span class="number">-80</span>|xxnet<span class="number">-81</span>|xxnet<span class="number">-82</span>|xxnet<span class="number">-83</span>|xxnet<span class="number">-84</span>|xxnet<span class="number">-85</span>|xxnet<span class="number">-86</span>|xxnet<span class="number">-87</span>|xxnet<span class="number">-88</span>|xxnet<span class="number">-89</span>|xxnet<span class="number">-90</span>|xxnet<span class="number">-91</span>|xxnet<span class="number">-92</span>|xxnet<span class="number">-93</span>|xxnet<span class="number">-94</span>|xxnet<span class="number">-95</span>|xxnet<span class="number">-96</span>|xxnet<span class="number">-97</span>|xxnet<span class="number">-98</span>|xxnet<span class="number">-99</span>|xxnet<span class="number">-100</span>|xxnet<span class="number">-101</span>|xxnet<span class="number">-102</span>|xxnet<span class="number">-103</span>|xxnet<span class="number">-104</span>|xxnet<span class="number">-105</span>|xxnet<span class="number">-106</span>|xxnet<span class="number">-107</span>|xxnet<span class="number">-108</span>|xxnet<span class="number">-109</span>|xxnet<span class="number">-110</span>|xxnet<span class="number">-111</span>|xxnet<span class="number">-112</span>|xxnet<span class="number">-113</span>|xxnet<span class="number">-114</span>|xxnet<span class="number">-115</span>|xxnet<span class="number">-116</span>|xxnet<span class="number">-117</span>|xxnet<span class="number">-118</span>|xxnet<span class="number">-119</span>|xxnet<span class="number">-120</span>|xxnet<span class="number">-121</span>|xxnet<span class="number">-122</span>|xxnet<span class="number">-123</span>|xxnet<span class="number">-124</span>|xxnet<span class="number">-125</span>|xxnet<span class="number">-126</span>|xxnet<span class="number">-127</span>|xxnet<span class="number">-128</span>|xxnet<span class="number">-129</span>|xxnet<span class="number">-130</span>|xxnet<span class="number">-131</span>|xxnet<span class="number">-132</span>|xxnet<span class="number">-133</span>|xxnet<span class="number">-134</span>|xxnet<span class="number">-135</span>|xxnet<span class="number">-136</span>|xxnet<span class="number">-137</span>|xxnet<span class="number">-138</span>|xxnet<span class="number">-139</span>|xxnet<span class="number">-140</span>|xxnet<span class="number">-141</span>|xxnet<span class="number">-142</span>|xxnet<span class="number">-143</span>|xxnet<span class="number">-144</span>|xxnet<span class="number">-145</span>|xxnet<span class="number">-146</span>|xxnet<span class="number">-147</span>|xxnet<span class="number">-148</span>|xxnet<span class="number">-149</span>|xxnet<span class="number">-150</span>|xxnet<span class="number">-151</span>|xxnet<span class="number">-152</span>|xxnet<span class="number">-153</span>|xxnet<span class="number">-154</span>|xxnet<span class="number">-155</span>|xxnet<span class="number">-156</span>|xxnet<span class="number">-157</span>|xxnet<span class="number">-158</span>|xxnet<span class="number">-159</span>|celtic-bazaar<span class="number">-122813</span>|chrome--<span class="number">-1231</span>|chrome-<span class="number">-1231</span>|chrome<span class="number">-06</span>|chrome<span class="number">-07</span>|chrome<span class="number">-08</span>|chrome<span class="number">-09</span>|chrome<span class="number">-10</span>|chrome<span class="number">-11</span>|chrome<span class="number">-12</span>|chrome<span class="number">-1231</span>|chrome<span class="number">-1231</span><span class="number">-1231</span>|cool-continuity<span class="number">-122814</span>|coral-muse<span class="number">-122814</span>|curious-memory<span class="number">-122814</span>|dospytang11|dospytang12|dospytang13|feisty-current<span class="number">-122813</span>|glassy-vial<span class="number">-122813</span>|groovy-patrol<span class="number">-122814</span>|jingtao<span class="number">-001</span>|practical-album<span class="number">-122814</span>|proud-storm<span class="number">-122813</span>|sound-invention<span class="number">-122813</span>|starlit-cocoa<span class="number">-122814</span>|third-circle<span class="number">-122813</span>|wyslmt11|wyslmt12|xx-net-agent|xxnet-<span class="number">-1229</span>|xxnet<span class="number">-1017</span>|xxnet<span class="number">-1018</span>|xxnet<span class="number">-1019</span>|xxnet<span class="number">-1021</span>|xxnet<span class="number">-1022</span>|xxnet<span class="number">-1023</span>|xxnet<span class="number">-1024</span>|xxnet<span class="number">-1025</span>|xxnet<span class="number">-1026</span>|xxnet<span class="number">-1027</span>|xxnet<span class="number">-1028</span>|xxnet<span class="number">-1029</span>|xxnet<span class="number">-103</span><span class="number">-1188</span>|xxnet<span class="number">-1030</span>|xxnet<span class="number">-1031</span>|xxnet<span class="number">-1032</span><span class="number">-1188</span>|xxnet<span class="number">-1033</span>|xxnet<span class="number">-1034</span>|xxnet<span class="number">-1035</span>|xxnet<span class="number">-1037</span>|xxnet<span class="number">-1053</span>|xxnet<span class="number">-1054</span>|xxnet<span class="number">-200</span><span class="number">-1199</span>|xxnet<span class="number">-201</span><span class="number">-1199</span>|xxnet<span class="number">-202</span><span class="number">-1199</span>|xxnet<span class="number">-203</span><span class="number">-1199</span>|xxnet<span class="number">-204</span><span class="number">-1199</span>|xxnet<span class="number">-205</span><span class="number">-1199</span>|xxnet<span class="number">-206</span><span class="number">-1199</span>|xxnet<span class="number">-207</span><span class="number">-1199</span>|xxnet-cntchen|xxnet-evachen|xxnet-fgfw|xxnet-fgfw<span class="number">-1</span>|xxnet-fgfw<span class="number">-2</span>|xxnet-lennon|xxnet-xlx01|xxnet-xlx02|xxnet-xlx03|xxnet-xlx04|xxnet-xlx05|xxnet-xlx06|xxnet-xlx07|xxnet-xlx08|xxnet-xlx09|xxnet-xlx10|xxnet-xlx11|xxnet-xlx12|chrome26<span class="number">-1100</span>|chrome27<span class="number">-1100</span>|chrome28<span class="number">-1100</span>|chrome29<span class="number">-1100</span>|chrome30<span class="number">-1100</span>|xxnet-foshan2|xxnet-foshan3|xxnet-foshan4|xxnet-foshan5|xxnet-foshan6|chrome7<span class="number">-1234</span>|chrome8<span class="number">-1234</span>|chrome10<span class="number">-1209</span>|chrome11<span class="number">-1209</span>|chrome12<span class="number">-1209</span>|chrome2<span class="number">-1209</span>|alpine-air<span class="number">-123504</span>|caramel-theory<span class="number">-123504</span>|compact-life<span class="number">-123504</span>|clean-yew<span class="number">-123504</span>|cobalt-sector<span class="number">-123504</span>|eternal-outlook<span class="number">-123504</span>|flash-moonlight<span class="number">-123504</span>|omega-terrain<span class="number">-123504</span>|premium-weft<span class="number">-123504</span>|starlit-ship<span class="number">-123504</span>|saaas<span class="number">-1235</span>|x-micron<span class="number">-123504</span>|chrome6<span class="number">-1234</span>|chrome5<span class="number">-1234</span>|chrome4<span class="number">-1234</span>|chrome3<span class="number">-1234</span>|chrome2<span class="number">-1234</span>|chrome1<span class="number">-1234</span>|chrome0<span class="number">-1234</span>|chrome-<span class="number">-1234</span>|chrome--<span class="number">-1234</span>|chrome<span class="number">-1234</span>|chrome6<span class="number">-1209</span>|chrome4<span class="number">-1209</span>|chrome3<span class="number">-1209</span>|universal-stone<span class="number">-123514</span>|stoked-dominion<span class="number">-123514</span>|unique-ellipse<span class="number">-123514</span>|trans-gate<span class="number">-123514</span>|innate-summit<span class="number">-123514</span>|able-involution<span class="number">-123514</span>|helpful-ally<span class="number">-123514</span>|river-karma<span class="number">-123514</span>|future-synapse<span class="number">-123514</span>|booming-alchemy<span class="number">-123514</span>|storied-myth<span class="number">-123514</span>|folkloric-stone<span class="number">-123514</span>|cryptic-lattice<span class="number">-123514</span>|dulcet-bucksaw<span class="number">-123514</span>|airy-machine<span class="number">-123514</span>|e-lexicon<span class="number">-123514</span>|seventh-history<span class="number">-123514</span>|upbeat-voice<span class="number">-123514</span>|stately-math<span class="number">-123514</span>|lucid-sweep<span class="number">-123514</span>|nice-azimuth<span class="number">-123514</span>|spry-equator<span class="number">-123515</span>|neural-tome<span class="number">-123515</span>|famous-charge<span class="number">-123515</span>|elated-practice<span class="number">-123515</span>|unique-antonym<span class="number">-123515</span>|sharp-quest<span class="number">-123515</span>|manifest-altar<span class="number">-123515</span>|steel-citizen<span class="number">-123515</span>|fourth-walker<span class="number">-123515</span>|subtle-sublime<span class="number">-123515</span>|galvanized-<span class="keyword">case</span><span class="number">-123515</span>|xxnet-izual1|xxnet-izual2|xxnet-izual3|xxnet-izual4|xxnet-izual5|chrome11<span class="number">-1239</span>|chrome10<span class="number">-1239</span>|chrome9<span class="number">-1239</span>|chrome8<span class="number">-1239</span>|chrome7<span class="number">-1239</span>|chrome6<span class="number">-1239</span>|chrome5<span class="number">-1239</span>|chrome4<span class="number">-1239</span>|chrome3<span class="number">-1239</span>|chrome2<span class="number">-1239</span>|chrome0<span class="number">-1239</span>|xx-net008<span class="number">-1197</span>|tangtdjia|xxnet-kittycheny1|xxnet-kittycheny2|xxnet-kittycheny3|xxnet-kittycheny4|xxnet-kittycheny5|xxnet-kittycheny6|xxnet-sdcff1|xxnet-sdcff2|xxnet-sdcff3|xxnet-sdcff4|xxnet-sdcff5|xxnet-sdcff6|xxnet-sdcff7|xxnet-sdcff8|xxnet-sdcff9|xxnet-sdcff10|xxnet-sdcff11|xxnet-sdcff12|rosy-dialect<span class="number">-124115</span>|xxnet-sdcf8<span class="number">-1241</span>|xxnet-sdcf1|xxnet-sdcf2|xxnet-sdcf3|xxnet-sdcf4|xxnet-sdcf5|xxnet-sdcf6|xxnet-sdcf7|xxnet-sdcf8|xxnet-sdcf9|xxnet-sdcf10</span><br></pre></td></tr></table></figure>

</div></div>
]]></content>
  </entry>
  <entry>
    <title>BBK检测线联网</title>
    <url>/BBK%E6%A3%80%E6%B5%8B%E7%BA%BF%E8%81%94%E7%BD%91.html</url>
    <content><![CDATA[<center>写在前面</center>
检测线联网相关的基本配置说明
<a id="more"></a>

<h2 id="设备设置"><a href="#设备设置" class="headerlink" title="设备设置"></a>设备设置</h2><p>1、设备及服务器安装好运行环境<br>2、关闭防火墙<br>3、分配IP<br>4、保证工位与服务器相互可以Ping通</p>
<h2 id="工位配置"><a href="#工位配置" class="headerlink" title="工位配置"></a>工位配置</h2><h3 id="PostgreSQL配置"><a href="#PostgreSQL配置" class="headerlink" title="PostgreSQL配置"></a>PostgreSQL配置</h3><p>打开PostgreSQL菜单：工具-服务器配置-pg_hba.conf<br>新增如图配置后保存<br><img src="BBK%E6%A3%80%E6%B5%8B%E7%BA%BF%E8%81%94%E7%BD%91/Postgreconfi.png" alt></p>
<h3 id="BBK软件配置"><a href="#BBK软件配置" class="headerlink" title="BBK软件配置"></a>BBK软件配置</h3><p>1、确认流程中有初始化联网步骤，一般在Init_InitConst中一般命名为InitNet<br><img src="BBK%E6%A3%80%E6%B5%8B%E7%BA%BF%E8%81%94%E7%BD%91/InitNet.png" alt></p>
<p>2、确认流程中有上图中的红框中的设备号、线号的步骤<br>若没有可参考带有初始化联网的程序进行添加<br>3、打开BBK软件在菜单中配置<em>线号、设备号、服务器IP</em><br><img src="BBK%E6%A3%80%E6%B5%8B%E7%BA%BF%E8%81%94%E7%BD%91/BBKConfig.png" alt></p>
<h2 id="服务器软件配置"><a href="#服务器软件配置" class="headerlink" title="服务器软件配置"></a>服务器软件配置</h2><p>打开服务软件所在文件夹中Set.mdb数据库进行服务器联网配置</p>
<h3 id="StationConfig"><a href="#StationConfig" class="headerlink" title="StationConfig"></a>StationConfig</h3><p><img src="BBK%E6%A3%80%E6%B5%8B%E7%BA%BF%E8%81%94%E7%BD%91/StationConfig.png" alt></p>
<p>该表中每一行代表一个工位<br><strong>字段说明：</strong></p>
<blockquote>
<p>DeviceID：对应工位配置的设备号DeviceID<br>Describe：用于服务器显示的设备描述<br>LineID：对应工位配置的线号LineID<br>IPAdsress：工位IP<br>StationNo：用于服务器显示工位顺序<br>StationUpload：设置当前工位需要上传的表名 <strong>逗号为英文字符</strong></p>
</blockquote>
<h3 id="车辆查看配置"><a href="#车辆查看配置" class="headerlink" title="车辆查看配置"></a>车辆查看配置</h3><p><img src="BBK%E6%A3%80%E6%B5%8B%E7%BA%BF%E8%81%94%E7%BD%91/ViewConfig.png" alt></p>
<p>改表为显示测试数据页面的相关配置，根据需求进行相应配置即可</p>
<h2 id="四轮与标定或侧滑通讯"><a href="#四轮与标定或侧滑通讯" class="headerlink" title="四轮与标定或侧滑通讯"></a>四轮与标定或侧滑通讯</h2><h3 id="四轮"><a href="#四轮" class="headerlink" title="四轮"></a>四轮</h3><p>四轮程序中创建GeneralLib.xDvConfigClient对象<br>并在该对象下创建需要共享的对象<br>调用该对象的Init函数，参数选GeneralLib.xRemoterClientConfig；</p>
<h3 id="标定或侧滑"><a href="#标定或侧滑" class="headerlink" title="标定或侧滑"></a>标定或侧滑</h3><p>创建GeneralLib.GenO对象<br>调用该对象的InitRemoterTcpserver函数即可。</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>打开四轮程序，配置文件中会自动生成相关配置，对对象进行绑定即可；</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>SQL Server存储过程</title>
    <url>/SQL%20Server%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B.html</url>
    <content><![CDATA[<center>写在前面</center>
前面啥也没有
<a id="more"></a>

<h2 id="查询赋值"><a href="#查询赋值" class="headerlink" title="查询赋值"></a>查询赋值</h2><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USE</span> [EOLData]</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">/****** Object:  StoredProcedure [dbo].[UpDateHLAResult]    Script Date: 07/12/2020 13:45:44 ******/</span></span><br><span class="line"><span class="keyword">SET</span> ANSI_NULLS <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SET</span> QUOTED_IDENTIFIER <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">-- =============================================</span></span><br><span class="line"><span class="comment">-- Author:  &lt;Author,,Name&gt;</span></span><br><span class="line"><span class="comment">-- Create date: &lt;Create Date,,&gt;</span></span><br><span class="line"><span class="comment">-- Description: &lt;Description,,&gt;</span></span><br><span class="line"><span class="comment">-- =============================================</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">PROCEDURE</span> [dbo].[UpDateHLAResult]</span><br><span class="line">(</span><br><span class="line">@VIN <span class="built_in">varchar</span>(<span class="number">30</span>),</span><br><span class="line">@ZTS <span class="built_in">varchar</span>(<span class="number">30</span>),</span><br><span class="line">@LLOffset <span class="built_in">FLOAT</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="comment">-- SET NOCOUNT ON added to prevent extra result sets from</span></span><br><span class="line"><span class="comment">-- interfering with SELECT statements.</span></span><br><span class="line"><span class="keyword">SET</span> NOCOUNT <span class="keyword">ON</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> @sem <span class="built_in">varchar</span>(<span class="number">30</span>) = <span class="string">''''</span></span><br><span class="line"><span class="comment">-- 声明变量</span></span><br><span class="line"><span class="keyword">DECLARE</span> @LHB <span class="built_in">FLOAT</span></span><br><span class="line"><span class="comment">-- 判断是否存在数据</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">EXISTS</span>(<span class="keyword">select</span> [左远光灯高] <span class="keyword">from</span> [dbo].[车型配置] <span class="keyword">where</span> [ZTS]=@ZTS)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="comment">-- 查询赋值</span></span><br><span class="line">    <span class="keyword">select</span> @LHB = [左远光灯高] <span class="keyword">from</span> [dbo].[车型配置] <span class="keyword">where</span> [ZTS]=@ZTS</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">select</span> @LHB = [左远光灯高] <span class="keyword">from</span> [dbo].[<span class="number">64</span>字节车型配置] <span class="keyword">where</span> [ZTS]=@ZTS</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="comment">-- 赋值</span></span><br><span class="line"><span class="keyword">SET</span> @LHB = @LHB - @LHOffset</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    exec(</span><br><span class="line">    <span class="string">'UPDATE [dbo].[灯光表] SET '</span></span><br><span class="line">    +<span class="string">'[左远光灯高] = '</span>+@sem+ @LHB +@sem</span><br><span class="line">    +<span class="string">'WHERE [VIN] = '</span>+@sem+ @VIN +@sem</span><br><span class="line">    )</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure>

</div></div>
]]></content>
      <categories>
        <category>SQLServer</category>
      </categories>
  </entry>
  <entry>
    <title>中牟日产打印更改</title>
    <url>/%E4%B8%AD%E7%89%9F%E6%97%A5%E4%BA%A7%E6%89%93%E5%8D%B0%E6%9B%B4%E6%94%B9.html</url>
    <content><![CDATA[<a id="more"></a>

<h2 id="读取Excel保存数据库"><a href="#读取Excel保存数据库" class="headerlink" title="读取Excel保存数据库"></a>读取Excel保存数据库</h2><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReadAndSaveCarInfoFromExcel</span>(<span class="params"><span class="keyword">string</span> vin</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//string serverConnString = "$Npgsql$Database=LocalDB;Host=127.0.0.1;Port=5432;Username=postgres;Password=123";</span></span><br><span class="line">        <span class="keyword">string</span> sql = <span class="keyword">string</span>.Format(<span class="string">"select * from [OBD检查表] where [VIN]='&#123;0&#125;' order by [测试时间] desc"</span>, vin);</span><br><span class="line">        DbDataAdapter adap = BConnString.CreateDataAdapter(sql, serverConnString);</span><br><span class="line">        DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line">        adap.Fill(dt);</span><br><span class="line">        DataRow dr = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (dt.Rows.Count &gt; <span class="number">0</span>)</span><br><span class="line">            dr = dt.Rows[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">string</span> VIDCode = dr[<span class="string">"VID"</span>].ToString();</span><br><span class="line">        <span class="comment">// string vid = "1111111111111   SDFVDFSD----    SDAVV6515151  AFDFASFSA  ASDFS  S  20200707     SDFSF      111255544    "</span></span><br><span class="line">        Regex re = <span class="keyword">new</span> Regex(<span class="string">@"(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+)\s*"</span>);</span><br><span class="line">        Match match = re.Match(VIDCode);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">string</span> CarEI = match.Groups[<span class="number">2</span>].Value;</span><br><span class="line">        <span class="keyword">string</span> EngineNo = match.Groups[<span class="number">9</span>].Value;</span><br><span class="line">        <span class="keyword">if</span> (EngineNo.Length == <span class="number">0</span> || EngineNo == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            re = <span class="keyword">new</span> Regex(<span class="string">@"(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+)\s*"</span>);</span><br><span class="line">            match = re.Match(VIDCode);</span><br><span class="line">            EngineNo = match.Groups[<span class="number">8</span>].Value;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (EngineNo.Length &lt; <span class="number">4</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            re = <span class="keyword">new</span> Regex(<span class="string">@"(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+)\s*"</span>);</span><br><span class="line">            match = re.Match(VIDCode);</span><br><span class="line">            EngineNo = match.Groups[<span class="number">10</span>].Value;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//1909889    TYBGLCFDP0DXA---A  L1234567891234567  1H5GPRCOP Y23A         S  202008154                    M9T                     M1014785             </span></span><br><span class="line">        <span class="keyword">string</span> carType = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">string</span> productEnterprise = <span class="string">""</span>;</span><br><span class="line">        GetCarInfoByEI(CarEI, <span class="keyword">ref</span> carType, <span class="keyword">ref</span> productEnterprise);</span><br><span class="line">        <span class="keyword">string</span> sqlCarInfo = <span class="keyword">string</span>.Format(<span class="string">"select * from [OBD车型表] where [VIN]='&#123;0&#125;' order by [ID] desc"</span>, vin);</span><br><span class="line">        DbDataAdapter adapCarInfo = BConnString.CreateDataAdapter(sqlCarInfo, serverConnString);</span><br><span class="line">        DataTable dtCarInfo = <span class="keyword">new</span> DataTable();</span><br><span class="line">        adapCarInfo.Fill(dtCarInfo);</span><br><span class="line">        DataRow drCarInfo = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (dtCarInfo.Rows.Count &gt; <span class="number">0</span>)</span><br><span class="line">            drCarInfo = dtCarInfo.Rows[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            drCarInfo = dtCarInfo.Rows.Add();</span><br><span class="line">        drCarInfo[<span class="string">"VIN"</span>] = vin;</span><br><span class="line">        drCarInfo[<span class="string">"发动机号"</span>] = EngineNo;</span><br><span class="line">        drCarInfo[<span class="string">"Cartype车辆型号"</span>] = carType;</span><br><span class="line">        drCarInfo[<span class="string">"车辆生产企业"</span>] = productEnterprise;</span><br><span class="line">        drCarInfo[<span class="string">"更新时间"</span>] = DateTime.Now;</span><br><span class="line">        adapCarInfo.Update(dtCarInfo);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (ExcelException ex)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(ex.Message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetCarInfoByEI</span>(<span class="params"><span class="keyword">string</span> EI, <span class="keyword">ref</span> <span class="keyword">string</span> CarType, <span class="keyword">ref</span> <span class="keyword">string</span> ProductEnterprise</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// connect Excel</span></span><br><span class="line">    <span class="comment">//string excelPath = @"D:\工作\现场工作文件整理\中牟日产\EI-车辆型号.xlsx";</span></span><br><span class="line">    <span class="keyword">string</span> strConn = <span class="keyword">string</span>.Format(<span class="string">"Provider=Microsoft.ACE.OLEDB.12.0;Data Source =&#123;0&#125;; Extended Properties = 'Excel 12.0; HDR=Yes; IMEX=0'"</span>, excelPath);</span><br><span class="line">    DataSet ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">    OleDbConnection conn = <span class="keyword">new</span> OleDbConnection(strConn);</span><br><span class="line">    <span class="keyword">string</span> sql = <span class="keyword">string</span>.Format(<span class="string">"select * from [Sheet1$] where [Code18/EI] like '%&#123;0&#125;%'"</span>, EI);</span><br><span class="line">    OleDbDataAdapter oada = <span class="keyword">new</span> OleDbDataAdapter(sql, conn);</span><br><span class="line">    oada.Fill(ds);</span><br><span class="line">    DataRow dr = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (ds.Tables[<span class="number">0</span>].Rows.Count &gt; <span class="number">0</span>)</span><br><span class="line">        dr = ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">"EI车辆型号Excel中没有当前车型，请检查"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    CarType = dr[<span class="string">"Cartype/车辆型号"</span>].ToString();</span><br><span class="line">    ProductEnterprise = dr[<span class="string">"生产企业"</span>].ToString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>
]]></content>
  </entry>
  <entry>
    <title>ABS类名与车型对应</title>
    <url>/ABS%E7%B1%BB%E5%90%8D%E4%B8%8E%E8%BD%A6%E5%9E%8B%E5%AF%B9%E5%BA%94.html</url>
    <content><![CDATA[<center>写在前面</center>
前面啥也没有
<a id="more"></a>

<h2 id="SGMW"><a href="#SGMW" class="headerlink" title="SGMW"></a>SGMW</h2><p>ClassName:车型:</p>
<p>CN200SESP : BOSCH9CANABS<br>CN200ESP : BOSCH9CANABS<br>CN200SABS : BOSCH9CANABS<br>CN200ABS : BOSCH9CANABS<br>CN113ABS : BOSCH9CANABS<br>CN180MABS : BOSCH9CANABS<br>CN180MESP : BOSCH9CANESP<br>CN180SABS : BOSCH9CANABS<br>CN180SESP : BOSCH9CANESP<br>E100ESP : BOSCH9CANABS<br>E100ABS : BOSCH9CANABS<br>E300ESC : BOSCH9CANABS<br>E300ABS : BOSCH9CANABS<br>N300LABSEV: E100ABS<br>CN210ABS : BOSCH9CANABS<br>E50ABS : E100ABS</p>
<p>GP50ABS : BOSCH9ABSCAN</p>
<p>CN112ABS : BOSCH9KWPABS<br>CN112 : BOSCH9KWPABS<br>N300LABS : BOSCH9KWPABS<br>N310ABS : BOSCH9KWPABS<br>N350PABS : BOSCH9KWPABS<br>CN100VABS : BOSCH9KWPABS<br>N300MandoABS : BOSCH9KWPABS</p>
<p>CN115ABS : BOSCH9KWPABS<br>CN115 : BOSCH9KWPABS</p>
<p>CN180SDBC78ABS : DBC78ABS<br>CN180SDBC78ABS4MBK : DBC78ABS</p>
<p>CN200DCU : DCU<br>CN200SDCU : DCU</p>
<p>CN120SESC : MK100ESC<br>CN120SABS : MK100ABS<br>CN120SABSForACU : MK100ABS<br>CN120SESCForACU : MK100ESC<br>CN180CESC : MK100ESC<br>CN180SESCconfi : CN180CESC<br>CN300SESC : CN180SESCconfi<br>CN180C_2ESC : MK100ESC<br>MK100ESCForMBK : ABSBaseForCAN<br>CN180CESCForMBK : MK100ESCForMBK</p>
<p>CN180CABS : MK78ABS</p>
<p>N1 : N1ABS</p>
<h2 id="长春一汽轿车"><a href="#长春一汽轿车" class="headerlink" title="长春一汽轿车"></a>长春一汽轿车</h2><p>J5LADSC : DSCCAN<br>J71DSC : DSCCAN</p>
<p>D181ESP : BOSCH9CANESP<br>D181ABS : BOSCH9CANABS<br>D009ABS : BOSCH9CANABS<br>D009ESP : BOSCH9CANESP<br>C141ESP : BaseBosch_ESP9<br>C205ESP : C141ESP<br>D090ESP : C141ESP<br>E111ESP : C141ESP</p>
]]></content>
  </entry>
  <entry>
    <title>刷网课随记</title>
    <url>/%E5%88%B7%E7%BD%91%E8%AF%BE%E9%9A%8F%E8%AE%B0.html</url>
    <content><![CDATA[<center>写在前面</center>

<a id="more"></a>

<h2 id="视频播放参数"><a href="#视频播放参数" class="headerlink" title="视频播放参数"></a>视频播放参数</h2><h3 id="倍速播放"><a href="#倍速播放" class="headerlink" title="倍速播放"></a>倍速播放</h3><p><code>document.querySelector(&#39;video&#39;).playbackRate = 4.0</code></p>
<h4 id="爬虫执行脚本"><a href="#爬虫执行脚本" class="headerlink" title="爬虫执行脚本"></a>爬虫执行脚本</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">js = <span class="string">"document.querySelector('video').playbackRate = 4.0"</span></span><br><span class="line">driver.execute_script(js)</span><br></pre></td></tr></table></figure>

<h2 id="下载视频课程"><a href="#下载视频课程" class="headerlink" title="下载视频课程"></a>下载视频课程</h2><h3 id="模拟登录"><a href="#模拟登录" class="headerlink" title="模拟登录"></a>模拟登录</h3><h4 id="Webdriver"><a href="#Webdriver" class="headerlink" title="Webdriver"></a>Webdriver</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">option = webdriver.ChromeOptions()</span><br><span class="line">driver = webdriver.Chrome(chrome_options=option)</span><br><span class="line">driver.get(<span class="string">"https://www.bjjnts.cn/login"</span>)</span><br><span class="line">driver.find_element_by_name(<span class="string">"username"</span>).send_keys(<span class="string">"uesrname"</span>) <span class="comment">#元素赋值模拟输入</span></span><br><span class="line">driver.find_element_by_name(<span class="string">"password"</span>).send_keys(<span class="string">"password"</span>)</span><br><span class="line">driver.find_element_by_xpath(<span class="string">"//button[@class='login_btn' and @type='submit']"</span>).click() <span class="comment">#登录按钮点击事件</span></span><br><span class="line">driver.get(url)</span><br><span class="line"><span class="keyword">return</span>  driver.page_source</span><br></pre></td></tr></table></figure>

<h4 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h4><p>通过抓包拿到cookie，再将cookie放到header中请求即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">driver.find_element_by_id(<span class="string">'user'</span>).send_keys(<span class="string">'用户账号'</span>)</span><br><span class="line">driver.find_element_by_id(<span class="string">'pass'</span>).send_keys(<span class="string">'用户密码'</span>)</span><br><span class="line">driver.find_element_by_xpath(<span class="string">'//*[@id="submit"]'</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">cookie = driver.get_cookies()</span><br><span class="line">cookiea = [item[<span class="string">"name"</span>] + <span class="string">"="</span> + item[<span class="string">"value"</span>] <span class="keyword">for</span> item <span class="keyword">in</span> cookie]</span><br><span class="line">cookiestr = <span class="string">'; '</span>.join(item <span class="keyword">for</span> item <span class="keyword">in</span> cookiea)</span><br><span class="line">driver.close() <span class="comment">#获取到登录cookie,就可以关闭窗口了</span></span><br><span class="line"><span class="keyword">return</span> cookiestr</span><br><span class="line"></span><br><span class="line"><span class="comment"># join说明</span></span><br><span class="line">str = <span class="string">"-"</span>;</span><br><span class="line">seq = (<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>); <span class="comment"># 字符串序列</span></span><br><span class="line"><span class="keyword">print</span> str.join( seq );</span><br><span class="line">输出: a-b-c</span><br></pre></td></tr></table></figure>

<div><div class="fold_hider"><div class="close hider_title">展开/折叠源码</div></div><div class="fold">
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> RequestException</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetPageHtml</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        option = webdriver.ChromeOptions()</span><br><span class="line">        driver = webdriver.Chrome(chrome_options=option)</span><br><span class="line">        driver.get(<span class="string">"https://www.bjjnts.cn/login"</span>)</span><br><span class="line">        txt = driver.page_source</span><br><span class="line">        <span class="comment"># 设置默认编码为 utf-8</span></span><br><span class="line">        driver.find_element_by_name(<span class="string">"username"</span>).send_keys(<span class="string">"370831199309165413"</span>)</span><br><span class="line">        driver.find_element_by_name(<span class="string">"password"</span>).send_keys(<span class="string">"bj123465"</span>)</span><br><span class="line">        driver.find_element_by_xpath(<span class="string">"//button[@class='login_btn' and @type='submit']"</span>).click()</span><br><span class="line">        header = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36'</span>,<span class="string">'Referer'</span>:url&#125;</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        driver.get(url)</span><br><span class="line">        <span class="keyword">return</span>  driver.page_source</span><br><span class="line">        <span class="comment">#res = requests.get(url,headers = header)</span></span><br><span class="line">        <span class="comment">#if res.status_code == 200:</span></span><br><span class="line">            <span class="comment">#return res.text</span></span><br><span class="line">        <span class="comment">#return None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ParseHtml</span><span class="params">(html)</span>:</span></span><br><span class="line">    pattern = re.compile(<span class="string">'&lt;video src="(.*?)"\sposter='</span>,re.S)</span><br><span class="line">    items = re.search(pattern,html)</span><br><span class="line">    print(items.group(<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span>  items.group(<span class="number">1</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ParseVideoHtml</span><span class="params">(html, name)</span>:</span></span><br><span class="line">    root = <span class="string">"D://Downloads//"</span></span><br><span class="line">    path = root + name + <span class="string">".mp4"</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(root):</span><br><span class="line">            os.mkdir(root)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">            r = requests.get(html)</span><br><span class="line">            <span class="keyword">with</span> open(path, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(r.content)</span><br><span class="line">                f.close()</span><br><span class="line">                print(<span class="string">"文件保存成功"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"文件已存在"</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"爬取失败"</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_config</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">""""读取配置"""</span></span><br><span class="line">    path = os.getcwd()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">        os.mkdir(path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(<span class="string">"config.json"</span>):  <span class="comment"># 无文件时创建</span></span><br><span class="line">         <span class="keyword">with</span> open(<span class="string">"config.json"</span>, mode=<span class="string">"w"</span>, encoding=<span class="string">"utf-8"</span>) <span class="keyword">as</span> jsonfile:</span><br><span class="line">             jsonfile.write(json.dump(&#123;<span class="string">'url'</span>:<span class="string">'https://www.bjjnts.cn/lessonStudy/202/4268'</span>&#125;),indent=<span class="number">4</span>)</span><br><span class="line">         jsonfile.close()</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"config.json"</span>) <span class="keyword">as</span> json_file:</span><br><span class="line">        config = json.load(json_file)</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#html = "https://bjjnts-bd.xuetangx.com/4233125536dfb27e-10.mp4?auth_key=1596034097-0-0-f7f5072dec07ec43c1110ade3a8d412d"</span></span><br><span class="line">    <span class="comment">#ParseVideoHtml(html)</span></span><br><span class="line">    <span class="comment">#https://www.bjjnts.cn/login</span></span><br><span class="line">    config = read_config()</span><br><span class="line">    <span class="comment">#html = "https://www.bjjnts.cn/lessonStudy/202/4268"</span></span><br><span class="line">    html = config[<span class="string">"url"</span>]</span><br><span class="line">    print(html)</span><br><span class="line">    url = <span class="string">"https://www.bjjnts.cn/login"</span></span><br><span class="line">    option = webdriver.ChromeOptions()</span><br><span class="line">    driver = webdriver.Chrome(chrome_options=option)</span><br><span class="line">    driver.get(url)</span><br><span class="line">    txt = driver.page_source</span><br><span class="line">    <span class="comment"># 设置默认编码为 utf-8</span></span><br><span class="line">    driver.find_element_by_name(<span class="string">"username"</span>).send_keys(<span class="string">"370831199309165413"</span>)</span><br><span class="line">    driver.find_element_by_name(<span class="string">"password"</span>).send_keys(<span class="string">"bj123465"</span>)</span><br><span class="line">    driver.find_element_by_xpath(<span class="string">"//button[@class='login_btn' and @type='submit']"</span>).click()</span><br><span class="line">    header = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36'</span>,<span class="string">'Referer'</span>:url&#125;</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    driver.get(html)</span><br><span class="line"></span><br><span class="line">    videoNames = []</span><br><span class="line">    bsObj = BeautifulSoup(driver.page_source.replace(<span class="string">'&amp;nbsp;'</span>, <span class="string">' '</span>), <span class="string">"lxml"</span>)</span><br><span class="line">    VideoList = bsObj.findAll(class_=<span class="string">"course_study_menubox"</span>)</span><br><span class="line">    <span class="comment">##print(VideoList)</span></span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> video <span class="keyword">in</span> VideoList:</span><br><span class="line">        videoname = video.find(<span class="string">"h4"</span>,class_=<span class="string">"course_study_menutitle"</span>).get_text()</span><br><span class="line">        <span class="comment">##driver.get(html)</span></span><br><span class="line">        videoHtml = ParseHtml(driver.page_source)</span><br><span class="line">        <span class="comment">#th = Thread()</span></span><br><span class="line">        ParseVideoHtml(videoHtml, videoname)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        driver.find_element_by_xpath(<span class="string">"//a[@class='change_chapter lesson-"</span> + str(i) + <span class="string">"']"</span>).find_element_by_xpath(<span class="string">'..'</span>).click()</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        print(str(i))</span><br><span class="line">        <span class="comment">#videoNames.append(video.find("h4",class_="course_study_menutitle").get_text())</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#print(videoNames)</span></span><br><span class="line">    <span class="comment">#print(html)</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

</div></div>
]]></content>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>BBK故障码处理</title>
    <url>/BBK%E6%95%85%E9%9A%9C%E7%A0%81%E5%A4%84%E7%90%86.html</url>
    <content><![CDATA[<center>写在前面</center>

<p>检测线处理故障码，包括只判断指定故障码和忽略指定故障码</p>
<a id="more"></a>

<h2 id="CanCmdOpraLib-CanCmd"><a href="#CanCmdOpraLib-CanCmd" class="headerlink" title="CanCmdOpraLib.CanCmd"></a>CanCmdOpraLib.CanCmd</h2><h3 id="HandleDTC"><a href="#HandleDTC" class="headerlink" title="HandleDTC"></a>HandleDTC</h3><p>该函数参数为忽略的故障码，可以为{0xD1 55 84};{0xD1 55 85}的格式，也可以为U1155-84;U1155-85的格式<br>不设置参数则将所有读出的DTC添加到<strong>useDTClist</strong>中</p>
<h3 id="CheckDTC"><a href="#CheckDTC" class="headerlink" title="CheckDTC"></a>CheckDTC</h3><p>该函数参数为判断的故障码，判断该故障码是否存在于<strong>useDTClist</strong>中
存在返回False，不存在返回True</p>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>Recv：{0x59 02 AB D1 55 84 2B D1 55 85 2B}<br>HandleDTC({0xD1 55 84})<br>useDTClist为U1155-85 D1 55 85<br>CheckDTC({0xD1 55 84})返回true<br>CheckDTC({0xD1 55 85})返回false</p>
]]></content>
  </entry>
  <entry>
    <title>新增ABS</title>
    <url>/%E6%96%B0%E5%A2%9EABS.html</url>
    <content><![CDATA[<center>写在前面</center>
前面啥也没有
<a id="more"></a>

<h2 id="准备文件"><a href="#准备文件" class="headerlink" title="准备文件"></a>准备文件</h2><blockquote>
<p>1、RBABS_xxx.dll 其中包含ABS通讯指令</p>
</blockquote>
<h2 id="软件更改"><a href="#软件更改" class="headerlink" title="软件更改"></a>软件更改</h2><p>0、备份程序<br>1、替换BBK\Bin文件夹下的 RBABS_xxx.dll 文件<br>2、新增车型信息<br><img src="%E6%96%B0%E5%A2%9EABS/cxxx.png" alt="车型信息"><br>如图新增该车型相关车型信息，复制其他车型更改即可<br>3、新增ABS标准<br><img src="%E6%96%B0%E5%A2%9EABS/absbz.png" alt="ABS标准"><br>上图为DVT中动态ABS标准，制动台更改静态ABS标准<br>Identity为该ABS的标识<br><strong>ABS类型</strong>内容咨询软件工程师<br>4、新增ZTS<br><img src="%E6%96%B0%E5%A2%9EABS/ztspz.png" alt="ZTS"><br>复制其他车型后更改ZTS<br>更改车型参数<br>更改动态ABS标准<br>5、配置串口<br><img src="%E6%96%B0%E5%A2%9EABS/ckpz.png" alt="串口配置"><br>复制其他CAN或K线配置，更改KeyName为3中的<strong>ABS类型</strong><br>Param1为串口号、Param3为输出LOG的文件名<br>说明：该步骤若未提前更改，测试中会自动创建并使用默认串口号导致通讯失败，依据其他车型的配置更改串口号等即可。</p>
<p>6、更改Config\ABSValveTestConfig中当前ABS类型文件中的增减压时间等进行优化</p>
]]></content>
  </entry>
  <entry>
    <title>Flask框架</title>
    <url>/Flask%E6%A1%86%E6%9E%B6.html</url>
    <content><![CDATA[<center>写在前面</center>
前面啥也没有
<a id="more"></a>

<h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><div><div class="fold_hider"><div class="close hider_title">展开/折叠目录结构</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">flask-demo/</span><br><span class="line">  ├ run.py           <span class="meta"># 应用启动程序</span></span><br><span class="line">  ├ config.py        <span class="meta"># 环境配置</span></span><br><span class="line">  ├ requirements.txt <span class="meta"># 列出应用程序依赖的所有Python包</span></span><br><span class="line">  ├ tests/           <span class="meta"># 测试代码包</span></span><br><span class="line">  │   ├ __init__.py</span><br><span class="line">  │   └ test_*.py    <span class="meta"># 测试用例</span></span><br><span class="line">  └ myapp/</span><br><span class="line">      ├ admin/       <span class="meta"># 蓝图目录</span></span><br><span class="line">      ├ <span class="keyword">static</span>/</span><br><span class="line">      │   ├ css/     <span class="meta"># css文件目录</span></span><br><span class="line">      │   ├ img/     <span class="meta"># 图片文件目录</span></span><br><span class="line">      │   └ js/      <span class="meta"># js文件目录</span></span><br><span class="line">      ├ templates/   <span class="meta"># 模板文件目录</span></span><br><span class="line">      ├ __init__.py</span><br><span class="line">      ├ forms.py     <span class="meta"># 存放所有表单，如果多，将其变为一个包</span></span><br><span class="line">      ├ models.py    <span class="meta"># 存放所有数据模型，如果多，将其变为一个包</span></span><br><span class="line">      └ views.py     <span class="meta"># 存放所有视图函数，如果多，将其变为一个包</span></span><br></pre></td></tr></table></figure>

</div></div>

<p>示例：<br>IconFont网址下载图标</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠目录结构</div></div><div class="fold">
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template,request</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/index')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/user/&lt;name&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">welcome</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"welcome %s"</span>%name</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/user/&lt;int:id&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">welcomeid</span><span class="params">(id)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"welcome num %d"</span>%id</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index2</span><span class="params">()</span>:</span></span><br><span class="line">    list = [<span class="string">"l1"</span>,<span class="string">"l2"</span>,<span class="string">"l3"</span>]</span><br><span class="line">    time = datetime.date.today()</span><br><span class="line">    task = &#123;<span class="string">"task"</span>:<span class="string">"clean"</span>,<span class="string">"time"</span>:<span class="string">"3hours"</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"index.html"</span>,var = time,list = list, task = task)</span><br><span class="line"></span><br><span class="line"><span class="comment">#表单提交</span></span><br><span class="line"><span class="meta">@app.route('/register')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"register.html"</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/result',methods=['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">result</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        result = request.form <span class="comment">#表单字典</span></span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">"result.html"</span>,result = result)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>) <span class="comment">#还需要在项目配置中启动Debug</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    welcome.</span><br><span class="line">    Today is &#123;&#123; var &#125;&#125;<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    on duty<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    &#123;% for data in list %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span> &#123;&#123; data &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    task:s<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">            &#123;% for key,value in task.items() %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;key&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"&#123;&#123; url_for('result') &#125;&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>age:  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"age"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>sex:  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"sex"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"submit"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">            &#123;% for key,value in result.items() %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>&#123;&#123;key&#125;&#125;<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    Result</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

</div></div>
]]></content>
  </entry>
  <entry>
    <title>C#事件与委托</title>
    <url>/CSharp%E4%BA%8B%E4%BB%B6%E4%B8%8E%E5%A7%94%E6%89%98.html</url>
    <content><![CDATA[<center>写在前面</center>
参考HeadFirstC#
<a id="more"></a>

<h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><p>当一个事件发生后，不同的事件监视者完成各自的工作</p>
<p>1、定义产生事件的对象<br>2、定义事件<br>3、事件发生<br>4、不同对象订购(绑定)事件</p>
<p>5、创建事件执行需要的参数对象</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义事件及对象</span></span><br><span class="line">Ball ball = <span class="keyword">new</span> Ball();</span><br><span class="line"><span class="comment">//绑定</span></span><br><span class="line">Fan fan = <span class="keyword">new</span> Fan(ball);<span class="comment">//Fan对Ball的处理，Fan先绑定BallInPlay</span></span><br><span class="line">Pitcher pitcher = <span class="keyword">new</span> Pitcher(ball);<span class="comment">//Pitcher对Ball的处理，Pitcher后绑定BallInPlay</span></span><br><span class="line">BallEventArgs ballEventArgs = <span class="keyword">new</span> BallEventArgs(<span class="number">60</span>,<span class="number">80</span>);</span><br><span class="line"><span class="comment">//事件发生后Fan先响应，Pitcher后响应</span></span><br><span class="line">ball.OnBallInPlay(ballEventArgs)</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、定义产生事件的对象</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Ball</span>&#123;</span><br><span class="line">    <span class="comment">//2、定义事件</span></span><br><span class="line">    <span class="comment">//无事件绑定对象时BallInPlay = null</span></span><br><span class="line">    <span class="comment">//事件执行顺序为事件绑定顺序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> EventHandler BallInPlay;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">OnBallInPlay</span>(<span class="params">BallEventArgs e</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//EventHandler ballInplay = BallInPlay;</span></span><br><span class="line">        <span class="comment">//3、事件发生</span></span><br><span class="line">        <span class="comment">//事件发生后会执行BallInPlay的委托，具体的执行发放为事件监视者所委托的方法</span></span><br><span class="line">        BallInPlay(<span class="keyword">this</span>, e);</span><br><span class="line">        <span class="comment">//if (ballInplay != null)</span></span><br><span class="line">            <span class="comment">//  ballInplay(this,e);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Pitcher</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Pitcher</span>(<span class="params">Ball ball</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//4、不同对象订购(绑定)事件</span></span><br><span class="line">        <span class="comment">//当事件发生后执行ball_BallInPlay1方法</span></span><br><span class="line">        ball.BallInPlay += ball_BallInPlay1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ball_BallInPlay1</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">is</span> BallEventArgs)&#123;</span><br><span class="line">            BallEventArgs ballEventArgs = e <span class="keyword">as</span> BallEventArgs;</span><br><span class="line">            <span class="keyword">if</span> (ballEventArgs.Distance &lt; <span class="number">95</span> &amp;&amp; ballEventArgs.Traj &lt; <span class="number">60</span>)&#123;</span><br><span class="line">                CatchBall();</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">                GameOver();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">CatchBall</span>(<span class="params"></span>)</span>&#123; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GameOver</span>(<span class="params"></span>)</span>&#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Fan</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Fan</span>(<span class="params">Ball ball</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//4、不同对象订购(绑定)事件</span></span><br><span class="line">        <span class="comment">//当事件发生后执行ball_BallInPlay2方法</span></span><br><span class="line">        ball.BallInPlay += <span class="keyword">new</span> EventHandler(ball_BallInPlay2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ball_BallInPlay2</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">is</span> BallEventArgs)&#123;</span><br><span class="line">            BallEventArgs ballEventArgs = e <span class="keyword">as</span> BallEventArgs;</span><br><span class="line">            <span class="keyword">if</span> (ballEventArgs.Distance &gt; <span class="number">400</span>)</span><br><span class="line">                CatchBall();</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                Screm();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">CatchBall</span>(<span class="params"></span>)</span>&#123; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Screm</span>(<span class="params"></span>)</span>&#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//事件执行的参数</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">BallEventArgs</span> : <span class="title">EventArgs</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Traj &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;<span class="comment">//击球角度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Distance &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;<span class="comment">//飞行距离</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BallEventArgs</span>(<span class="params"><span class="keyword">int</span> traj, <span class="keyword">int</span> distance</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.Traj = traj;</span><br><span class="line">        <span class="keyword">this</span>.Distance = distance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>

<h2 id="委托事件"><a href="#委托事件" class="headerlink" title="委托事件"></a>委托事件</h2><h3 id="委托"><a href="#委托" class="headerlink" title="委托"></a>委托</h3><p>再讲委托</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">delegate</span> <span class="keyword">string</span> <span class="title">Calculate</span>(<span class="params"><span class="keyword">double</span> x, <span class="keyword">double</span> y</span>)</span>;</span><br><span class="line">Calculate calculateString = <span class="keyword">new</span> Calculate(<span class="keyword">add</span>);</span><br><span class="line"><span class="keyword">string</span> <span class="keyword">add</span> = calculateString(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">calculateString = <span class="keyword">new</span> Calculate(mul);</span><br><span class="line"><span class="keyword">string</span> mul = calculateString(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">add</span>(<span class="params"><span class="keyword">double</span> x, <span class="keyword">double</span> y</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x + y).ToString()</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">mul</span>(<span class="params"><span class="keyword">double</span> x, <span class="keyword">double</span> y</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x * y).ToString()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">delegate</span> <span class="keyword">void</span> <span class="title">BatCallback</span>(<span class="params">BallEventArgs e</span>)</span>;</span><br><span class="line">Ball ball = <span class="keyword">new</span> Ball();</span><br><span class="line"><span class="comment">//创建一个新的Bat对象，使用BatCallback委托将Ball的OnBallInPlay方法引用传给Bat对象</span></span><br><span class="line">Bat bat = ball.GetNewBat();</span><br><span class="line">Fan fan = <span class="keyword">new</span> Fan(ball);</span><br><span class="line">Pitcher pitcher = <span class="keyword">new</span> Pitcher(ball);</span><br><span class="line">BallEventArgs ballEventArgs = <span class="keyword">new</span> BallEventArgs(<span class="number">60</span>,<span class="number">80</span>);</span><br><span class="line">bat.HitTheBall(ballEventArgs);</span><br><span class="line"><span class="keyword">class</span> <span class="title">Ball</span>&#123;</span><br><span class="line">    <span class="comment">//2、定义事件</span></span><br><span class="line">    <span class="comment">//无事件绑定对象时BallInPlay = null</span></span><br><span class="line">    <span class="comment">//事件执行顺序为事件绑定顺序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> EventHandler BallInPlay;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">OnBallInPlay</span>(<span class="params">BallEventArgs e</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//EventHandler ballInplay = BallInPlay;</span></span><br><span class="line">        <span class="comment">//3、事件发生</span></span><br><span class="line">        <span class="comment">//事件发生后会执行BallInPlay的委托，具体的执行发放为事件监视者所委托的方法</span></span><br><span class="line">        BallInPlay(<span class="keyword">this</span>, e);</span><br><span class="line">        <span class="comment">//if (ballInplay != null)</span></span><br><span class="line">            <span class="comment">//  ballInplay(this,e);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Bat <span class="title">GetNewBat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//将事件处理委托到击球事件中</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Bat(<span class="keyword">new</span> BatCallback(OnBallInPlay));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Bat</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> BatCallback hitBallCallback;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Bat</span>(<span class="params">BatCallback callbackDelegate</span>)</span> &#123;</span><br><span class="line">        <span class="comment">//私有化事件发生后的时间处理</span></span><br><span class="line">        <span class="comment">//不使用 += 是为了保证击球手只监视场内的一个Ball</span></span><br><span class="line">        <span class="keyword">this</span>.hitBallCallback = <span class="keyword">new</span> BatCallback(callbackDelegate);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//发生击球事件后，回调Ball类中的OnBallInPlay响应</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HitTheBall</span>(<span class="params">BallEventArgs e</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (hitBallCallback != <span class="literal">null</span>)</span><br><span class="line">            hitBallCallback(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>

<h3 id="回调和事件"><a href="#回调和事件" class="headerlink" title="回调和事件"></a>回调和事件</h3><p>代码上的区别：<br>事件发生后的响应在当前类<br>回调响应方法在其他类</p>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>委托</tag>
        <tag>事件</tag>
      </tags>
  </entry>
  <entry>
    <title>BBK检测线通讯相关介绍</title>
    <url>/BBK%E6%A3%80%E6%B5%8B%E7%BA%BF%E9%80%9A%E8%AE%AF%E7%9B%B8%E5%85%B3%E4%BB%8B%E7%BB%8D.html</url>
    <content><![CDATA[<center>写在前面</center>
前面啥也没有
<a id="more"></a>

<h2 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h2><p>客户端配置<br>GeneralLib.xDvConfigClient.init(GeneralLib.xRemoterClientConfig)<br>服务端配置<br>GeneralLib.GenO.InitRemoterTcpServer()</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠客户生成配置</div></div><div class="fold">
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8" standalone="yes"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">xDevice</span> <span class="attr">updateRate</span>=<span class="string">"50"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Item</span> <span class="attr">ip</span>=<span class="string">"10.18.13.50:10240"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">__COUNTER_OUT</span> <span class="attr">value</span>=<span class="string">"None"</span> <span class="attr">WriteEnable</span>=<span class="string">"false"</span> <span class="attr">Reversion</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">__COUNTER_IN</span> <span class="attr">value</span>=<span class="string">"None"</span> <span class="attr">WriteEnable</span>=<span class="string">"false"</span> <span class="attr">Reversion</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Communication_ZTS</span> <span class="attr">value</span>=<span class="string">"CarParam_ZTS"</span> <span class="attr">WriteEnable</span>=<span class="string">"true"</span> <span class="attr">Reversion</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Communication_VIN</span> <span class="attr">value</span>=<span class="string">"CarParam_VIN"</span> <span class="attr">WriteEnable</span>=<span class="string">"true"</span> <span class="attr">Reversion</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DeviceDescribe</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--用于与具有远程功能的平台程序通讯(@开头为PubObject对象,#开头为组合控制),默认端口10240,ip格式:127.0.0.1:10240--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">DeviceDescribe</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Alarms</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AlarmItem</span> <span class="attr">value</span>=<span class="string">"None"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Alarm</span> <span class="attr">Index</span>=<span class="string">"0"</span> <span class="attr">Name</span>=<span class="string">"告警信息格式模板"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">AlarmItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Alarms</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">xDevice</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br></pre></td></tr></table></figure>

</div></div>

<p>配置完成后，相当于客户端的Communication_VIN与服务端的CarParam_VIN进行了绑定</p>
<h2 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h2><p>客户端配置<br>SocketOpraLib.UDPClientOpra.SetDestInfoConfig(ConfigSend)<br>SocketOpraLib.UDPClientOpra.SendTo(“{VIN};{ZTS}”)<br>服务端配置<br>SocketOpraLib.UDPServerOpra.SetLocalInfoConfig(ConfigRecv)</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>UDP</title>
    <url>/UDP.html</url>
    <content><![CDATA[<center>写在前面</center>
前面啥也没有
<a id="more"></a>


<h2 id><a href="#" class="headerlink" title=" "></a> </h2><div><div class="fold_hider"><div class="close hider_title">展开/折叠常用示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    UdpClient client = <span class="keyword">new</span> UdpClient(<span class="keyword">new</span> IPEndPoint(IPAddress.Any, <span class="number">0</span>));<span class="comment">//不指定网卡、端口发送</span></span><br><span class="line">    client = <span class="keyword">new</span> UdpClient(<span class="keyword">new</span> IPEndPoint(IPAddress.Parse(<span class="string">"1.1.1.1"</span>), <span class="number">0</span>));<span class="comment">//设置网卡发送</span></span><br><span class="line">    IPEndPoint endpoint = <span class="keyword">new</span> IPEndPoint(IPAddress.Parse(<span class="string">"255.255.255.255"</span>), <span class="number">7788</span>);  </span><br><span class="line">    <span class="keyword">byte</span>[] buf = Encoding.Default.GetBytes(<span class="string">"Hello from UDP broadcast"</span>);  </span><br><span class="line">    Thread t = <span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadStart(RecvThread));  </span><br><span class="line">    t.IsBackground = <span class="literal">true</span>;  </span><br><span class="line">    t.Start();  </span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)  </span><br><span class="line">    &#123;  </span><br><span class="line">        client.Send(buf, buf.Length, endpoint);  </span><br><span class="line">        Thread.Sleep(<span class="number">1000</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">RecvThread</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    UdpClient client = <span class="keyword">new</span> UdpClient(<span class="keyword">new</span> IPEndPoint(IPAddress.Any, <span class="number">7788</span>));  </span><br><span class="line">    IPEndPoint endpoint = <span class="keyword">new</span> IPEndPoint(IPAddress.Any, <span class="number">0</span>);  </span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">byte</span>[] buf = client.Receive(<span class="keyword">ref</span> endpoint);  </span><br><span class="line">        <span class="keyword">string</span> msg = Encoding.Default.GetString(buf);  </span><br><span class="line">        Console.WriteLine(msg);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>

<div><div class="fold_hider"><div class="close hider_title">展开/折叠广播示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 发送UDP消息</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="msg"&gt;</span>消息内容<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Send</span>(<span class="params"><span class="keyword">string</span> msg</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    UdpClient udpClient = <span class="keyword">new</span> UdpClient();</span><br><span class="line">    IPEndPoint ipEndPoint = <span class="keyword">new</span> IPEndPoint(IPAddress.Broadcast, <span class="number">10249</span>);</span><br><span class="line">    <span class="comment">// IPAddress.Broadcast 就是 255.255.255.255</span></span><br><span class="line">    <span class="keyword">byte</span>[] buffer = Encoding.UTF8.GetBytes(msg);</span><br><span class="line">    udpClient.Send(buffer, buffer.Length, ipEndPoint);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    UdpClient udpServer = <span class="keyword">new</span> UdpClient(<span class="number">10249</span>);</span><br><span class="line">    IPEndPoint ipEndPoint = <span class="keyword">new</span> IPEndPoint(IPAddress.Any, <span class="number">10249</span>);</span><br><span class="line"></span><br><span class="line">    udpServer.BeginReceive(Received, udpServer);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 异步接收UDP数据</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="iar"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Received</span>(<span class="params">IAsyncResult iar</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">　　udpServer = iar.AsyncState <span class="keyword">as</span> UdpClient;</span><br><span class="line">　　<span class="keyword">byte</span>[] buffer = udpServer.EndReceive(iar, <span class="keyword">ref</span> ipEndPoint);</span><br><span class="line"></span><br><span class="line">　　<span class="comment">//将获取的byte[]数据转换成字符串</span></span><br><span class="line">　　<span class="keyword">string</span> m = Encoding.UTF8.GetString(buffer).Trim();</span><br><span class="line"></span><br><span class="line">　　Console.WriteLine(<span class="string">"Receive:&#123;0&#125;"</span>,m);</span><br><span class="line"></span><br><span class="line">　　<span class="comment">//继续异步接收数据</span></span><br><span class="line">　　udpServer.BeginReceive(Received, udpServer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>
]]></content>
      <tags>
        <tag>UDP</tag>
      </tags>
  </entry>
  <entry>
    <title>BEP独立大灯数据接收</title>
    <url>/BEP%E7%8B%AC%E7%AB%8B%E5%A4%A7%E7%81%AF%E6%95%B0%E6%8D%AE%E6%8E%A5%E6%94%B6.html</url>
    <content><![CDATA[<center>写在前面</center>

<p>上位机软件通过TCP读取独立大灯测试数据，参考武汉日产现场。</p>
<a id="more"></a>

<h2 id="BEP大灯配置"><a href="#BEP大灯配置" class="headerlink" title="BEP大灯配置"></a>BEP大灯配置</h2><p>SoftWare Config–NCA/Host Comm Settings中<br>NCA Setting使能Use Results Config File<br>关闭Send HLA Tests To Run</p>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>NcaResults.xml<br>hoststring.xml</p>
]]></content>
      <tags>
        <tag>BEP独立大灯</tag>
      </tags>
  </entry>
  <entry>
    <title>Visual Studio Code配置记录</title>
    <url>/Visual%20Studio%20Code%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95.html</url>
    <content><![CDATA[<center>写在前面</center>
前面啥也没有
<a id="more"></a>

<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>已安装插件：</p>
<blockquote>
<p>Bracket Pair Colorizer <br>Chinese (Simplified) Language <br>compareit <br>Dracula Official <br>Git History <br>GitLens <br>Markdownlint <br>Markdown All in One <br>open in browser <br>Python <br>C# <br>Vetur</p>
</blockquote>
<h2 id="Python安装第三方库"><a href="#Python安装第三方库" class="headerlink" title="Python安装第三方库"></a>Python安装第三方库</h2><p>进入Python安装路径下的Scripts，执行 .\pip install requests<br>如果在安装时报错：<br>UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xd7 in position 9: ordinal not in range(128)<br>修改位于Python的安装路径下的Lib\mimetypes.py文件,在import下添加如下几行代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> sys.getdefaultencoding() != <span class="string">'gbk'</span>:</span><br><span class="line">    reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'gbk'</span>)</span><br></pre></td></tr></table></figure>

<h2 id="编写C"><a href="#编写C" class="headerlink" title="编写C"></a>编写C</h2><h3 id="创建控制台程序"><a href="#创建控制台程序" class="headerlink" title="创建控制台程序"></a>创建控制台程序</h3><p>dotnet -h 查看命令<br>dotnet new –help 查看帮助<br>定位文件夹后执行：<br><code>dotnet new console</code></p>
<h3 id="程序运行"><a href="#程序运行" class="headerlink" title="程序运行"></a>程序运行</h3><p>dotnet run 或 F5</p>
]]></content>
  </entry>
  <entry>
    <title>Modbus通讯协议</title>
    <url>/Modbus%E9%80%9A%E8%AE%AF%E5%8D%8F%E8%AE%AE.html</url>
    <content><![CDATA[<center>写在前面</center>
前面啥也没有
<a id="more"></a>

<h2 id="Modbus-TCP-数据帧"><a href="#Modbus-TCP-数据帧" class="headerlink" title="Modbus TCP 数据帧"></a>Modbus TCP 数据帧</h2><p>MBAP + PDU<br>MBAP： Modbus Application Protocol Header<br>PDU：Protocol Data Unit<br>MBAP + Function code + Data</p>
<p>示例：<br>00 01 00 00 00 06 01<br>事务标识2+modbus协议2+数据长度2+Slave站号1</p>
<p>Function code：<br>0x01：读线圈<br>02：读离散量输入<br>03：读保持寄存器<br>04：读输入寄存器<br>05：写单个线圈<br>06：写单个保持寄存器<br>10：写多个保持寄存器<br>0F：写多个线圈</p>
<p>报文头部：</p>
<table>
<thead>
<tr>
<th align="center">字节序号</th>
<th align="center">含义</th>
<th align="center">客户端</th>
<th align="center">服务器</th>
</tr>
</thead>
<tbody><tr>
<td align="center">BYTE 0 – 1</td>
<td align="center">传输标志，事务标识符</td>
<td align="center">由客户端生成</td>
<td align="center">应答时复制该值</td>
</tr>
<tr>
<td align="center">BYTE 2 – 3</td>
<td align="center">协议标识，Modbus 协议=0</td>
<td align="center">由客户端生成</td>
<td align="center">应答时复制该值</td>
</tr>
<tr>
<td align="center">BYTE 4 ¬-  5</td>
<td align="center">报文后续数据的字节长度</td>
<td align="center">由客户端生成</td>
<td align="center">应答时由服务器重新生成</td>
</tr>
<tr>
<td align="center">BYTE 6</td>
<td align="center">MODBUS单元标志</td>
<td align="center">由客户端生成</td>
<td align="center">应答时复制该值</td>
</tr>
</tbody></table>
<p>Modbus TCP协议功能码报文<br>功能码3 读多个寄存器<br>请求报文格式<br>|字节序号|含义|<br>|:-:|:-:|<br>BYTE 7|功能码=3<br>BYTE 8 - 9|读取数据的寄存器偏移地址<br>BYTE 10 - 11|读取数据的寄存器数量，单位为Word</p>
<p>读数据成功的响应报文格式<br>|字节序号|含义|<br>|:-:|:-:|<br>BYTE 7|功能码=3<br>BYTE 8 |读取到的数据的字节数<br>BYTE 9- 10|读取到的寄存器1的数据<br>BYTE 11 - 12|读取到的寄存器2的数据<br>….|…</p>
<p>功能码16 写多个寄存器<br>请求报文格式<br>|字节序号|含义|<br>|:-:|:-:|<br>BYTE 7|功能码=16<br>BYTE 8 - 9|写数据的寄存器偏移地址<br>BYTE 10 - 11|写数据的寄存器数量，单位为Word<br>BYTE 12|写数据的字节数（数据等于写数据的寄存器数量 x 2）<br>BYTE 13 - 14|寄存器1的数据<br>BYTE 15 - 16|寄存器1的数据</p>
<p>写数据成功的响应报文格式<br>|字节序号|含义|<br>|:-:|:-:|<br>BYTE 7|功能码=16<br>BYTE 8 - 9 |写数据的寄存器偏移地址<br>BYTE 10 - 11|写数据的寄存器数量，单位为WORD</p>
<p>功能码6 写单个寄存器<br>请求报文格式<br>|字节序号|含义|<br>|:-:|:-:|<br>BYTE 7|功能码=6<br>BYTE 8 - 9|写数据的寄存器偏移地址<br>BYTE 10 - 11|寄存器的数值</p>
<p>写数据成功的响应报文格式<br>|字节序号|含义|<br>|:-:|:-:|<br>BYTE 7|功能码=6<br>BYTE 8 - 9 |写数据的寄存器偏移地址<br>BYTE 10 - 11|寄存器的数值</p>
<p>控制 IB IL 24 DO8开关量输出模块请求报文，模块寄存器地址：384，控制数据在最后一个字节；</p>
<p>0F 01 00 00 00 06 FF 06 01 80 00 0F</p>
<p>控制DO输出成功响应报文<br>0F 01 00 00 00 06 FF 06 01 80 00 0F</p>
<p>读取 IB IL 24 DI8开关量输入模块请求报文，模块寄存器地址：0，数据寄存器长度为1；</p>
<p>0B 01 00 00 00 06 FF 03 00 00 00 01</p>
<p>读取IB IL 24 DI8开关量输入成功的响应报文，数据在最后一个字节；<br>0B 01 00 00 00 05 FF 03 02 00 XX</p>
<p>读取 IB IL AI2SF-230模拟量输入模块请求报文，模块寄存器地址：192，数据寄存器长度为2，该模块默认连接0~10V信号；</p>
<p>0B 02 00 00 00 06 FF 03 00 C0 00 02</p>
<p>读取数据成功的响应报文，数据在最后4个字节，分别为通道1~2；<br>0B 02 00 00 00 07 FF 03 04 XX XX XX XX</p>
<h2 id="Kepserver"><a href="#Kepserver" class="headerlink" title="Kepserver"></a>Kepserver</h2><p>Address<br>输出线圈：  000001 ~ 065536<br>输入线圈：  100001 ~ 165536<br>内部寄存器：300001 ~ 365536<br>保持寄存器：400001 ~ 465536</p>
<p>访问输出线圈：Address：000001<br>访问连续10个输出线圈：Address：000001#10</p>
<p>访问保持寄存器：Address：400001<br>访问连续10个保持寄存器：Address：400001[10]</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

</div></div>
]]></content>
  </entry>
  <entry>
    <title>MQTT</title>
    <url>/MQTT.html</url>
    <content><![CDATA[<center>写在前面</center>
前面啥也没有
<a id="more"></a>

<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>MQTT（Message Queuing Telemetry Transport，消息队列遥测传输协议），是一种基于发布/订阅（publish/subscribe）模式的”轻量级”通讯协议，协议构建于TCP/IP协议上<br>MQTT协议有三种身份：发布者、代理、订阅者，发布者和订阅者都为客户端，代理为服务器，同时消息的发布者也可以是订阅者<br>MQTT数据包由：固定头（Fixed header）、可变头（Variable header）、消息体（payload）三部分构成</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

</div></div>
]]></content>
  </entry>
  <entry>
    <title>WebServices创建配置与调用</title>
    <url>/WebServices%E5%88%9B%E5%BB%BA%E9%85%8D%E7%BD%AE%E4%B8%8E%E8%B0%83%E7%94%A8.html</url>
    <content><![CDATA[<center>写在前面</center>
前面啥也没有
<a id="more"></a>

<h2 id="启用Windows-IIS功能"><a href="#启用Windows-IIS功能" class="headerlink" title="启用Windows IIS功能"></a>启用Windows IIS功能</h2><p>操作：控制面板-程序和功能-启用或关闭windows功能<br>安装Internet Information Services及可承载的Web核心</p>
<p><img src="WebServices%E5%88%9B%E5%BB%BA%E9%85%8D%E7%BD%AE%E4%B8%8E%E8%B0%83%E7%94%A8/%E5%90%AF%E7%94%A8IIS.jpg" alt="启用Windows IIS功能"></p>
<h2 id="Webservice接口创建"><a href="#Webservice接口创建" class="headerlink" title="Webservice接口创建"></a>Webservice接口创建</h2><p>新建项目</p>
<p><img src="WebServices%E5%88%9B%E5%BB%BA%E9%85%8D%E7%BD%AE%E4%B8%8E%E8%B0%83%E7%94%A8/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE.jpg" alt="新建项目"></p>
<p>新建文件</p>
<p><img src="WebServices%E5%88%9B%E5%BB%BA%E9%85%8D%E7%BD%AE%E4%B8%8E%E8%B0%83%E7%94%A8/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6.jpg" alt="新建文件"></p>
<p>创建文件后默认HelloWord接口</p>
<h2 id="Webservice发布"><a href="#Webservice发布" class="headerlink" title="Webservice发布"></a>Webservice发布</h2><h3 id="Webservice接口发布到文件夹"><a href="#Webservice接口发布到文件夹" class="headerlink" title="Webservice接口发布到文件夹"></a>Webservice接口发布到文件夹</h3><p>项目右键发布选择发布到文件夹，配置好路径后点击发布即可</p>
<h2 id="IIS部署"><a href="#IIS部署" class="headerlink" title="IIS部署"></a>IIS部署</h2><h3 id="添加虚拟目录"><a href="#添加虚拟目录" class="headerlink" title="添加虚拟目录"></a>添加虚拟目录</h3><p><img src="WebServices%E5%88%9B%E5%BB%BA%E9%85%8D%E7%BD%AE%E4%B8%8E%E8%B0%83%E7%94%A8/%E6%B7%BB%E5%8A%A0%E8%99%9A%E6%8B%9F%E7%9B%AE%E5%BD%95.jpg" alt="添加虚拟目录"></p>
<h3 id="转换为应用程序"><a href="#转换为应用程序" class="headerlink" title="转换为应用程序"></a>转换为应用程序</h3><p><img src="WebServices%E5%88%9B%E5%BB%BA%E9%85%8D%E7%BD%AE%E4%B8%8E%E8%B0%83%E7%94%A8/%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F.jpg" alt="转换为应用程序"></p>
<h3 id="添加默认文档"><a href="#添加默认文档" class="headerlink" title="添加默认文档"></a>添加默认文档</h3><p><img src="WebServices%E5%88%9B%E5%BB%BA%E9%85%8D%E7%BD%AE%E4%B8%8E%E8%B0%83%E7%94%A8/%E9%BB%98%E8%AE%A4%E6%96%87%E6%A1%A3.jpg" alt="默认文档"></p>
<p>默认文档名为项目中创建Webservice的类名.asmx</p>
<p><img src="WebServices%E5%88%9B%E5%BB%BA%E9%85%8D%E7%BD%AE%E4%B8%8E%E8%B0%83%E7%94%A8/%E6%B7%BB%E5%8A%A0%E9%BB%98%E8%AE%A4%E6%96%87%E6%A1%A3.jpg" alt="添加默认文档"></p>
<h2 id="接口测试"><a href="#接口测试" class="headerlink" title="接口测试"></a>接口测试</h2><p>点击IIS中的浏览*：80(http)或访问<a href="http://localhost/别名/默认文档名" target="_blank" rel="noopener">http://localhost/别名/默认文档名</a></p>
<p><img src="WebServices%E5%88%9B%E5%BB%BA%E9%85%8D%E7%BD%AE%E4%B8%8E%E8%B0%83%E7%94%A8/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95.jpg" alt="接口测试"></p>
]]></content>
  </entry>
  <entry>
    <title>BBK程序解析</title>
    <url>/BBK%E7%A8%8B%E5%BA%8F%E8%A7%A3%E6%9E%90.html</url>
    <content><![CDATA[<center>写在前面</center>
前面啥也没有
<a id="more"></a>

<h2 id="FreeFormsAlways"><a href="#FreeFormsAlways" class="headerlink" title="FreeFormsAlways"></a>FreeFormsAlways</h2><p>程序入口Main()</p>
<p>CheckAppHasStart()//判断程序是否已经打开</p>
<blockquote>
<p>Initialize()//</p>
<blockquote>
<p>BackupStart()//Log备份<br>Environment.GetCommandLineArgs()<br>System.Threading.Mutex(true, sysName, out IsNew)</p>
</blockquote>
</blockquote>
<p>GetStartFile()//获取启动程序文件名<br>SystemIni(OpenFile, ref Inform)//初始化程序并获取主界面</p>
<blockquote>
<p>ReadDataXml()读取xml文件</p>
<blockquote>
<p>Configs.ReadXml()读取配置文件<br>MyLoadXml(xDoc, GetFullPath(XmlFile))加载xml文件<br>UpdateObjectList()实例化对象列表中的对象<br>GreateProjectList()创建组合列表<br>CheckProjectList()检查<br>BeginExePro(“Always”)//执行Always线程<br>Run(Inform, true)//执行显示窗体</p>
</blockquote>
</blockquote>
<p>ExeProject()//执行组合</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

</div></div>
]]></content>
  </entry>
  <entry>
    <title>查缺补漏-CSharp</title>
    <url>/%E6%9F%A5%E7%BC%BA%E8%A1%A5%E6%BC%8F-CSharp.html</url>
    <content><![CDATA[<center>写在前面</center>
记录搬砖过程中遇到的疑问
<a id="more"></a>

<h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><p>子类构造函数始终默认调用父类无参构造函数</p>
<p>若父类没有无参构造函数时，子类应显式调用父类有参构造函数，否则编译不过</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//Console.WriteLine("Hello World!");</span></span><br><span class="line">            TestFunc();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">TestFunc</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Child c = <span class="keyword">new</span> Child(<span class="string">"22"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">BassTest</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//public BassTest()</span></span><br><span class="line">        <span class="comment">//&#123;Console.WriteLine("BassNoneParam");&#125; </span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">BassTest</span>(<span class="params"><span class="keyword">string</span> s</span>) : <span class="title">this</span>(<span class="params">s,<span class="string">"333"</span></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;Console.WriteLine(<span class="string">"BassOneParam"</span> + s);&#125; </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">BassTest</span>(<span class="params"><span class="keyword">string</span> s, <span class="keyword">string</span> t</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;Console.WriteLine(<span class="string">"BassTwoParam"</span> + s + t);&#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Child</span> : <span class="title">BassTest</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//public Child()</span></span><br><span class="line">        <span class="comment">//&#123;Console.WriteLine("ChildNoneParam");&#125;</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Child</span>(<span class="params"><span class="keyword">string</span> s</span>) : <span class="title">this</span>(<span class="params">s,<span class="string">"111"</span></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;Console.WriteLine(<span class="string">"ChildOneParam"</span> + s);&#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Child</span>(<span class="params"><span class="keyword">string</span> s, <span class="keyword">string</span> t</span>):<span class="title">base</span>(<span class="params">s</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;Console.WriteLine(<span class="string">"ChildTwoParam"</span> + s + t);&#125; </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

</div></div>

<p>示例中：this()调用子类中对应参数的构造函数<br>base()调用父类中对应参数的构造函数<br><code>Child c = new Child(&quot;22&quot;);</code>输出为：</p>
<p>BassTwoParam22333<br>BassOneParam22<br>ChildTwoParam22111<br>ChildOneParam22</p>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>构造函数</tag>
      </tags>
  </entry>
  <entry>
    <title>220025西安比亚迪调试记录</title>
    <url>/220025%E8%A5%BF%E5%AE%89%E6%AF%94%E4%BA%9A%E8%BF%AA%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95.html</url>
    <content><![CDATA[<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="Enter password to read！" />
    <label for="pass">Enter password to read！</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
U2FsdGVkX1+6Ojw7NMM3P/swB2kUp9KIgEf/Yf9+KyZCEV2oMExxvnug4Fe4almdtWpRVI+PT3Rum2u5RNMjcDrSmupMOsSn4dHXyCp4sfwxUyhpE7BJO4ZY3Ge/cT5xFk+jdyHmyswqL6i/YKxiSvWY11T6k0xjpzOwuBU8M4t0zubb+6Am++Mn0KSNs8q8av8O2cDO8BrPnWTgbMLhIHS0oCrmKFy+FHobs20CZJwPrjeMO8B1aKrasb6P2bysDHySa9Px58R2h3aTE25Otm3gNQ9iyvp9Hywg4SzSqLci+kulhPO6lKt+p/i85dXB4JPvMdn0TJ770cB7arCsfg2wF2p+JvirAK0+9kRsZK3TKuVawm71XbzIrSdv1S9LHQxP0xvc81HRro3LS2kxB35FVIRvWA6w6Ve0dKBwmZbQGF3+OiEd8sNPxi2mzQOo3fy6VZgR3AQieNQQzHuohiiLSu0loq571fU5uTYduuycHP3inEM85Gc4fbqPdcXocbIBkADNRbyZiU9xpwQ8U3knkOrIs5i9DTaKpBki7yvmUYCUOiWFRk9U8/D3G6mOTQh9r8UlJ22Wi0/IdIrEkGqdf16iHAc+MhyueXmeLVdW7hviwGAmCOYiKxwdpNkvdFTQEVDi7B0Vg+8QXChf2tP/CIZGlWC21FL0rTsdREINSo7szZW5IMR2pKq2qgrPHntaLpOOaodjlYmnK/exm020WJVCg6J6AfELsJCFhPHabJM3rfP1LGdPOPANrKJgDOgQks6kCkd/gb6c4DrKhN5iW8iaiQlpRm8lLFeyiZzzfCtwIKkWx7iN7G0KF9RXKMX9UpMSOMAJxqMZJ7N/AFfoumxv/9o663Rp1kwtCOsOo15DcuNGRO0+ZtM21qfD9S49kaxMqJ1W5B9wOzcyP4e2n9Z+M0bctgcwAslVPLvmWjiS/fhgQocXfQvZN8VIbG3a3f3THUrhSV9CnFuL3Fl3t/hAGjtn8UNioY8Dw8CfeLakIkcShkKZowtXZ2ylJ2/9zjtGq/f2tgg++QTs+e7c39DVoxWm6zgDWFLxKOYmt7bi+P54+GKlsSWPmDaU0dslxOjzWEW2RhXL7lC8N51fnG8NDvEiut5Z8375VfNfmPC/vDrxc2DNWoxGwGizYRo3cJFejF6K3ZTmIOhVLNbblfSAolr1o0FnGzRvXBwc6MJSHgkS2ACNB3prkdbEat92PQBqSz3lCWKeSGhD29PBSW9I9U7UmSDujSOz/vl+k47aaLk5pKc50HKBcSqn1edMxzLat+3WHk1yS4a517pndMrPh3pQvqkyoTJ2igJhD7B9b2vByLBCyHzDnG/Kfx2nZTv7WrVD5/C0NhIfEIhcNyzhF2UNDALkjKORpzz37JTIVy38V/pwiOrncAMFMNVd3HK5k9T1Qara3stVObTR4ncJ1PXAeUPwHtGXihh+uDNjF5x1Mpyq0Siwdhk3MWgTKlVLFpSt/z1PN4QF9rTU9bJDkNXvALusfiNDfRLT7PlEaHRnedaVYu2AbYmHTDykeVeJA+naVNgtmS79OHGxb0jJPRHKpANSrH8uBRTRS1Iim+MDCodMTMbckDmoRXxmmQrDG0xs2nIJmx+1K+mdkr0+zTvbFYosOcqllMFE6GkQPgNSbnUAvKbDrTHzU/cRwdlzNrfQd+qj4m+yqAeVoEoVWqF139VdNj6KlgWKREUp7nkO4zhvmP8E7e/T6xwzZyFVSVsbD5IRa7EKpPSYZdaqc7yTylTHY2ReGWrk/Mc3qQa8YoH1rQF5pNOyGM4tunx6sRKDMMymUBaWVTSHQXwOaKIEmQvRbP0XCPj+qgSokWocwN8bPg2QqwSHXMXx7YD12otss3vsIhdRbNGVIacPFzvHzpMvPjEl5HkjAo41xWTP5CM78pt4tFomZ42KKPYa3D8yE5tenJUFlLQZk6Co6Fgsp+cjk1LkANy3KBXXPor0XQojcpmkF4qpacVqb6x+NvEttu4E4AfC6/xMecEAmmljehKEDS0yoW3RUgYyx8fTdrY9Go6nQRddVh5u05Dz3oozS1dr8W5A9XAEwWaJA8qfMr0oX2FrBUww7xGxGQjaY00HyIa1dzXGTGjQHErgBsAt/6zpVhEKZ7M9okQSSH0eFphxHs48sVRDN2WNB2xe3Kmaa/BQi4d9pqlNgT2HW96AcQi6t1iC/coecFjceUPpIr7tbsh3T5lRfEEzHbvzdok24aR9LAu6fUiHPaH2s07nhWwdnI5dOA7qd1f/6F1a0Sxfl7Q2Ej8Q4zGhwcsNyUq1VHTnQUiM53N6bKTuRsSIvgvR9K9bId4KYBZHBqRHHjHD3rldrvU8Lk/zQvzhgbM+WYlUt7AFpFfDyyk6ghOv5WLOGVGFupe/Kh7u6ojewLBbVpNc2iENLexa0fShmJdTAdtUkdaJQYoVJjj5kgMmPAMQ/D9F9VOxmGQpbdrc24PHUmDMJ3v4eJ+ONoEKpz0Ng7b/1+y3tr05CBSEYr6i55Ffmaw0LDx+eQO5aLBZ45RzfGFCfjEpAeZBmpmD2MFHL1eu7yx69KrYvHrN6JuxLlt65OLj5PchHjbOBPhG7+mowKncfcbb3p1nFMek2k3aWWFY04SKrehOgUAnSpJkb35a2Nlr2qvRwv4ECjI9qv25+C3IfnwrAki5eJSfYJ4nQALtJHLttPUZSBgyzFu8u3c4+JP9ZAHatAT9oJsKMIUZmKfUa1l4M6VvZOAyeHbHN63VXL+FBjy6BGCMJyiaiLzGgGgR1VHVau45U3qnaoxzj4KUPN6F8bcIrvJxCTElrgregHvg+7eYkZFf7+LV2mrhaVsoBGp3ZMwqLkA8ud0/30YzuBGCjHvSGWSBr6A3wihGK21UXTUjA+FVyzT1jpQSHwUMKoxeFF2WKD83T/UBqE8tMF6lbiZJ4oT+pN9TB0I9Mwl0nPwTDRB6HSCyDuuYaKNoQwzAzJOsjlj+jsiyZAn1A9MpOf+aWjBgh4ZfIwrN1U1xOoC1VHtLLz932GBP2D7vtnsggeXua+BEwuMiTxHNnEqD9+mpbp65P1EkMk+alXrdh44ucBHNg37UUcDal2/DnHByOIN/0hZjhTpdZJ9eVszWFjdSUd2UqqpR6NuqJGJvTvcRdZ0S8bosCtrskjeXhZFardjYS3XCvqJt9HEitx9S+XTeoZp0BcXZGtiMq2Bs0Ll7iDYEwUCKy7oeXESU1qA4X/agK4UrNO9OmuVE2lJRCdgJgtPH4PUwy3kFtLuJtOjRnXo6D7KdtJhay4PIye0SOsUHwWbx9zu9m+YFDh8/dVjkf5Lp/A3AeTkIvsXnqh4txRyzPWB+WlncB2EQaaOasrjA+zze5KrtHwDIaz91luRLoAaQgFMSW5W66cPI9RSs8NE8/g5uz8V9fIFaPQ1yUkwOg10ccKQ4yIX6aXYONxXV/UzUhMhP274AVWXqUBAnaa8xY2La2yzQTlbb8lm32NRQpqdwqaA/jbQ8vgH5U1jwdSIObUl9RZLG+pZOBI3CNyKyhb95dueqkICycR/pDUrVOIVTYF2jmRx8enZW7qKjtzvVLZosXBrtowLQBnkjOESJvBJKUNRQMHn2+ryUt7/gkw66PrV5TSaflnYV31lWGJMW5yAYMf6aBbxLK3Ttoqfa68hu8oXiI3SJYBjEaO4OedhKoIbd/KU2to7z8TG2uRjsNWk6deQrOYNcRphjUfjl+s24loBlIN24WWTFaOHpr9/eI6x6QWU1GZB/LqLKaJjtxxx9wl7Kz7lqhKgmKr7uaGZTtdF5NiCzOBxOUQHwzkR7tfN2SaYysB7D5LJDgAELE3AW0qwxmS0kd+MT7ozH9xIGkDLgjq0eBdbAxJzAbchz8JiHDya+tOzr9nH3b0z68ften9ncodLIB8m/M4hRv5ZLA2f1PsxXQ1O6l0uRjUS5x7TGR2w7D8jsKTV9Nm/ZFIcGF2EpgXM6Jr/yKlYMtc5/bAjyE9MmrPdWPQ+yVckNtR2m7PmgJmT155JVL13+sBTgcsK3LWaJj7+dwDngoHY34qwMbEhXN0OGSqBON8yN3zzobc58l6h2ocr824JoKvI3syDi1ea/jWSxTps5PSpN9t5m7k/DkuJ+2fEeeUgQNLgCv5cZXO5A/HwINX1LRu60i0pgNxLbpjNf0M+75vbbfvC/0S2Pa1USk9osx/5V+Zn/ShldIFX84vipwu6xAAKgqcrb4ejy04tECe1VlHtqr1g+iDHwa2b4ifzycIg1sVpdLhvNug8HXb576h1gQffTlmBxRxr4JHUCDCp1Dqh1HmtYmUUuz1x+cA8elMOvsAdWGURkezYwZung7p4U5QrULJHpJ71MauKbX9ZPCclDVHnBy8CnUW30nQ+vSBggAlw43e5XlE6dsy5Fi5hRXgZOH/MHq6lVPdW7ECo3M+FuarsnoMcOBDBkgGZ0ze8bmra1MAdj9CsqrWDWvrShomsFoIUVkC8Hd/9EU2E38SO2DCvY+Wh2I1xEd1TNwVWNwqhcGrOyh9R71D23DCbRS7PgNG9naRsWdHvjVGm8yOb7uDi8oxu8LLrENiU0ULAydTiLL3t3Hf2Z7Spf77L1ZoMTo1XZ4UtpLVdRi36/cDinFViJjXV/E484nqJf2cCpUqxX9SopsKHTiQzJramKoYRom430cvaUr2+ntcVg1Y1lHWcx+bEwMgvn00dP/NfatMP8xRtOS2Jo1s3C0C5k04wX1ygE0jPY+uFl4MZcoPerJDVGQ6p7PRCWx31QM4PUBUPIa0qc3lWmX8iV9a1/kJSbPA65beb/Mqf4vzYPZmzpdPwL10dCRjClYY6QKIKEr5l15niMyGWQkXce4fmbAfnNqCEP3LJae0H3X715XNwEqymaEAZEEXQgtBc2bmDwfvxdhK24WZ7Xet7WUMetlngJIXPrAwaUPJWTNvPp2eu9QBvE1w9g9i8GNCEGW1zfEevqhTWtdkJ51kayP58DbfGrXQ4DZBHum66dgMzImZM2NWA8trXeGESv4ohrvasOk+286rNSfzBxJQbhwKxTvCE7Z/5Yotcbf5ZR6gns76iyffamS71y6/3KsEvpZaNobCyCYt15G1bxUU6Ud6Z/b41aBnLocZ4qgbCSDlA1C46dDoGXtusWpbXjS+h1x3NZv82MGe9VHI6in/5Ydt9s+AqRzWfqng77bhrk4QojqksTQ6OgBJHQo2omsHus1KnWKLw/wIqE9O9gROn8y6D/cStAx/l+CWrru9WFhGPOKKpVYDdxYAvxxa0Xvf+l6nXS8znwOQUI0lQyUGc5QD6ruTi1qHdwRUwUy4/PfKxqk5ACF9o7AK/U74ODjoH2HpewgVN/H5mh5I2Fmxo0gmcQQmn1pI2W96mfAHU8ceBd0P8doMkuK5uCg67z1aeAGUMj1ryX42VGucTI6WnAEwgXRH02phssxPBOOIDdyHRQj6t/Qa45IPXv5ChRKTuWjLy27pQhL94E7uaUM00RWr+jCHQV7FERzJeXY3dxebkjd/t9gkWWrZpfh/xn9SveV+wF28e8dPqB7lBCUH6rlb3RVHKeX+h4XgEkt8cbYIuoi+nN3woOoc72O2k4rUI1u+A4JMyI/lrBVH3wCFY4YNW6kC5s8ssC7Xu28wvshWTfx7DclFXHQj6srbNjeg3uBZnoISAE7jAsPygPq3FIMfgnLzUnOOjOtiqHAFNJAYzkt65jyNEE3bVVURMh7R2sGFGlwMOIddBESHLiGWWcGTL2+xbPBA5SwvA1jBJ/GrG7kGqDd634YCnNtli0FslUZKmOR2a7fp+jNw97XC7zY+6scKbpKvXk1ijzCE25pH8+zirRknairFPR4Vb/iEdDmeBueg2jRZbVwrVnbj+7Wjy5tPNytLY9Sr90QBdou9F6egqQTm9SD3vNQyte/dEX53fwIXUhu+cJKDue9EqeALr3DoxfbM73ISdUEDxYFHfAbDe8MNQ/8ADmb4jgxpdGV0jbBvFXjoDDISQslVdfGmJa4C0nDjM8IkhZkmmbhGAlcGxSVdILXPga975dPpLx3bR1keoe9ZT2nm1tpmhTkNHCokwmz3hL4Xb1fZZXvtE6J75qXxDmui2FzWKbT9Q/xTxzaaD0sevnQiMRS6MLmLYHvK4yqJBAryxEmyln7hZdS6rEnSPrBvEZ4pbQdQbVSUVdYsXLYFU5QUsvS/9QlPKttkmXxmCOcYVNA1YfohYAj1eKdPuZF2VbkEiyqrBbKFppdb/TOHbCoRleasCxBZ2n9mVvoxF3cC7D4aMRWSN5bwOJ+lSC3H0PyEsvi/9PMTByYCf0wD53j1ET+Qxpl9jOUu/2pR0a7LoYJFrN12ieQ4i1VkwAobPRbnEOVc5a/N3+mIUl5CT+ywRnaRrr/yaztd9rEUteUJLCH/tt4PSi9wwDYTpQKsMYFgKT94FS9DxT1Zlf2+qu71RRZ3R5NrmjvuqioZxt27tNCUHG2xT/dVnpgHhcOVwo0F91SBCU6jON69ZBS0HrQcmo+bXWbasCED3ADtc+fF6Q7gifb6g6Ff5Jy9wfQUfWcmDjX4X6Sp5q1mwEsaHnisfkagaiKSeg9lZerN9ysOZjSXgR/E5ETlYDNvVifFDLBBXAeFxxzmgYm8Ng+EiXuA/acjAk0Ye9cItuUX8KW0XPgMAix/vzfinLd1bD22/ZCUX8ID6PyBmGhm5iOsNq1ZLvid9KNqs7Ce+sSy8F0fBgyiHmdKtmqHKW1hQ07IFlqGZJbxL+k4Ov04azE2cmGl4WSrQ5CL5IDKbDbnu6evXr0ZCB4NvR93vT7JCYpKLIjZodNjJPZg5T0VncxymwNJE+ZC134Hr7NJKJp15x3Ne6u6LjrcoSCqllmhLlsnrNSY3zkAPYyBpeT/RoFfxcRwNHAjMYRl2U5sKWxaTjCsExl/xXO6GqV930KISyOvbTSFx1JXaWwURbjiItIbVMidg4KyoWQ7tp7TGTsI1XClRZcpJdz0TpRLlspjbo9P494bbLga2bPZ5tgm2J+4vs1Dz+9BiYd+1vU3mYaiFNfXODba1JB6ns1qDARwhXjA49sJX+fAfD8uxbRbKQ/BhT+b3fTHQhBn/dbZj16KS7oPj45LodP8bsRPku9cmozUexxc7iRpBoluBMXK650neZUQBdLveib8p0vr1N1DxzRujDgni7wRT0URoAwOsvYen0p7RIsfmI9MhOy3yd5p747XcF1gh1gu4cgn+2xrxQYXm7b/xn47Xoq5kmKD0nxzVbAsFvAAGEgVzJT8HGlMB3qI++2ocKva/4N3YEb8+jhD1usOWUVveX7yKmUIJRFFYT7r++UYepMP+a0zFSrMHb8HziROhT+kmiKwO71/T5L98/ShYjO5Ri2DizYdHvlcPGZcqGKaLigUSFk7Lr4YGglOyOUJwM5KgJ3x/uqXvuGasKQ5f0Ozl0vSrj3cNcmbIOOrIhkv96XC834GLwYzo5Gcc=
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>数据转换</title>
    <url>/%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2.html</url>
    <content><![CDATA[<h2 id="IEEE-to-Double、Char、int"><a href="#IEEE-to-Double、Char、int" class="headerlink" title="IEEE to Double、Char、int"></a>IEEE to Double、Char、int</h2><h3 id="在线转换工具"><a href="#在线转换工具" class="headerlink" title="在线转换工具"></a>在线转换工具</h3><p><a href="http://www.binaryconvert.com" target="_blank" rel="noopener">http://www.binaryconvert.com</a></p>
<h3 id="C-IEEE-to-Single"><a href="#C-IEEE-to-Single" class="headerlink" title="C# IEEE to Single"></a>C# IEEE to Single</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Single <span class="title">IEEE2Single</span>(<span class="params"><span class="keyword">byte</span>[] b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        Array.Reverse(b);</span><br><span class="line">        Single d = BitConverter.ToSingle(b, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> (Single)Math.Round(d, <span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (System.Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">byte</span>[] <span class="title">SingleToIEEE</span>(<span class="params">Single d</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[]&#123;&#125;;</span><br><span class="line">        b = BitConverter.GetBytes(d);</span><br><span class="line">        Array.Reverse(b);</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (System.Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">byte</span>[] &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3CA97E13-&gt;0.02069</p>
<h2 id="格式转换"><a href="#格式转换" class="headerlink" title="格式转换"></a>格式转换</h2><h3 id="Double-to-Hex"><a href="#Double-to-Hex" class="headerlink" title="Double to Hex"></a>Double to Hex</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> Height_LF = (<span class="keyword">int</span>)Convert.ToDouble(XmlFO.ListObject[<span class="string">"WBH_LF"</span>].xValue);</span><br><span class="line">Height_RR *= <span class="number">4</span>;</span><br><span class="line"><span class="keyword">string</span> s = <span class="keyword">string</span>.Empty;</span><br><span class="line">s = s + ((<span class="keyword">byte</span>)(Height_LF &gt;&gt; <span class="number">8</span>)).ToString(<span class="string">"x2"</span>)+ <span class="string">" "</span>;</span><br><span class="line">s = s + ((<span class="keyword">byte</span>)(Height_LF)).ToString(<span class="string">"x2"</span>) + <span class="string">" "</span>;</span><br></pre></td></tr></table></figure>

<p>2700-&gt;0a 8c</p>
<h3 id="Byte-to-uint"><a href="#Byte-to-uint" class="headerlink" title="Byte to uint"></a>Byte to uint</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uint</span> <span class="title">BytesToUint</span>(<span class="params"><span class="keyword">byte</span>[] bys</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">uint</span> ReVal = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">foreach</span> (<span class="keyword">byte</span> b <span class="keyword">in</span> bys)</span><br><span class="line">  &#123;</span><br><span class="line">      ReVal &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">      ReVal += b;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ReVal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">byte</span>[] <span class="title">UintToBytes</span>(<span class="params"><span class="keyword">uint</span> UnVal, <span class="keyword">int</span> Count</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">byte</span>[] ReVal = <span class="keyword">new</span> <span class="keyword">byte</span>[Count];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Count; i++)</span><br><span class="line">  &#123;</span><br><span class="line">      ReVal[Count - i - <span class="number">1</span>] = (<span class="keyword">byte</span>)(UnVal &gt;&gt; (i * <span class="number">8</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ReVal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Int-to-Byte"><a href="#Int-to-Byte" class="headerlink" title="Int to Byte"></a>Int to Byte</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">ToByte</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">string</span>[] SepPara;</span><br><span class="line">      <span class="keyword">if</span> (!XmlFO.SepParams(sPara, <span class="number">2</span>, <span class="keyword">out</span> SepPara))</span><br><span class="line">          <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">      xBytes tmpbyte = (xBytes)XmlFO.GetCheckSpecTypeObject(SepPara[<span class="number">0</span>], <span class="keyword">typeof</span>(xBytes));</span><br><span class="line">      <span class="keyword">if</span> (tmpbyte == <span class="literal">null</span>)</span><br><span class="line">          <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> Count = Convert.ToInt32(SepPara[<span class="number">1</span>]);</span><br><span class="line">      <span class="keyword">if</span> (Count &gt; <span class="number">4</span>) Count = <span class="number">4</span>;</span><br><span class="line">      <span class="keyword">if</span> (Count &lt; <span class="number">1</span>) Count = <span class="number">1</span>;</span><br><span class="line">      Byte[] TmpByte = <span class="keyword">new</span> <span class="keyword">byte</span>[Count];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Count; i++)</span><br><span class="line">      &#123;</span><br><span class="line">          TmpByte[i] = (<span class="keyword">byte</span>)((iValue &gt;&gt; ((Count - i - <span class="number">1</span>) * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      tmpbyte.Bytes = TmpByte;</span><br><span class="line">      <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> (Exception e)</span><br><span class="line">  &#123;</span><br><span class="line">      xErrorOutException(e);</span><br><span class="line">      <span class="keyword">return</span> xState.xError;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Byte"><a href="#Byte" class="headerlink" title="Byte"></a>Byte</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">byte</span>[] <span class="title">xHexToBytes</span>(<span class="params"><span class="keyword">string</span> InStr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!InStr.StartsWith(<span class="string">"0x"</span>))</span><br><span class="line">        <span class="keyword">return</span> System.Text.Encoding.GetEncoding(cPage).GetBytes(InStr);</span><br><span class="line">    InStr = InStr.Substring(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">string</span> NSpaceStr = InStr.Replace(<span class="string">" "</span>, <span class="keyword">string</span>.Empty);</span><br><span class="line"></span><br><span class="line">    List&lt;<span class="keyword">byte</span>&gt; ReByte = <span class="keyword">new</span> List&lt;<span class="keyword">byte</span>&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NSpaceStr.Length / <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ReByte.Add(Convert.ToByte(NSpaceStr.Substring(i * <span class="number">2</span>, <span class="number">2</span>), <span class="number">16</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ReByte.ToArray();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">byte</span>[] <span class="title">StringAnaToBytes</span>(<span class="params"><span class="keyword">string</span> StrAna</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List&lt;<span class="keyword">byte</span>&gt; ReByte = <span class="keyword">new</span> List&lt;<span class="keyword">byte</span>&gt;();</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span>[] strs = StrAna.Split(<span class="string">'&#123;'</span>, <span class="string">'&#125;'</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; strs.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">                ReByte.AddRange(System.Text.Encoding.GetEncoding(cPage).GetBytes(strs[i]));</span><br><span class="line">            <span class="keyword">else</span> ReByte.AddRange(xHexToBytes(strs[i]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> xError = <span class="keyword">string</span>.Format(<span class="string">"字符串转换到BYTE失败Error:&#123;0&#125; 字串：&#123;1&#125;"</span>, e.Message, StrAna);</span><br><span class="line">        xErrorOut(MethodInfo.GetCurrentMethod().Name, xError);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ReByte.ToArray();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">PackBytes</span>(<span class="params"><span class="keyword">byte</span>[] ArrByte</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">string</span> ReStr = <span class="string">"&#123;0x"</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">byte</span> b <span class="keyword">in</span> ArrByte)</span><br><span class="line">    &#123;</span><br><span class="line">        ReStr += b.ToString(<span class="string">"X2"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ReStr += <span class="string">"&#125;"</span>;</span><br><span class="line">    <span class="keyword">return</span> ReStr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> cPage = Encoding.Default.CodePage;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">byte</span>[] <span class="title">StringToBytes</span>(<span class="params"><span class="keyword">string</span> InValue</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">string</span> str = XmlFO.StringAnalysis(InValue);</span><br><span class="line">    <span class="keyword">return</span> StringAnaToBytes(str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">BytesToString</span>(<span class="params"><span class="keyword">byte</span>[] InBytes</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> System.Text.Encoding.GetEncoding(cPage).GetString(Bytes);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">ToString</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        XmlFO.ListObject[sPara].xValue = BytesToString(Bytes);</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">ToInt</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        xInt TmpInt = (xInt)XmlFO.GetCheckSpecTypeObject(sPara, <span class="keyword">typeof</span>(xInt));</span><br><span class="line">        <span class="keyword">if</span> (TmpInt == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> Count = Bytes.Length;</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Count &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp = (<span class="keyword">sbyte</span>)Bytes[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span> (Count &gt; <span class="number">4</span>) Count = <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">                NumTmp += Bytes[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        TmpInt.iValue = NumTmp;</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">ToInt_MinusSign</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        xInt TmpInt = (xInt)XmlFO.GetCheckSpecTypeObject(sPara, <span class="keyword">typeof</span>(xInt));</span><br><span class="line">        <span class="keyword">if</span> (TmpInt == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> Count = Bytes.Length;</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Count &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp = (Bytes[<span class="number">0</span>] &amp; <span class="number">0x7F</span>);</span><br><span class="line">            <span class="keyword">if</span> (Count &gt; <span class="number">4</span>) Count = <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">                NumTmp += Bytes[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (Bytes[<span class="number">0</span>] &gt; <span class="number">0x7F</span>)</span><br><span class="line">                NumTmp = -NumTmp;</span><br><span class="line">        &#125;</span><br><span class="line">        TmpInt.iValue = NumTmp;</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">ToInt_Uint</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        xInt TmpInt = (xInt)XmlFO.GetCheckSpecTypeObject(sPara, <span class="keyword">typeof</span>(xInt));</span><br><span class="line">        <span class="keyword">if</span> (TmpInt == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> Count = Bytes.Length;</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Count &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp = Bytes[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span> (Count &gt; <span class="number">4</span>) Count = <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">                NumTmp += Bytes[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        TmpInt.iValue = NumTmp;</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">CopyFrom</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        xBytes TmpByte = (xBytes)XmlFO.GetCheckSpecTypeObject(sPara, <span class="keyword">typeof</span>(xBytes));</span><br><span class="line">        <span class="keyword">if</span> (TmpByte == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (TmpByte.cPage != cPage)</span><br><span class="line">            Bytes = Encoding.Convert(Encoding.GetEncoding(TmpByte.cPage), Encoding.GetEncoding(cPage), TmpByte.Bytes);</span><br><span class="line">        <span class="keyword">else</span> Bytes = TmpByte.Bytes.ToArray();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">SubByteFrom</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span>[] SepPara;</span><br><span class="line">        <span class="keyword">if</span> (!XmlFO.SepParams(sPara, <span class="number">3</span>, <span class="keyword">out</span> SepPara))</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        List&lt;Byte&gt; tmpByte = <span class="keyword">new</span> List&lt;<span class="keyword">byte</span>&gt;();</span><br><span class="line">        tmpByte.AddRange(StringToBytes(SepPara[<span class="number">0</span>]));</span><br><span class="line">        <span class="keyword">if</span> (tmpByte.Count &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> start = Convert.ToInt32(SepPara[<span class="number">1</span>]);<span class="comment">//start 0</span></span><br><span class="line">            <span class="keyword">int</span> leng = Convert.ToInt32(SepPara[<span class="number">2</span>]);</span><br><span class="line">            <span class="keyword">if</span> (start &gt;= tmpByte.Count)</span><br><span class="line">                start = tmpByte.Count - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> ((start + leng) &gt; tmpByte.Count)</span><br><span class="line">                leng = tmpByte.Count - start;</span><br><span class="line">            Bytes = tmpByte.GetRange(start, leng).ToArray();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> Bytes = tmpByte.ToArray();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">IsEqual</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span>[] SepPara;</span><br><span class="line">        <span class="keyword">if</span> (!XmlFO.SepParams(sPara, <span class="number">2</span>, <span class="keyword">out</span> SepPara))</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] tmpByte = StringToBytes(SepPara[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">int</span> start = Convert.ToInt32(SepPara[<span class="number">1</span>]);<span class="comment">//start 0</span></span><br><span class="line">        <span class="keyword">if</span> ((start + tmpByte.Length) &gt; Bytes.Length)</span><br><span class="line">            <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tmpByte.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (tmpByte[i] != Bytes[start + i])</span><br><span class="line">                <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">CheckBit</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span>[] SepPara;</span><br><span class="line">        <span class="keyword">if</span> (!XmlFO.SepParams(sPara, <span class="number">2</span>, <span class="keyword">out</span> SepPara))</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> byteNo = Convert.ToInt32(SepPara[<span class="number">0</span>]);<span class="comment">//start 0</span></span><br><span class="line">        <span class="keyword">int</span> bitNo = Convert.ToInt32(SepPara[<span class="number">1</span>]);<span class="comment">//start 7---0</span></span><br><span class="line">        <span class="keyword">if</span> (bitNo &gt; <span class="number">7</span>) bitNo = <span class="number">7</span>;</span><br><span class="line">        <span class="keyword">if</span> (bitNo &lt; <span class="number">0</span>) bitNo = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> Num = (Bytes[byteNo] &lt;&lt; (<span class="number">7</span> - bitNo)) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        Num = (Num &gt;&gt; <span class="number">7</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        <span class="keyword">if</span> (Num == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">UseDefaultCodePage</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cPage = Encoding.Default.CodePage;</span><br><span class="line">    <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">UseUTF8CodePage</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cPage = Encoding.UTF8.CodePage;</span><br><span class="line">    <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">UseUnicodeCodePage</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cPage = Encoding.Unicode.CodePage;</span><br><span class="line">    <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转换</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_String_ASCII</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, Bytes.Length);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = Encoding.ASCII.GetString(Bytes, Sep.iStart, Sep.iCount);</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_String_BCD</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, Bytes.Length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">string</span> strTmp = <span class="keyword">string</span>.Empty;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = Sep.iStart; (i &lt; Bytes.Length) &amp;&amp; (i &lt; (Sep.iStart + Sep.iCount)); i++)</span><br><span class="line">            strTmp += Bytes[i].ToString(<span class="string">"X2"</span>);</span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = strTmp;</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_Double</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = Sep.iStart; (i &lt; Bytes.Length) &amp;&amp; (i &lt; (Sep.iStart + Sep.iCount)); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            NumTmp += Bytes[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> DoubTmp = (NumTmp * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = DoubTmp.ToString();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_Double_Bit</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">double</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Sep.iCount &gt; <span class="number">4</span>)</span><br><span class="line">            NumTmp = BitConverter.ToDouble(Bytes, Sep.iStart);</span><br><span class="line">        <span class="keyword">else</span> NumTmp = BitConverter.ToSingle(Bytes, Sep.iStart);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> DoubTmp = (NumTmp * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = DoubTmp.ToString();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_Double_Minus</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> NumTmp = (Bytes[<span class="number">0</span>] &amp; <span class="number">0x7F</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = (Sep.iStart + <span class="number">1</span>); (i &lt; Bytes.Length) &amp;&amp; (i &lt; (Sep.iStart + Sep.iCount)); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            NumTmp += Bytes[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Bytes[<span class="number">0</span>] &gt; <span class="number">0x7F</span>)</span><br><span class="line">            NumTmp = -NumTmp;</span><br><span class="line">        <span class="keyword">double</span> DoubTmp = (NumTmp * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = DoubTmp.ToString();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_Int</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = Sep.iStart; (i &lt; Bytes.Length) &amp;&amp; (i &lt; (Sep.iStart + Sep.iCount)); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            NumTmp += Bytes[i];</span><br><span class="line">        &#125;</span><br><span class="line">        NumTmp = (<span class="keyword">int</span>)(NumTmp * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = NumTmp.ToString();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_Int_Bit</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Sep.iCount &gt; <span class="number">4</span>)</span><br><span class="line">            NumTmp = (<span class="keyword">int</span>)BitConverter.ToInt64(Bytes, Sep.iStart);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Sep.iCount &gt; <span class="number">2</span>)</span><br><span class="line">            NumTmp = (<span class="keyword">int</span>)BitConverter.ToInt32(Bytes, Sep.iStart);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Sep.iCount &gt; <span class="number">1</span>)</span><br><span class="line">            NumTmp = (<span class="keyword">int</span>)BitConverter.ToInt16(Bytes, Sep.iStart);</span><br><span class="line">        <span class="keyword">else</span> NumTmp = Bytes[Sep.iStart];</span><br><span class="line"></span><br><span class="line">        NumTmp = (<span class="keyword">int</span>)(NumTmp * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = NumTmp.ToString();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Append_Double</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">4</span>);</span><br><span class="line">        <span class="keyword">int</span> iTmp = (<span class="keyword">int</span>)(Convert.ToDouble(XmlFO.ListObject[Sep.sName].xValue) * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        List&lt;Byte&gt; ListTmp = <span class="keyword">new</span> List&lt;<span class="keyword">byte</span>&gt;();</span><br><span class="line">        ListTmp.AddRange(Bytes);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Sep.iCount; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ListTmp.Add((<span class="keyword">byte</span>)((iTmp &gt;&gt; ((Sep.iCount - i - <span class="number">1</span>) * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Bytes = ListTmp.ToArray();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数据转换</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>IEEE</tag>
        <tag>Hex</tag>
        <tag>Double</tag>
        <tag>Byte</tag>
        <tag>int</tag>
        <tag>String</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式</title>
    <url>/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html</url>
    <content><![CDATA[<h2 id="Re库"><a href="#Re库" class="headerlink" title="Re库"></a>Re库</h2><p>re.search 扫描整个字符串并返回第一个成功的匹配<br>re.search(pattern,string,flag=0)</p>
<blockquote>
<p>pattern:正则表达式字符串<br>string:待匹配字符串<br>flag:控制标记</p>
<blockquote>
<p>re.I或re.IGNORECASE表示忽略正则表达式的大小写，[A-Z]可匹配大小写<br>re.M或re.MULTILINE正字表达式中的^操作符能将给定字符串的每一行当做匹配开始<br>re.S或re.DOTALL正则表达式中的.操作符能匹配所有字符，默认不能匹配换行符</p>
</blockquote>
</blockquote>
<p>re.match(pattern,string,flag=0)</p>
<blockquote>
<p>re.match只匹配字符串的开始，如果字符串开始不符合正则表达式，则匹配失败，函数返回None；而re.search匹配整个字符串，直到找到一个匹配</p>
</blockquote>
<p>re.findall在字符串中找到正则表达式所匹配的所有子串，并返回一个列表，如果没有找到匹配的，则返回空列表<br>re.split(pattern,string,maxsplit=0,flag=0)</p>
<blockquote>
<p>将字符串按照正则表达式匹配的结果进行分割，返回列表<br>re.split([a],sadfab)返回s,df,b</p>
</blockquote>
<p>re.sub(pattern,repl,string,count=0,flag=0)</p>
<blockquote>
<p>在一个字符串中替换所有正则表达式所匹配的子串，返回替换后的字符串<br>repl:替换匹配字符串的字符串<br>count:匹配的最大替换次数</p>
</blockquote>
<h3 id="Match对象属性"><a href="#Match对象属性" class="headerlink" title="Match对象属性"></a>Match对象属性</h3><blockquote>
<p>.string:待匹配文本<br>.re:匹配时使用的pattern对象<br>.pos:正则表达式搜索文本的开始位置<br>.endpos:正则表达式搜索文本的结束位置</p>
</blockquote>
<h3 id="Match对象方法"><a href="#Match对象方法" class="headerlink" title="Match对象方法"></a>Match对象方法</h3><blockquote>
<p>.group():group(0)获取匹配后的字符串,group(n)匹配正则表达式中如(\d+)第n个括号所匹配字符串<br>.start():匹配字符串在原始字符串的开始位置<br>.end():<br>.span():返回(.start(),.end())</p>
</blockquote>
<h2 id="常用字符"><a href="#常用字符" class="headerlink" title="常用字符"></a>常用字符</h2><table>
<thead>
<tr>
<th>字符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>.</td>
<td>任意单个字符</td>
<td></td>
</tr>
<tr>
<td>[]</td>
<td>字符集，对单个字符给出取值范围</td>
<td>[abc]表示a或b或c的单个字符，[a-z]表示a-z的单个字符</td>
</tr>
<tr>
<td>[^]</td>
<td>非字符集，对单个字符给出排除范围</td>
<td>[^abc]表示非a或b或c的单个字符</td>
</tr>
<tr>
<td>*</td>
<td>前一个字符0次或无限次重复</td>
<td>abc*表示ab、abc、abccccc</td>
</tr>
<tr>
<td>+</td>
<td>前一个字符的1次或无限次重复</td>
<td>abc+表示abc、abccc</td>
</tr>
<tr>
<td>?</td>
<td>前一个字符0次或1次重复</td>
<td>abc?表示ab或abc</td>
</tr>
<tr>
<td>|</td>
<td>左右表达式任意一个</td>
<td>a|b 表示a或b</td>
</tr>
<tr>
<td>{m}</td>
<td>重复前一个字符m次</td>
<td>ab{2}cb表示abbcb,注意次数</td>
</tr>
<tr>
<td>{m,n}</td>
<td>重复前面一个字符m至n次(包含n)</td>
<td>ab{1,2}c表示abc或abbc</td>
</tr>
<tr>
<td>^</td>
<td>匹配字符串开头</td>
<td>^abc表示abc在一个字符串的开头</td>
</tr>
<tr>
<td>$</td>
<td>匹配字符串结尾</td>
<td>abc$abc表示abc在一个字符串的结尾</td>
</tr>
<tr>
<td>()</td>
<td>分组标记，内部只能用|操作符</td>
<td>(abc)表示abc,(abc</td>
</tr>
<tr>
<td>\d</td>
<td>数字，等价于[0-9]</td>
<td></td>
</tr>
<tr>
<td>\w</td>
<td>单词字符，等价于[A-Za-z0-9]</td>
<td></td>
</tr>
</tbody></table>
<h3 id="非打印字符"><a href="#非打印字符" class="headerlink" title="非打印字符"></a>非打印字符</h3><p>非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：</p>
<table>
<thead>
<tr>
<th align="center">字符</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">\cx</td>
<td align="center">匹配由x指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。</td>
</tr>
<tr>
<td align="center">\f</td>
<td align="center">匹配一个换页符。等价于 \x0c 和 \cL。</td>
</tr>
<tr>
<td align="center">\n</td>
<td align="center">匹配一个换行符。等价于 \x0a 和 \cJ。</td>
</tr>
<tr>
<td align="center">\r</td>
<td align="center">匹配一个回车符。等价于 \x0d 和 \cM。</td>
</tr>
<tr>
<td align="center">\s</td>
<td align="center">匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。注意 Unicode 正则表达式会匹配全角空格符。</td>
</tr>
<tr>
<td align="center">\S</td>
<td align="center">匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</td>
</tr>
<tr>
<td align="center">\t</td>
<td align="center">匹配一个制表符。等价于 \x09 和 \cI。</td>
</tr>
<tr>
<td align="center">\v</td>
<td align="center">匹配一个垂直制表符。等价于 \x0b 和 \cK。</td>
</tr>
</tbody></table>
<h3 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h3><table>
<thead>
<tr>
<th align="center">字符</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$</td>
<td align="left">匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 ‘\n’ 或 ‘\r’。要匹配 $ 字符本身，请使用 $。</td>
</tr>
<tr>
<td align="center">( )</td>
<td align="left">标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。</td>
</tr>
<tr>
<td align="center">*</td>
<td align="left">匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 *。</td>
</tr>
<tr>
<td align="center">+</td>
<td align="left">匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 +。</td>
</tr>
<tr>
<td align="center">.</td>
<td align="left">匹配除换行符 \n 之外的任何单字符。要匹配 . ，请使用 . 。</td>
</tr>
<tr>
<td align="center">[</td>
<td align="left">标记一个中括号表达式的开始。要匹配 [，请使用 [。</td>
</tr>
<tr>
<td align="center">[]</td>
<td align="left">[abc]表示a或b或c，[a<del>z]表示a</del>z其中一个</td>
</tr>
<tr>
<td align="center">[^]</td>
<td align="left">[^abc]表示非a或b或c</td>
</tr>
<tr>
<td align="center">?</td>
<td align="left">匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 ?。</td>
</tr>
<tr>
<td align="center">\</td>
<td align="left">将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， ‘n’ 匹配字符 ‘n’。’\n’ 匹配换行符。序列 ‘\‘ 匹配 “&quot;，而 ‘(‘ 则匹配 “(“。</td>
</tr>
<tr>
<td align="center">^</td>
<td align="left">匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。要匹配 ^ 字符本身，请使用 ^。</td>
</tr>
<tr>
<td align="center">{</td>
<td align="left">标记限定符表达式的开始。要匹配 {，请使用 {。</td>
</tr>
<tr>
<td align="center">|</td>
<td align="left">指明两项之间的一个选择。要匹配 |，请使用 |。</td>
</tr>
</tbody></table>
<h3 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h3><p>限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有 * 或 + 或 ? 或 {n} 或 {n,} 或 {n,m} 共6种。<br>正则表达式的限定符有：</p>
<table>
<thead>
<tr>
<th align="center">字符</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">*</td>
<td align="center">匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。</td>
</tr>
<tr>
<td align="center">+</td>
<td align="center">匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</td>
</tr>
<tr>
<td align="center">?</td>
<td align="center">匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 、 “does” 中的 “does” 、 “doxy” 中的 “do” 。? 等价于 {0,1}。</td>
</tr>
<tr>
<td align="center">{n}</td>
<td align="center">n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td>
</tr>
<tr>
<td align="center">{n,}</td>
<td align="center">n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。</td>
</tr>
<tr>
<td align="center">{n,m}</td>
<td align="center">m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。</td>
</tr>
</tbody></table>
<p><strong><em>\</em>、+限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个?就可以实现非贪婪或最小匹配*</strong></p>
<h3 id="定位符"><a href="#定位符" class="headerlink" title="定位符"></a>定位符</h3><p>定位符使您能够将正则表达式固定到行首或行尾。它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。<br>定位符用来描述字符串或单词的边界，^ 和 $ 分别指字符串的开始与结束，\b 描述单词的前或后边界，\B 表示非单词边界。<br>正则表达式的定位符有：</p>
<table>
<thead>
<tr>
<th align="center">字符</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">^</td>
<td align="left">匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 \n 或 \r 之后的位置匹配。</td>
</tr>
<tr>
<td align="center">$</td>
<td align="left">匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 \n 或 \r 之前的位置匹配。</td>
</tr>
<tr>
<td align="center">\b</td>
<td align="left">匹配一个单词边界，即字与空格间的位置。</td>
</tr>
<tr>
<td align="center">\B</td>
<td align="left">非单词边界匹配。</td>
</tr>
</tbody></table>
<p><strong>注意</strong>：不能将限定符与定位符一起使用。由于在紧靠换行或者单词边界的前面或后面不能有一个以上位置，因此不允许诸如 ^* 之类的表达式。<br>若要匹配一行文本开始处的文本，请在正则表达式的开始使用 ^ 字符。不要将 ^ 的这种用法与中括号表达式内的用法混淆。<br>若要匹配一行文本的结束处的文本，请在正则表达式的结束处使用 $ 字符。</p>
<h2 id="环视"><a href="#环视" class="headerlink" title="环视"></a>环视</h2><p>环视又叫预搜索和零宽断言<br>环视只占用逻辑位置 不占用物理位置</p>
<p>环视 | 含义<br>|:|:|<br>(?=exp)  | 肯定顺序环视，子表达式能匹配右侧的文本<br>(?!exp)  | 否定顺序环视，子表达式不能匹配右侧的文本<br>(?&lt;=exp)  |  肯定逆序环视，子表达式能匹配左侧的文本<br>(?&lt;!exp)  |  否定逆序环视，子表达式不能匹配左侧的文本</p>
<p>示例：<br>下列环视正则匹配均输出”AAA”</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">print(re.findall(<span class="string">"(?&lt;=B)AAA"</span>,<span class="string">"BAAA"</span>))</span><br><span class="line">print(re.findall(<span class="string">"(?&lt;!B)AAA"</span>,<span class="string">"CAAA"</span>))<span class="comment">#这里使用(?&lt;!B)、(?&lt;!=B)均可</span></span><br><span class="line">print(re.findall(<span class="string">"AAA(?=B)"</span>,<span class="string">"AAAB"</span>))</span><br><span class="line">print(re.findall(<span class="string">"AAA(?!B)"</span>,<span class="string">"AAAC"</span>))<span class="comment">#这里使用(?!B)、(?!=B)均可</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>正则表达式</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>Rabbit MQ</title>
    <url>/Rabbit%20MQ.html</url>
    <content><![CDATA[<center>写在前面</center>

<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Erlang安装"><a href="#Erlang安装" class="headerlink" title="Erlang安装"></a>Erlang安装</h3><p>Rabbit MQ安装前需先安装Erlang语言环境安装包下载地址：<br>链接：<a href="https://pan.baidu.com/s/14_Z6JUdvQfY8PGQ4NBb73A" target="_blank" rel="noopener">https://pan.baidu.com/s/14_Z6JUdvQfY8PGQ4NBb73A</a><br>提取码：abtt</p>
<h3 id="Rabbit-MQ服务端安装"><a href="#Rabbit-MQ服务端安装" class="headerlink" title="Rabbit MQ服务端安装"></a>Rabbit MQ服务端安装</h3><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><p>软件安装在C盘(第一次安装到D盘后进入命令行程序不能执行，有兴趣可以研究研究)安装包下载地址：<br>链接：<a href="https://pan.baidu.com/s/1NbHfVoGyo_oVAXzaTnZuAw" target="_blank" rel="noopener">https://pan.baidu.com/s/1NbHfVoGyo_oVAXzaTnZuAw</a><br>提取码：9am0</p>
<h4 id="启用管理工具"><a href="#启用管理工具" class="headerlink" title="启用管理工具"></a>启用管理工具</h4><p>在服务程序中确保RabbitMQ服务已启用<br>安装完成后打开所有程序中的RabbitMQ Command Prompt (sbin dir)<br>输入命令：’rabbitmq-plugins enable rabbitmq_management’<br><img src="Rabbit%20MQ/%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png" alt><br>打开浏览器输入<a href="http://localhost:15672" target="_blank" rel="noopener">http://localhost:15672</a><br>默认账号、密码均为guest</p>
<h2 id="C-Producer"><a href="#C-Producer" class="headerlink" title="C# Producer"></a>C# Producer</h2><p>项目中需要引用RabbitMQ.Client.dll下载链接为：<br>链接：<a href="https://pan.baidu.com/s/1aJ-8RVJnJWibeqtPcTn9hw" target="_blank" rel="noopener">https://pan.baidu.com/s/1aJ-8RVJnJWibeqtPcTn9hw</a><br>提取码：9d8n<br>此版本支持.Net4.0，全版本请自行下载<br>下载地址：<a href="http://www.rabbitmq.com/releases/rabbitmq-dotnet-client/" target="_blank" rel="noopener">http://www.rabbitmq.com/releases/rabbitmq-dotnet-client/</a></p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> RabbitMQ.Client;</span><br><span class="line"><span class="keyword">var</span> factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">factory.HostName = <span class="string">"localhost"</span>;<span class="comment">//RabbitMQ服务在本地运行127.0.0.1</span></span><br><span class="line">factory.UserName = <span class="string">"guest"</span>;<span class="comment">//用户名</span></span><br><span class="line">factory.Password = <span class="string">"guest"</span>;<span class="comment">//密码</span></span><br><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> connection = factory.CreateConnection())</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> channel = connection.CreateModel())<span class="comment">//创建一个Channel</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">          channel.QueueDeclarePassive(mqqueueString);<span class="comment">//判断队列是否存在</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (Exception e)</span><br><span class="line">      &#123;</span><br><span class="line">          Log(mqqueueString + <span class="string">"队列未创建!"</span>);</span><br><span class="line">          <span class="keyword">throw</span> e;</span><br><span class="line">          <span class="comment">//return false;</span></span><br><span class="line">      &#125;</span><br><span class="line">        <span class="comment">/*在创建队列的时候，只有RabbitMQ上该队列不存在，才会去创建。</span></span><br><span class="line"><span class="comment">        消息是以二进制数组的形式传输的，所以如果消息是实体对象的话，需要序列化和然后转化为二进制数组。*/</span></span><br><span class="line">        IBasicProperties properties = channel.CreateBasicProperties();</span><br><span class="line">        properties.ContentType = <span class="string">"application/json"</span>;</span><br><span class="line">        properties.ContentEncoding = <span class="string">"UTF-8"</span>;</span><br><span class="line">        properties.Headers = <span class="keyword">new</span> Dictionary&lt;<span class="keyword">string</span>, <span class="keyword">object</span>&gt;();</span><br><span class="line">        properties.Headers.Add(<span class="string">"srcSystem"</span>, <span class="string">"EQP"</span>);</span><br><span class="line">        properties.Headers.Add(<span class="string">"desSystem"</span>, <span class="string">"IMES"</span>);</span><br><span class="line">        properties.Headers.Add(<span class="string">"msgType"</span>, <span class="string">"EQP_IMES_EM"</span>);</span><br><span class="line">        properties.Headers.Add(<span class="string">"msgID"</span>, msgID);</span><br><span class="line">        channel.ConfirmSelect();</span><br><span class="line">        channel.QueueDeclare(mqqueueString, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">null</span>);<span class="comment">//消息队列</span></span><br><span class="line">        <span class="keyword">var</span> body = Encoding.UTF8.GetBytes(msgStr);</span><br><span class="line">        channel.BasicPublish(mqExchange, mqRoutingKey, properties, body); <span class="comment">//开始传递</span></span><br><span class="line">        <span class="keyword">if</span> (channel.WaitForConfirms())</span><br><span class="line">        &#123;</span><br><span class="line">            Log(<span class="string">"数据发送成功"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log(<span class="string">"数据发送成功，但未收到确认消息"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>
<p>发送成功后可登录网页在Queues中查看到上传的消息队列及内容</p>
<h3 id="函数说明"><a href="#函数说明" class="headerlink" title="函数说明"></a>函数说明</h3><h4 id="QueueDeclare"><a href="#QueueDeclare" class="headerlink" title="QueueDeclare"></a>QueueDeclare</h4><p>转自<a href="https://blog.csdn.net/vbirdbest/article/details/78670550" target="_blank" rel="noopener">https://blog.csdn.net/vbirdbest/article/details/78670550</a></p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">queueDeclare(String queue,</span><br><span class="line">			boolean durable,</span><br><span class="line">			boolean exclusive,</span><br><span class="line">			Map&lt;String, Object&gt; arguments);</span><br></pre></td></tr></table></figure>

<p>queue: 队列名称</p>
<p>durable： 是否持久化, 队列的声明默认是存放到内存中的，如果rabbitmq重启会丢失，如果想重启之后还存在就要使队列持久化，保存到Erlang自带的Mnesia数据库中，当rabbitmq重启之后会读取该数据库</p>
<p>exclusive：是否排外的，有两个作用，一：当连接关闭时connection.close()该队列是否会自动删除；二：该队列是否是私有的private，如果不是排外的，可以使用两个消费者都访问同一个队列，没有任何问题，如果是排外的，会对当前队列加锁，其他通道channel是不能访问的，如果强制访问会报异常：com.rabbitmq.client.ShutdownSignalException: channel error; protocol method: #method&lt;channel.close&gt;(reply-code=405, reply-text=RESOURCE_LOCKED - cannot obtain exclusive access to locked queue ‘queue_name’ in vhost ‘/‘, class-id=50, method-id=20)一般等于true的话用于一个队列只能有一个消费者来消费的场景</p>
<p>autoDelete：是否自动删除，当最后一个消费者断开连接之后队列是否自动被删除，可以通过RabbitMQ Management，查看某个队列的消费者数量，当consumers = 0时队列就会自动删除</p>
<p>arguments：<br>队列中的消息什么时候会自动被删除</p>
<blockquote>
<p>Message TTL(x-message-ttl)：设置队列中的所有消息的生存周期(统一为整个队列的所有消息设置生命周期), 也可以在发布消息的时候单独为某个消息指定剩余生存时间,单位毫秒, 类似于redis中的ttl，生存时间到了，消息会被从队里中删除，注意是消息被删除，而不是队列被删除， 特性Features=TTL, 单独为某条消息设置过期时间AMQP.BasicProperties.Builder properties = new AMQP.BasicProperties().builder().expiration(“6000”);<br>channel.basicPublish(EXCHANGE_NAME, “”, properties.build(), message.getBytes(“UTF-8”));</p>
</blockquote>
<blockquote>
<p>Auto Expire(x-expires): 当队列在指定的时间没有被访问(consume, basicGet, queueDeclare…)就会被删除,Features=Exp</p>
</blockquote>
<blockquote>
<p>Max Length(x-max-length): 限定队列的消息的最大值长度，超过指定长度将会把最早的几条删除掉， 类似于mongodb中的固定集合，例如保存最新的100条消息, Feature=Lim</p>
</blockquote>
<blockquote>
<p>Max Length Bytes(x-max-length-bytes): 限定队列最大占用的空间大小， 一般受限于内存、磁盘的大小, Features=Lim B</p>
</blockquote>
<blockquote>
<p>Dead letter exchange(x-dead-letter-exchange)： 当队列消息长度大于最大长度、或者过期的等，将从队列中删除的消息推送到指定的交换机中去而不是丢弃掉,Features=DLX</p>
</blockquote>
<blockquote>
<p>Dead letter routing key(x-dead-letter-routing-key)：将删除的消息推送到指定交换机的指定路由键的队列中去, Feature=DLK</p>
</blockquote>
<blockquote>
<p>Maximum priority(x-max-priority)：优先级队列，声明队列时先定义最大优先级值(定义最大值一般不要太大)，在发布消息的时候指定该消息的优先级， 优先级更高（数值更大的）的消息先被消费,</p>
</blockquote>
<blockquote>
<p>Lazy mode(x-queue-mode=lazy)： Lazy Queues: 先将消息保存到磁盘上，不放在内存中，当消费者开始消费的时候才加载到内存中</p>
</blockquote>
<blockquote>
<p>Master locator(x-queue-master-locator)</p>
</blockquote>
<h4 id="basicPublish"><a href="#basicPublish" class="headerlink" title="basicPublish"></a>basicPublish</h4><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">basicPublish(String exchange,</span><br><span class="line">             String routingKey,</span><br><span class="line">            BasicProperties props,</span><br><span class="line">            <span class="keyword">byte</span>[] body)</span><br></pre></td></tr></table></figure>

<p>String exchange – 交换机名称<br>String routingKey – 路由关键字<br>BasicProperties props – 消息的基本属性，例如路由头等<br>byte[] body – 消息体</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">basicPublish(String exchange,</span><br><span class="line">             String routingKey,</span><br><span class="line">             boolean mandatory,</span><br><span class="line">             BasicProperties props,</span><br><span class="line">             <span class="keyword">byte</span>[] body)</span><br></pre></td></tr></table></figure>

<p>boolean mandatory – 是否为强制性</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">basicPublish(String exchange,</span><br><span class="line">             String routingKey,</span><br><span class="line">             boolean mandatory,</span><br><span class="line">             boolean immediate,</span><br><span class="line">             BasicProperties props,</span><br><span class="line">             <span class="keyword">byte</span>[] body)</span><br></pre></td></tr></table></figure>

<p>boolean immediate – 消息是否立即发送出去</p>
<h4 id="BasicProperties"><a href="#BasicProperties" class="headerlink" title="BasicProperties"></a>BasicProperties</h4><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">BasicProperties</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">private</span> String contentType; <span class="comment">//上下文类型</span></span><br><span class="line">  <span class="keyword">private</span> String contentEncoding; <span class="comment">//编码集</span></span><br><span class="line">  <span class="keyword">private</span> Map&lt;String,Object&gt; headers; <span class="comment">//消息头</span></span><br><span class="line">  <span class="keyword">private</span> Integer deliveryMode; <span class="comment">//消息的投递模式</span></span><br><span class="line">  <span class="keyword">private</span> Integer priority; <span class="comment">//优先级</span></span><br><span class="line">  <span class="keyword">private</span> String correlationId; <span class="comment">//</span></span><br><span class="line">  <span class="keyword">private</span> String replyTo; <span class="comment">//</span></span><br><span class="line">  <span class="keyword">private</span> String expiration; <span class="comment">//过期时间</span></span><br><span class="line">  <span class="keyword">private</span> String messageId; <span class="comment">//消息编号</span></span><br><span class="line">  <span class="keyword">private</span> Date timestamp; <span class="comment">//发送消息时的时间戳</span></span><br><span class="line">  <span class="keyword">private</span> String type; <span class="comment">// 消息类型</span></span><br><span class="line">  <span class="keyword">private</span> String userId;</span><br><span class="line">  <span class="keyword">private</span> String appId;</span><br><span class="line">  <span class="keyword">private</span> String clusterId;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="C-Consumer"><a href="#C-Consumer" class="headerlink" title="C# Consumer"></a>C# Consumer</h2><p>编写客户端链接RabbitMQ读取信息</p>
<div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> RabbitMQ.Client;</span><br><span class="line"><span class="keyword">using</span> RabbitMQ.Client.Events;</span><br><span class="line"><span class="keyword">var</span> factory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">factory.HostName = <span class="string">"localhost"</span>;</span><br><span class="line">factory.UserName = <span class="string">"guest"</span>;</span><br><span class="line">factory.Password = <span class="string">"guest"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> connection = factory.CreateConnection())</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> channel = connection.CreateModel())</span><br><span class="line">    &#123;</span><br><span class="line">        channel.QueueDeclare(<span class="string">"hello"</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> consumer = <span class="keyword">new</span> EventingBasicConsumer(channel);</span><br><span class="line">        channel.BasicConsume(<span class="string">"hello"</span>, <span class="literal">false</span>, consumer);</span><br><span class="line">        consumer.Received += (model, ea) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> body = ea.Body;</span><br><span class="line">            <span class="keyword">var</span> message = Encoding.UTF8.GetString(body);</span><br><span class="line">            Console.WriteLine(<span class="string">"已接收： &#123;0&#125;"</span>, message);   </span><br><span class="line">        &#125;;</span><br><span class="line">        Console.ReadLine();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>
<h3 id="函数说明-1"><a href="#函数说明-1" class="headerlink" title="函数说明"></a>函数说明</h3><h4 id="BasicConsume"><a href="#BasicConsume" class="headerlink" title="BasicConsume"></a>BasicConsume</h4><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function">String <span class="title">basicConsume</span>(<span class="params">String queue,</span></span></span><br><span class="line"><span class="function"><span class="params">                    Consumer callback</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">String <span class="title">basicConsume</span>(<span class="params">String queue,</span></span></span><br><span class="line"><span class="function"><span class="params">                    boolean autoAck,</span></span></span><br><span class="line"><span class="function"><span class="params">                    Consumer callback</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">String <span class="title">basicConsume</span>(<span class="params">String queue,</span></span></span><br><span class="line"><span class="function"><span class="params">                    boolean autoAck,</span></span></span><br><span class="line"><span class="function"><span class="params">                    Map&lt;String, Object&gt; arguments,</span></span></span><br><span class="line"><span class="function"><span class="params">                    Consumer callback</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">String <span class="title">basicConsume</span>(<span class="params">String queue,</span></span></span><br><span class="line"><span class="function"><span class="params">                    boolean autoAck,</span></span></span><br><span class="line"><span class="function"><span class="params">                    String consumerTag,</span></span></span><br><span class="line"><span class="function"><span class="params">                    Consumer callback</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">String <span class="title">basicConsume</span>(<span class="params">String queue,</span></span></span><br><span class="line"><span class="function"><span class="params">                    boolean autoAck,</span></span></span><br><span class="line"><span class="function"><span class="params">                    String consumerTag,</span></span></span><br><span class="line"><span class="function"><span class="params">                    boolean noLocal,</span></span></span><br><span class="line"><span class="function"><span class="params">                    boolean exclusive,</span></span></span><br><span class="line"><span class="function"><span class="params">                    Map&lt;String, Object&gt; arguments,</span></span></span><br><span class="line"><span class="function"><span class="params">                    Consumer callback</span>)</span></span><br></pre></td></tr></table></figure>

<p>queue 队列名<br>autoAck 是否自动确认消息,true自动确认,false 不自动要手动调用,建立设置为false<br>consumerTag 消费者标签，用来区分多个消费者<br>noLocal 设置为true，表示 不能将同一个Conenction中生产者发送的消息传递给这个Connection中 的消费者<br>exclusive 是否排他<br>arguments 消费者的参数<br>callback 消费者 DefaultConsumer建立使用，重写其中的方法</p>
]]></content>
      <categories>
        <category>MQ</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>Rabbit MQ</tag>
      </tags>
  </entry>
  <entry>
    <title>Selenium WebDriver</title>
    <url>/Selenium%20WebDriver.html</url>
    <content><![CDATA[<p>Selenium WebDriver 笔记</p>
<a id="more"></a>

<h2 id="Selenium"><a href="#Selenium" class="headerlink" title="Selenium"></a>Selenium</h2><h3 id="查找-UI-元素（web-元素）"><a href="#查找-UI-元素（web-元素）" class="headerlink" title="查找 UI 元素（web 元素）"></a>查找 UI 元素（web 元素）</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;div id="coolestWidgetEvah"&gt;...&lt;/div&gt;</span><br><span class="line">WebElement element = driver.findElement(By.id(<span class="string">"coolestWidgetEvah"</span>));</span><br><span class="line"></span><br><span class="line">&lt;div class="cheese"&gt;&lt;span&gt;Cheddar&lt;/span&gt;&lt;/div&gt;&lt;div class="cheese"&gt;&lt;span&gt;Gouda&lt;/span&gt;&lt;/div&gt;</span><br><span class="line">List&lt;WebElement&gt; cheeses = driver.findElements(By.className(<span class="string">"cheese"</span>));</span><br><span class="line"></span><br><span class="line">&lt;iframe src="..."&gt;&lt;/iframe&gt;</span><br><span class="line">WebElement frame = driver.findElement(By.tagName(<span class="string">"iframe"</span>));</span><br><span class="line"></span><br><span class="line">&lt;input name=<span class="string">"cheese"</span> type=<span class="string">"text"</span>/&gt;</span><br><span class="line">WebElement cheese = driver.findElement(By.name(<span class="string">"cheese"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//By Link Text</span></span><br><span class="line">&lt;a href="http://www.google.com/search?q=cheese"&gt;cheese&lt;/a&gt;&gt;</span><br><span class="line">WebElement cheese = driver.findElement(By.linkText(<span class="string">"cheese"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//By Partial Link Text</span></span><br><span class="line">&lt;a href="http://www.google.com/search?q=cheese"&gt;search for cheese&lt;/a&gt;&gt;</span><br><span class="line">WebElement cheese = driver.findElement(By.partialLinkText(<span class="string">"cheese"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// By CSS</span></span><br><span class="line">&lt;div id="food"&gt;&lt;span class="dairy"&gt;milk&lt;/span&gt;&lt;span class="dairy aged"&gt;cheese&lt;/span&gt;&lt;/div&gt;</span><br><span class="line">WebElement cheese = driver.findElement(By.cssSelector(<span class="string">"#food span.dairy.aged"</span>));</span><br></pre></td></tr></table></figure>

<h3 id="用户输入-填充表单"><a href="#用户输入-填充表单" class="headerlink" title="用户输入 - 填充表单"></a>用户输入 - 填充表单</h3><p>WebDriver 有一个叫 “Select” 的类，这个类提供了很多有用的方法用于 select 元素进行交互。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Select select = <span class="keyword">new</span> Select(driver.findElement(By.tagName(<span class="string">"select"</span>)));</span><br><span class="line">select.deselectAll();</span><br><span class="line">select.selectByVisibleText(<span class="string">"Edam"</span>);</span><br></pre></td></tr></table></figure>

<p>上述代码取消页面上第一个 select 元素的所有 option 的选中状态，然后选中字面值为 “Edam” 的 option。</p>
<p>如果你已经完成表单填充，你可能希望提交它，你只要找到 “submit” 按钮然后点击它即可。</p>
<p><code>driver.findElement(By.id(&quot;submit&quot;)).click();</code><br>或者，你可以调用 WebDriver 为每个元素提供的 “submit” 方法。如果你对一个 form 元素调用该方法，WebDriver 将调用这个 form 的 submit 方法。如果这个元素不是一个 form，将抛出一个异常。<br><code>element.submit();</code></p>
<h2 id="常用类与方法"><a href="#常用类与方法" class="headerlink" title="常用类与方法"></a>常用类与方法</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver   <span class="comment"># 驱动浏览器</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains   <span class="comment"># 鼠标的相关操作，比如滑动验证</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By   <span class="comment"># 选择器，以什么方式选择标签元素</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys   <span class="comment"># 键盘相关</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC  <span class="comment"># 各种判断，一般跟等待事件连用，比如说等待某个元素加载出来</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait  <span class="comment"># 等待事件，可以与EC连用</span></span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">wait = WebDriverWait(browser, <span class="number">10</span>)</span><br><span class="line">browser.get(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line">browser.maximize_window()  <span class="comment"># 窗口最大化</span></span><br><span class="line">print(browser.current_url)   <span class="comment"># 获取当前页URL</span></span><br><span class="line">print(browser.title)   <span class="comment"># 获取页面的title</span></span><br><span class="line">print(browser.name)  <span class="comment"># 获取driver对象：chrome</span></span><br><span class="line">print(browser.current_window_handle)  <span class="comment"># 获取当前窗口</span></span><br><span class="line">print(browser.get_cookies())   <span class="comment"># 获取cookies</span></span><br><span class="line">print(browser.page_source)   <span class="comment"># 获取当前页面内容</span></span><br><span class="line">browser.back()  <span class="comment"># 后退</span></span><br><span class="line">browser.forward()  <span class="comment"># 前进</span></span><br><span class="line">browser.refresh()    <span class="comment"># 刷新</span></span><br><span class="line">browser.save_screenshot(<span class="string">'error.png'</span>)   <span class="comment"># 保存截图</span></span><br><span class="line">browser.close()   <span class="comment"># 关闭当前窗口</span></span><br><span class="line">browser.quit()   <span class="comment"># 退出浏览器驱动，关闭所有关联窗口</span></span><br></pre></td></tr></table></figure>

<h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver   <span class="comment"># 驱动浏览器</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait  <span class="comment"># 等待事件</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">wait = WebDriverWait(browser, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">browser.get(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line">browser.find_element_by_id(<span class="string">'su'</span>)  <span class="comment"># id选择器</span></span><br><span class="line">browser.find_element_by_class_name(<span class="string">'xx'</span>)  <span class="comment"># 类选择器，1个</span></span><br><span class="line">browser.find_elements_by_class_name(<span class="string">'xx'</span>)  <span class="comment"># 类选择器，多个</span></span><br><span class="line">browser.find_element_by_link_text(<span class="string">'xxx'</span>)  <span class="comment"># 链接文本选择器</span></span><br><span class="line">browser.find_element_by_xpath(<span class="string">'xxxx'</span>)  <span class="comment"># xpath选择器</span></span><br><span class="line">browser.find_element_by_tag_name(<span class="string">'h1'</span>)  <span class="comment"># 标签选择器，获取1个</span></span><br><span class="line">browser.find_elements_by_tag_name(<span class="string">'h1'</span>)  <span class="comment"># 标签选择器，获取多个</span></span><br><span class="line">browser.find_element_by_css_selector(<span class="string">'xxx'</span>)  <span class="comment"># 样式选择器</span></span><br></pre></td></tr></table></figure>

<h3 id="find-element-by-xpath"><a href="#find-element-by-xpath" class="headerlink" title="find_element_by_xpath"></a>find_element_by_xpath</h3><p>测试网页的HTML代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"div1-img1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">src</span>=<span class="string">"http://www.sogou.com/images/logo/new/sogou.png"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">href</span>=<span class="string">"http://www.sogou.com"</span>&gt;</span>sogou image<span class="tag">&lt;/<span class="name">img</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"div1input"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.sogou.com"</span>&gt;</span>搜狗搜索<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"查询"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"div2-img2"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">src</span>=<span class="string">"http://www.baidu.com/img/bdlogo.png"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>baidu image<span class="tag">&lt;/<span class="name">img</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"div2input"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>百度搜索<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"查询"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、绝对路径</span></span><br><span class="line">element = driver.find_element_by_xpath(<span class="string">'/html/body/div/input[@value="查询"]'</span>)</span><br><span class="line"><span class="comment"># 上述xpath定位表达式从html dom树的根节点（html节点）开始逐层查找，最后定位到“查询”按钮节点。路径表达式“/”表示跟节点。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、相对路径</span></span><br><span class="line">element = driver.find_element_by_xpath(<span class="string">'//input[@value='</span>查询<span class="string">']'</span>)</span><br><span class="line"><span class="comment"># 上述xpath定位表达式中//表示从匹配选择的当前节点开始选择文档中的节点，而不考虑特面的位置。input[@value="查询"]表示定位value值为“查询”两个字的input页面元素。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、索引号定位元素</span></span><br><span class="line">element=driver.find_element_by_xpath(<span class="string">"//input[1]"</span>)</span><br><span class="line"><span class="comment"># 索引号定位方式是根据该页面元素在页面中相同标签名之间出现的索引位置来进行定位。上述xpath定位表达式表示查找页面中第二个出现的input元素，即被测试页面上的“查询”按钮。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4、使用页面元素的属性值定位元素</span></span><br><span class="line">img = driver.find_element_by_xpath(<span class="string">"//input[@alt='div1-img1' and @href='http://www.sogou.com']"</span>)</span><br><span class="line"><span class="comment"># 表达式使用了相对路径再结合元素拥有的特定属性方法进行定位，定位元素img的属性是“alt”，值为“div1-img1”，使用@符号指明后面接的是属性，并同属性及属性值一起写到元素后的方括号中。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5、模糊属性值定位元素</span></span><br><span class="line">elements=driver.find_elements_by_xpath(<span class="string">"//img[starts-with(@alt,"</span>div1<span class="string">")]"</span>)</span><br><span class="line"><span class="comment"># 查找属性alt的属性值以div1关键字开始的页面元素</span></span><br><span class="line">elements=driver.find_elements_by_xpath(<span class="string">"//img[contains(@alt,"</span>img<span class="string">")]"</span>)</span><br><span class="line"><span class="comment"># 查找alt属性的属性值包含img关键字的页面元素，只要包含即可，无需考虑位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 6、使用xpath轴定位元素</span></span><br><span class="line">img = driver.find_element_by_xpath(<span class="string">"//img[@alt='div2-img2']/parent::div"</span>)</span><br><span class="line"><span class="comment"># 查找到属性alt的属性值为div2-img2的img元素，并基于该img元素的位置找到它上一级的div页面元素</span></span><br><span class="line"></span><br><span class="line">img = driver.find_element_by_xpath(<span class="string">"//div[@id='div1']/child::img"</span>)</span><br><span class="line"><span class="comment"># 查找到ID属性值为div1的div元素，并基于div的位置找到它下层节点中的img页面元素</span></span><br><span class="line"></span><br><span class="line">//img[@alt=<span class="string">'div2-img2'</span>]/ancestor::div</span><br><span class="line"><span class="comment"># 查找到属性alt的属性值为div2-img2的img元素，并基于该img元素的位置找到它上级的div元素</span></span><br><span class="line"></span><br><span class="line">//div[@name=<span class="string">'div2'</span>]/descendant::img</span><br><span class="line"><span class="comment"># 查找到属性name的属性值为div2的div元素，并基于该元素的位置找到它下级所有节点中的img页面元素</span></span><br><span class="line"></span><br><span class="line">//div[@id=<span class="string">'div1'</span>]/following::img</span><br><span class="line"><span class="comment"># 查找到ID属性值为div1的div页面元素，并基于div的位置找到它后面节点中的img页面元素</span></span><br><span class="line"></span><br><span class="line">//a[@href=<span class="string">'http://www.sogou.com'</span>]/following-sibling::input</span><br><span class="line"><span class="comment"># 查找到链接地址为http：//www.sogou.com的链接页面元素a，并基于链接的位置找到它后续兄弟节点中的input页面元素</span></span><br><span class="line"></span><br><span class="line">//img[@alt=<span class="string">'div2-img2'</span>]/preceding::div</span><br><span class="line"><span class="comment"># 查找到属性alt的属性值为div2-img2的图片页面元素img，并基于图片的位置找到它前面节点中的div页面元素</span></span><br><span class="line"></span><br><span class="line">//input[@value=<span class="string">'查询'</span>]/preceding-sibling::a[<span class="number">1</span>]</span><br><span class="line"><span class="comment"># 查找到value属性值为“查询”的输入框页面元素，并基于该输入框的位置找到他前面同级节点中的第一个链接页面元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 有时候我们会再轴后面加一个星号*， 便是通配符，如：//input[@value="查询"]/preceding::*，它表示查找属性value的值为“查询”的输入框input元素前面所有的同级元素，但不包括input元素本身</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 7、页面元素的文本定位元素</span></span><br><span class="line"><span class="comment"># 通过text()函数可以定位到元素文本包含某些关键内容的页面元素</span></span><br><span class="line">sogou_a=driver.find_element_by_xpath(<span class="string">'//a[text()="搜狗搜索"]'</span>)</span><br><span class="line">sogou_a=driver.find_element_by_xpath(<span class="string">'//a[.="搜狗搜索"]'</span>)</span><br><span class="line"><span class="comment"># 查找文本内容为“搜狗搜索”的链接页面元素，使用的是精准匹配方式，也就是说文本内容必须完全匹配，不能多一个字也不能少一个字。第二个xpath语句中使用了以个点. 这里的点等价于text()，都指代的是当前节点的文本内容</span></span><br><span class="line"></span><br><span class="line">baidu_a=driver.find_element_by_xpath(<span class="string">'//a[contains(.,"百度")]'</span>)</span><br><span class="line">baidu_a=driver.find_element_by_xpath(<span class="string">'//a[contains(text(),'</span>百度<span class="string">')]'</span>)</span><br><span class="line"><span class="comment"># 查找文本内容包含“百度”关键字的链接页面元素，使用的是模糊匹配方式，即可以根据部分文本关键字进行匹配</span></span><br><span class="line"></span><br><span class="line">div=driver.find_element_by_xpath(<span class="string">'//a[contains(text(),"百度")]/preceding::div'</span>)</span><br><span class="line">div=driver.find_element_by_xpath(<span class="string">'//a[contains(. , "百度")]/..'</span>)</span><br><span class="line"><span class="comment"># 查找文本内容包含“百度”关键字的链接页面元素a的上层父元素div，6最后使用了两个点。。，它表示选取当前节点的父节点，等价于preceding::div。</span></span><br></pre></td></tr></table></figure>

<h2 id="执行JavaScript"><a href="#执行JavaScript" class="headerlink" title="执行JavaScript"></a>执行JavaScript</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver  <span class="comment"># 驱动浏览器</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">browser.get(<span class="string">'https://www.zhihu.com/explore'</span>)</span><br><span class="line">browser.execute_script(<span class="string">'alert("xxoo")'</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>爬虫</tag>
        <tag>Python</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>HttpWeb</title>
    <url>/HttpWeb.html</url>
    <content><![CDATA[<center>写在前面</center>

<a id="more"></a>

<h2 id="HttpWebRequest"><a href="#HttpWebRequest" class="headerlink" title="HttpWebRequest"></a>HttpWebRequest</h2><p>命名空间： System.Net，这是.NET创建者最初开发用于使用HTTP请求的标准类<br>使用HttpWebRequest可以让开发者控制请求/响应流程的各个方面，如 timeouts, cookies, headers, protocols<br>另一个好处是HttpWebRequest类不会阻塞UI线程,例如，当从响应很慢的API服务器下载大文件时，您的应用程序的UI不会停止响应<br>HttpWebRequest通常和WebResponse一起使用，一个发送请求，一个获取数据<br>HttpWebRquest更为底层一些，能够对整个访问过程有个直观的认识，但同时也更加复杂一些</p>
<h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠属性</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">Accept <span class="comment">//获取或设置 Accept HTTP 标头的值。</span></span><br><span class="line">Address <span class="comment">//获取实际响应请求的 Internet 资源的统一资源标识符 (URI)。</span></span><br><span class="line">AllowAutoRedirect <span class="comment">//获取或设置一个值，该值指示请求是否应跟随重定向响应。</span></span><br><span class="line">AllowReadStreamBuffering <span class="comment">//获取或设置一个值，该值指示是否对从 Internet 资源接收的数据进行缓冲处理。</span></span><br><span class="line">AllowWriteStreamBuffering <span class="comment">//获取或设置一个值，该值指示是否对发送到 Internet 资源的数据进行缓冲处理。</span></span><br><span class="line">AuthenticationLevel <span class="comment">//获取或设置用于此请求的身份验证和模拟的级别。(继承自 WebRequest)</span></span><br><span class="line">AutomaticDecompression <span class="comment">//获取或设置所使用的解压缩类型。</span></span><br><span class="line">CachePolicy <span class="comment">//获取或设置此请求的缓存策略。(继承自 WebRequest)</span></span><br><span class="line">ClientCertificates <span class="comment">//获取或设置与此请求关联的安全证书集合。</span></span><br><span class="line">Connection <span class="comment">//获取或设置 Connection HTTP 标头的值。</span></span><br><span class="line">ConnectionGroupName <span class="comment">//获取或设置请求的连接组的名称。</span></span><br><span class="line">ContentLength <span class="comment">//获取或设置 Content-length HTTP 标头。</span></span><br><span class="line">ContentType <span class="comment">//获取或设置 Content-type HTTP 标头的值。</span></span><br><span class="line">ContinueDelegate <span class="comment">//获取或设置当从 Internet 资源接收到 HTTP 100-continue 响应时调用的委托方法。</span></span><br><span class="line">ContinueTimeout <span class="comment">//获取或设置在接收到来自服务器的 100-Continue 之前要等待的超时（以毫秒为单位）。</span></span><br><span class="line">CookieContainer <span class="comment">//获取或设置与请求关联的 Cookie。</span></span><br><span class="line">CreatorInstance <span class="comment">//当在子类中重写时，获取从 IWebRequestCreate 类派生的工厂对象，该类用于创建为生成对指定 URI 的请求而实例化的 WebRequest。(继承自 WebRequest)</span></span><br><span class="line">Credentials <span class="comment">//获取或设置请求的身份验证信息。</span></span><br><span class="line">Date <span class="comment">//获取或设置要在 HTTP 请求中使用的 Date HTTP 标头值。</span></span><br><span class="line">DefaultCachePolicy <span class="comment">//获取或设置此请求的默认缓存策略。</span></span><br><span class="line">DefaultMaximumErrorResponseLength <span class="comment">//获取或设置 HTTP 错误响应的默认最大长度。</span></span><br><span class="line">DefaultMaximumResponseHeadersLength <span class="comment">//获取或设置 MaximumResponseHeadersLength 属性的默认值。</span></span><br><span class="line">Expect <span class="comment">//获取或设置 Expect HTTP 标头的值。</span></span><br><span class="line">HaveResponse <span class="comment">//获取一个值，该值指示是否收到了来自 Internet 资源的响应。</span></span><br><span class="line">Headers <span class="comment">//指定构成 HTTP 标头的名称/值对的集合。</span></span><br><span class="line">Host <span class="comment">//获取或设置要在 HTTP 请求中独立于请求 URI 使用的 Host 标头值。</span></span><br><span class="line">IfModifiedSince <span class="comment">//获取或设置 If-Modified-Since HTTP 标头的值。</span></span><br><span class="line">ImpersonationLevel <span class="comment">//获取或设置当前请求的模拟级别。(继承自 WebRequest)</span></span><br><span class="line">KeepAlive <span class="comment">//获取或设置一个值，该值指示是否与 Internet 资源建立持续型连接。</span></span><br><span class="line">MaximumAutomaticRedirections <span class="comment">//获取或设置请求将跟随的重定向的最大数目。</span></span><br><span class="line">MaximumResponseHeadersLength <span class="comment">//获取或设置响应标头允许的最大长度。</span></span><br><span class="line">MediaType <span class="comment">//获取或设置请求的媒体类型。</span></span><br><span class="line">Method <span class="comment">//获取或设置请求的方法。</span></span><br><span class="line">Pipelined <span class="comment">//获取或设置一个值，该值指示是否通过管线将请求传输到 Internet 资源。</span></span><br><span class="line">PreAuthenticate <span class="comment">//获取或设置一个值，该值指示是否随请求发送一个 Authorization 标头。</span></span><br><span class="line">ProtocolVersion <span class="comment">//获取或设置用于请求的 HTTP 版本。</span></span><br><span class="line">Proxy <span class="comment">//获取或设置请求的代理信息。</span></span><br><span class="line">ReadWriteTimeout <span class="comment">//获取或设置写入或读取流时的超时（以毫秒为单位）。</span></span><br><span class="line">Referer <span class="comment">//获取或设置 Referer HTTP 标头的值。</span></span><br><span class="line">RequestUri <span class="comment">//获取请求的原始统一资源标识符 (URI)。</span></span><br><span class="line">SendChunked <span class="comment">//获取或设置一个值，该值指示是否将数据分段发送到 Internet 资源。</span></span><br><span class="line">ServerCertificateValidationCallback <span class="comment">//获取或设置用于验证服务器证书的回调函数。</span></span><br><span class="line">ServicePoint <span class="comment">//获取用于请求的服务点。</span></span><br><span class="line">SupportsCookieContainer <span class="comment">//获取指示请求是否为 CookieContainer 提供支持的值。</span></span><br><span class="line">Timeout <span class="comment">//获取或设置 GetResponse() 和 GetRequestStream() 方法的超时值（以毫秒为单位）。</span></span><br><span class="line">TransferEncoding <span class="comment">//获取或设置 Transfer-encoding HTTP 标头的值。</span></span><br><span class="line">UnsafeAuthenticatedConnectionSharing <span class="comment">//获取或设置一个值，该值指示是否允许经过高速 NTLM 身份验证的连接共享。</span></span><br><span class="line">UseDefaultCredentials <span class="comment">//获取或设置一个 Boolean 值，该值控制是否随请求一起发送默认凭据。</span></span><br><span class="line">UserAgent <span class="comment">//获取或设置 User-agent HTTP 标头的值。</span></span><br></pre></td></tr></table></figure>

</div></div>
<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠方法</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">Abort() <span class="comment">//取消向 Internet 资源发出的请求。</span></span><br><span class="line">AddRange(Int32) <span class="comment">//向请求添加从请求数据的开始处或结束处的特定范围的字节范围标头。</span></span><br><span class="line">AddRange(Int32, Int32) <span class="comment">//向请求添加指定范围的字节范围标头。</span></span><br><span class="line">AddRange(Int64) <span class="comment">//向请求添加从请求数据的开始处或结束处的特定范围的字节范围标头。</span></span><br><span class="line">AddRange(Int64, Int64) <span class="comment">//向请求添加指定范围的字节范围标头。</span></span><br><span class="line">AddRange(String, Int32) <span class="comment">//向请求添加从请求数据的开始处或结束处计算的特定范围的 Range 标头。</span></span><br><span class="line">AddRange(String, Int32, Int32) <span class="comment">//向请求添加指定范围的范围标头。</span></span><br><span class="line">AddRange(String, Int64) <span class="comment">//向请求添加从请求数据的开始处或结束处计算的特定范围的 Range 标头。</span></span><br><span class="line">AddRange(String, Int64, Int64) <span class="comment">//向请求添加指定范围的范围标头。</span></span><br><span class="line">BeginGetRequestStream(AsyncCallback, Object) <span class="comment">//开始对用于写入数据的 Stream 对象执行异步请求。</span></span><br><span class="line">BeginGetResponse(AsyncCallback, Object) <span class="comment">//开始对 Internet 资源的异步请求。</span></span><br><span class="line">CreateObjRef(Type) <span class="comment">//创建一个对象，该对象包含生成用于与远程对象进行通信的代理所需的全部相关信息。(继承自 MarshalByRefObject)</span></span><br><span class="line">EndGetRequestStream(IAsyncResult) <span class="comment">//结束对用来写入数据的 Stream 对象的异步请求。</span></span><br><span class="line">EndGetRequestStream(IAsyncResult, TransportContext) <span class="comment">//结束对用于写入数据的 Stream 对象的异步请求，并输出与该流关联的 TransportContext。</span></span><br><span class="line">EndGetResponse(IAsyncResult) <span class="comment">//结束对 Internet 资源的异步请求。</span></span><br><span class="line">Equals(Object) <span class="comment">//确定指定的对象是否等于当前对象。(继承自 Object)</span></span><br><span class="line">GetHashCode() <span class="comment">//作为默认哈希函数。(继承自 Object)</span></span><br><span class="line">GetLifetimeService() <span class="comment">//检索控制此实例的生存期策略的当前生存期服务对象。(继承自 MarshalByRefObject)</span></span><br><span class="line">GetObjectData(SerializationInfo, StreamingContext) <span class="comment">//使用序列化目标对象时所需的数据填充 SerializationInfo。</span></span><br><span class="line">GetRequestStream() <span class="comment">//获取用于写入请求数据的 Stream 对象。</span></span><br><span class="line">GetRequestStream(TransportContext) <span class="comment">//获取用于写入请求数据的 Stream 对象，并输出与流关联的 TransportContext。</span></span><br><span class="line">GetRequestStreamAsync()<span class="comment">//当在子类中被重写时，将用于写入数据的 Stream 作为异步操作返回到 Internet 资源。(继承自 WebRequest)</span></span><br><span class="line">GetResponse()<span class="comment">//返回来自 Internet 资源的响应。</span></span><br><span class="line">GetResponseAsync()<span class="comment">//当在子代类中被重写时，将作为异步操作返回对 Internet 请求的响应。(继承自 WebRequest)</span></span><br><span class="line">GetType()<span class="comment">//获取当前实例的 Type。(继承自 Object)</span></span><br><span class="line">InitializeLifetimeService()<span class="comment">//获取生存期服务对象来控制此实例的生存期策略。(继承自 MarshalByRefObject)</span></span><br><span class="line">MemberwiseClone()<span class="comment">//创建当前 Object 的浅表副本。(继承自 Object)</span></span><br><span class="line">MemberwiseClone(Boolean)<span class="comment">//创建当前 MarshalByRefObject 对象的浅表副本。(继承自 MarshalByRefObject)</span></span><br><span class="line">ToString()<span class="comment">//返回表示当前对象的字符串。(继承自 Object)</span></span><br></pre></td></tr></table></figure>

</div></div>

<h3 id="Post-amp-Get"><a href="#Post-amp-Get" class="headerlink" title="Post&amp;Get"></a>Post&amp;Get</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//POST方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">HttpPost</span>(<span class="params"><span class="keyword">string</span> Url, <span class="keyword">string</span> postDataStr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(Url);</span><br><span class="line">    request.Method = <span class="string">"POST"</span>;</span><br><span class="line">    request.ContentType = <span class="string">"application/x-www-form-urlencoded"</span>;</span><br><span class="line">    Encoding encoding = Encoding.UTF8;</span><br><span class="line">    <span class="keyword">byte</span>[] postData = encoding.GetBytes(postDataStr);</span><br><span class="line">    request.ContentLength = postData.Length;</span><br><span class="line">    Stream myRequestStream = request.GetRequestStream();</span><br><span class="line">    myRequestStream.Write(postData, <span class="number">0</span>, postData.Length);</span><br><span class="line">    myRequestStream.Close();</span><br><span class="line"></span><br><span class="line">    HttpWebResponse response = (HttpWebResponse)request.GetResponse();</span><br><span class="line">    Stream myResponseStream = response.GetResponseStream();</span><br><span class="line">    StreamReader myStreamReader = <span class="keyword">new</span> StreamReader(myResponseStream, encoding);</span><br><span class="line">    <span class="keyword">string</span> retString = myStreamReader.ReadToEnd();</span><br><span class="line">    myStreamReader.Close();</span><br><span class="line">    myResponseStream.Close();</span><br><span class="line">    <span class="keyword">if</span> (response != <span class="literal">null</span>)</span><br><span class="line">        response.Close();</span><br><span class="line">    <span class="keyword">if</span> (request != <span class="literal">null</span>)</span><br><span class="line">        request.Abort();</span><br><span class="line">    <span class="keyword">return</span> retString;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">Post</span>(<span class="params"><span class="keyword">string</span> Url, <span class="keyword">string</span> Data, <span class="keyword">string</span> Referer</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(Url);</span><br><span class="line">    request.Method = <span class="string">"POST"</span>;</span><br><span class="line">    request.Referer = Referer;</span><br><span class="line">    <span class="keyword">byte</span>[] bytes = Encoding.UTF8.GetBytes(Data);</span><br><span class="line">    request.ContentType = <span class="string">"application/x-www-form-urlencoded"</span>;</span><br><span class="line">    request.ContentLength = bytes.Length;</span><br><span class="line">    Stream myResponseStream = request.GetRequestStream();</span><br><span class="line">    myResponseStream.Write(bytes, <span class="number">0</span>, bytes.Length);</span><br><span class="line"></span><br><span class="line">    HttpWebResponse response = (HttpWebResponse)request.GetResponse();</span><br><span class="line">    StreamReader myStreamReader = <span class="keyword">new</span> StreamReader(response.GetResponseStream(), Encoding.UTF8);</span><br><span class="line">    <span class="keyword">string</span> retString = myStreamReader.ReadToEnd();</span><br><span class="line"></span><br><span class="line">    myStreamReader.Close();</span><br><span class="line">    myResponseStream.Close();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (response != <span class="literal">null</span>)</span><br><span class="line">        response.Close();</span><br><span class="line">    <span class="keyword">if</span> (request != <span class="literal">null</span>)</span><br><span class="line">        request.Abort();</span><br><span class="line">    <span class="keyword">return</span> retString;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//GET方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">HttpGet</span>(<span class="params"><span class="keyword">string</span> Url, <span class="keyword">string</span> postDataStr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(Url + (postDataStr == <span class="string">""</span> ? <span class="string">""</span> : <span class="string">"?"</span>) + postDataStr);</span><br><span class="line">    request.Proxy = <span class="literal">null</span>;</span><br><span class="line">    request.KeepAlive = <span class="literal">false</span>;</span><br><span class="line">    request.Method = <span class="string">"GET"</span>;</span><br><span class="line">    <span class="comment">//request.ContentType = "text/html;charset=UTF-8";</span></span><br><span class="line">    request.ContentType = <span class="string">"application/json; charset=UTF-8"</span>;</span><br><span class="line"></span><br><span class="line">    HttpWebResponse response = (HttpWebResponse)request.GetResponse();</span><br><span class="line">    Stream myResponseStream = response.GetResponseStream();</span><br><span class="line">    <span class="comment">//StreamReader myStreamReader = new StreamReader(myResponseStream, Encoding.GetEncoding("utf-8"));</span></span><br><span class="line">    StreamReader myStreamReader = <span class="keyword">new</span> StreamReader(myResponseStream, Encoding.UTF8);</span><br><span class="line">    <span class="keyword">string</span> retString = myStreamReader.ReadToEnd();</span><br><span class="line"></span><br><span class="line">    myStreamReader.Close();</span><br><span class="line">    myResponseStream.Close();</span><br><span class="line">    <span class="keyword">if</span> (response != <span class="literal">null</span>)</span><br><span class="line">        response.Close();</span><br><span class="line">    <span class="keyword">if</span> (request != <span class="literal">null</span>)</span><br><span class="line">        request.Abort();</span><br><span class="line">    <span class="keyword">return</span> retString;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>

<h2 id="HttpClient"><a href="#HttpClient" class="headerlink" title="HttpClient"></a>HttpClient</h2><p>HttpClient是.NET4.5引入的一个HTTP客户端库，其命名空间为 System.Net.Http ，.NET 4.5之前我们可能使用WebClient和HttpWebRequest来达到相同目的<br>HttpClient利用了最新的面向任务模式，使得处理异步请求非常容易<br>它适合用于多次请求操作，一般设置好默认头部后，可以进行重复多次的请求，基本上用一个实例可以提交任何的HTTP请求<br>HttpClient有预热机制，第一次进行访问时比较慢，所以不应该用到HttpClient就new一个出来，应该使用单例或其他方式获取HttpClient的实例</p>
<h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠构造函数</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">HttpClient() <span class="comment">//使用释放此实例时释放的 HttpClientHandler 初始化 HttpClient 类的新实例。</span></span><br><span class="line">HttpClient(HttpMessageHandler) <span class="comment">//使用指定的处理程序初始化 HttpClient 类的新实例。 处理程序在释放此实例时被释放。</span></span><br><span class="line">HttpClient(HttpMessageHandler, Boolean) <span class="comment">//使用提供的处理程序初始化 HttpClient 类的新实例，并指定在释放此实例时是否应释放该处理程序。</span></span><br></pre></td></tr></table></figure>

</div></div>
<h3 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠属性</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">BaseAddress<span class="comment">//获取或设置用于发送请求的 Internet 资源的统一资源标识符 (URI) 的基址。</span></span><br><span class="line">DefaultProxy<span class="comment">//获取或设置全局 HTTP 代理。</span></span><br><span class="line">DefaultRequestHeaders<span class="comment">//获取应与每个请求一起发送的标头。</span></span><br><span class="line">DefaultRequestVersion<span class="comment">//获取或设置对此 HttpClient 实例发出的后续请求使用的默认 HTTP 版本。</span></span><br><span class="line">MaxResponseContentBufferSize<span class="comment">//获取或设置要在读取响应内容时缓冲的最大字节数。</span></span><br><span class="line">Timeout<span class="comment">//获取或设置请求超时前等待的时间跨度。</span></span><br></pre></td></tr></table></figure>

</div></div>

<h3 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠方法</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">CancelPendingRequests()<span class="comment">//取消该实例上的所有挂起的请求。</span></span><br><span class="line">DeleteAsync(String)<span class="comment">//以异步操作将 DELETE 请求发送给指定 URI。</span></span><br><span class="line">DeleteAsync(String, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 DELETE 请求到指定的 URI。</span></span><br><span class="line">DeleteAsync(Uri)<span class="comment">//以异步操作将 DELETE 请求发送给指定 URI。</span></span><br><span class="line">DeleteAsync(Uri, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 DELETE 请求到指定的 URI。</span></span><br><span class="line">Dispose()<span class="comment">//释放由 HttpMessageInvoker 使用的非托管资源和托管资源。(继承自 HttpMessageInvoker)</span></span><br><span class="line">Dispose(Boolean)<span class="comment">//释放由 HttpClient 使用的非托管资源，并可根据需要释放托管资源。</span></span><br><span class="line">Equals(Object)<span class="comment">//确定指定的对象是否等于当前对象。(继承自 Object)</span></span><br><span class="line">GetAsync(String)<span class="comment">//以异步操作将 GET 请求发送给指定 URI。</span></span><br><span class="line">GetAsync(String, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 GET 请求到指定的 URI。</span></span><br><span class="line">GetAsync(String, HttpCompletionOption)<span class="comment">//用以异步操作的 HTTP 完成选项发送 GET 请求到指定的 URI。</span></span><br><span class="line">GetAsync(String, HttpCompletionOption, CancellationToken)<span class="comment">//用以异步操作的 HTTP 完成选项和取消标记发送 GET 请求到指定的 URI。</span></span><br><span class="line">GetAsync(Uri)<span class="comment">//以异步操作将 GET 请求发送给指定 URI。</span></span><br><span class="line">GetAsync(Uri, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 GET 请求到指定的 URI。</span></span><br><span class="line">GetAsync(Uri, HttpCompletionOption)<span class="comment">//用以异步操作的 HTTP 完成选项发送 GET 请求到指定的 URI。</span></span><br><span class="line">GetAsync(Uri, HttpCompletionOption, CancellationToken)<span class="comment">//用以异步操作的 HTTP 完成选项和取消标记发送 GET 请求到指定的 URI。</span></span><br><span class="line">GetByteArrayAsync(String)<span class="comment">//将 GET 请求发送到指定 URI 并在异步操作中以字节数组的形式返回响应正文。</span></span><br><span class="line">GetByteArrayAsync(Uri)<span class="comment">//将 GET 请求发送到指定 URI 并在异步操作中以字节数组的形式返回响应正文。</span></span><br><span class="line">GetHashCode()<span class="comment">//作为默认哈希函数。(继承自 Object)</span></span><br><span class="line">GetStreamAsync(String)<span class="comment">//将 GET 请求发送到指定 URI 并在异步操作中以流的形式返回响应正文。</span></span><br><span class="line">GetStreamAsync(Uri)<span class="comment">//将 GET 请求发送到指定 URI 并在异步操作中以流的形式返回响应正文。</span></span><br><span class="line">GetStringAsync(String)<span class="comment">//将 GET 请求发送到指定 URI 并在异步操作中以字符串的形式返回响应正文。</span></span><br><span class="line">GetStringAsync(Uri)<span class="comment">//将 GET 请求发送到指定 URI 并在异步操作中以字符串的形式返回响应正文。</span></span><br><span class="line">GetType()<span class="comment">//获取当前实例的 Type。(继承自 Object)</span></span><br><span class="line">MemberwiseClone()<span class="comment">//创建当前 Object 的浅表副本。(继承自 Object)</span></span><br><span class="line">PatchAsync(String, HttpContent)<span class="comment">//以异步操作方式将 PATCH 请求发送到指定为字符串的 URI。</span></span><br><span class="line">PatchAsync(String, HttpContent, CancellationToken)<span class="comment">//以异步操作方式将带有取消令牌的 PATCH 请求发送到表示为字符串的 URI。</span></span><br><span class="line">PatchAsync(Uri, HttpContent)<span class="comment">//以异步操作方式发送 PATCH 请求。</span></span><br><span class="line">PatchAsync(Uri, HttpContent, CancellationToken)<span class="comment">//以异步操作方式发送带有取消令牌的 PATCH 请求。</span></span><br><span class="line">PostAsync(String, HttpContent)<span class="comment">//以异步操作将 POST 请求发送给指定 URI。</span></span><br><span class="line">PostAsync(String, HttpContent, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 POST 请求。</span></span><br><span class="line">PostAsync(Uri, HttpContent)<span class="comment">//以异步操作将 POST 请求发送给指定 URI。</span></span><br><span class="line">PostAsync(Uri, HttpContent, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 POST 请求。</span></span><br><span class="line">PutAsync(String, HttpContent)<span class="comment">//以异步操作将 PUT 请求发送给指定 URI。</span></span><br><span class="line">PutAsync(String, HttpContent, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 PUT 请求。</span></span><br><span class="line">PutAsync(Uri, HttpContent)<span class="comment">//以异步操作将 PUT 请求发送给指定 URI。</span></span><br><span class="line">PutAsync(Uri, HttpContent, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 PUT 请求。</span></span><br><span class="line">SendAsync(HttpRequestMessage)<span class="comment">//以异步操作发送 HTTP 请求。</span></span><br><span class="line">SendAsync(HttpRequestMessage, CancellationToken)<span class="comment">//以异步操作发送 HTTP 请求。</span></span><br><span class="line">SendAsync(HttpRequestMessage, HttpCompletionOption)<span class="comment">//以异步操作发送 HTTP 请求。</span></span><br><span class="line">SendAsync(HttpRequestMessage, HttpCompletionOption, CancellationToken)<span class="comment">//以异步操作发送 HTTP 请求。</span></span><br><span class="line">ToString()<span class="comment">//返回表示当前对象的字符串。(继承自 Object)</span></span><br></pre></td></tr></table></figure>

</div></div>
<h3 id="单例模式（Singleton-Pattern）"><a href="#单例模式（Singleton-Pattern）" class="headerlink" title="单例模式（Singleton Pattern）"></a>单例模式（Singleton Pattern）</h3><p>这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式</p>
<h3 id="懒汉模式"><a href="#懒汉模式" class="headerlink" title="懒汉模式"></a>懒汉模式</h3><p>默认不会实例化，什么时候用什么时候new</p>
<h3 id="饿汉模式"><a href="#饿汉模式" class="headerlink" title="饿汉模式"></a>饿汉模式</h3><p>类初始化时,会立即加载该对象，线程天生安全,调用效率高</p>
<h3 id="双检锁-双重校验锁（DCL，即-double-checked-locking）"><a href="#双检锁-双重校验锁（DCL，即-double-checked-locking）" class="headerlink" title="双检锁/双重校验锁（DCL，即 double-checked locking）"></a>双检锁/双重校验锁（DCL，即 double-checked locking）</h3><p>这种方式采用双锁机制，安全且在多线程情况下能保持高性能</p>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold">
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HttpClientHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="keyword">object</span> LockObj = <span class="keyword">new</span> <span class="keyword">object</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HttpClient client = <span class="literal">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HttpClientHelper</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        GetInstance();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HttpClient <span class="title">GetInstance</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (client == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">lock</span> (LockObj)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (client == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;<span class="keyword">string</span>&gt; <span class="title">PostAsync</span>(<span class="params"><span class="keyword">string</span> url, <span class="keyword">string</span> strJson</span>)<span class="comment">//post异步请求方法</span></span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            HttpContent content = <span class="keyword">new</span> StringContent(strJson);</span><br><span class="line">            content.Headers.ContentType = <span class="keyword">new</span> System.Net.Http.Headers.MediaTypeHeaderValue(<span class="string">"application/json"</span>);</span><br><span class="line">            <span class="comment">//由HttpClient发出异步Post请求</span></span><br><span class="line">            HttpResponseMessage res = <span class="keyword">await</span> client.PostAsync(url, content);</span><br><span class="line">            <span class="keyword">if</span> (res.StatusCode == System.Net.HttpStatusCode.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span> str = res.Content.ReadAsStringAsync().Result;</span><br><span class="line">                <span class="keyword">return</span> str;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">Post</span>(<span class="params"><span class="keyword">string</span> url, <span class="keyword">string</span> strJson</span>)<span class="comment">//post同步请求方法</span></span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">           <span class="comment">// private static HttpClient client = new HttpClient();</span></span><br><span class="line">           <span class="comment">//client.DefaultRequestHeaders.Accept.TryParseAdd("application/json");</span></span><br><span class="line">            HttpContent content = <span class="keyword">new</span> StringContent(strJson);</span><br><span class="line">            content.Headers.ContentType = <span class="keyword">new</span> System.Net.Http.Headers.MediaTypeHeaderValue(<span class="string">"application/json"</span>);</span><br><span class="line">            <span class="comment">//client.DefaultRequestHeaders.Connection.Add("keep-alive");</span></span><br><span class="line">            <span class="comment">//由HttpClient发出Post请求</span></span><br><span class="line">            Task&lt;HttpResponseMessage&gt; res = client.PostAsync(url, content);</span><br><span class="line">            <span class="keyword">if</span> (res.Result.StatusCode == System.Net.HttpStatusCode.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span> str = res.Result.Content.ReadAsStringAsync().Result;</span><br><span class="line">                <span class="keyword">return</span> str;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">Get</span>(<span class="params"><span class="keyword">string</span> url</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">           <span class="comment">// private static HttpClient client = new HttpClient();</span></span><br><span class="line">           <span class="comment">//client.DefaultRequestHeaders.Accept.TryParseAdd("application/json");</span></span><br><span class="line">            <span class="keyword">var</span> responseString = client.GetStringAsync(url);</span><br><span class="line">            <span class="keyword">return</span> responseString.Result;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</div></div>
]]></content>
  </entry>
  <entry>
    <title>Markdown语法说明</title>
    <url>/Markdown%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E.html</url>
    <content><![CDATA[<center>写在前面</center>
[参考](https://www.appinn.com/markdown/)
<a id="more"></a>

<h2 id="区块元素"><a href="#区块元素" class="headerlink" title="区块元素"></a>区块元素</h2><h3 id="段落和换行"><a href="#段落和换行" class="headerlink" title="段落和换行"></a>段落和换行</h3><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p>
<p>「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成 ``标签。</p>
<p>如果你确实想要依赖 Markdown 来插入 ``标签的话，在插入处先按入两个以上的空格然后回车。</p>
<p>的确，需要多费点事（多加空格）来产生 ，但是简单地「每个换行都转换为」的方法在 Markdown 中并不适合， Markdown 中 email 式的 区块引用 和多段落的 列表 在使用换行来排版的时候，不但更好用，还更方便阅读。</p>
<h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。</p>
<p>类 Setext 形式是用底线的形式，利用 = （最高阶标题）和 - （第二阶标题），例如：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">This is an H1</span><br><span class="line">=============</span><br><span class="line">​</span><br><span class="line">This is an H2</span><br><span class="line">-------------</span><br></pre></td></tr></table></figure>

<p>任何数量的 = 和 - 都可以有效果。</p>
<p>类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，例如：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 这是 H1</span></span><br><span class="line">​</span><br><span class="line"><span class="section">## 这是 H2</span></span><br><span class="line">​</span><br><span class="line"><span class="section">###### 这是 H6</span></span><br></pre></td></tr></table></figure>

<p>你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 #，而行尾的 # 数量也不用和开头一样（行首的井字符数量决定标题的阶数）：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 这是 H1 #</span></span><br><span class="line">​</span><br><span class="line"><span class="section">## 这是 H2 ##</span></span><br><span class="line">​</span><br><span class="line"><span class="section">### 这是 H3 ######</span></span><br></pre></td></tr></table></figure>

<h3 id="区块引用-Blockquotes"><a href="#区块引用-Blockquotes" class="headerlink" title="区块引用 Blockquotes"></a>区块引用 Blockquotes</h3><p>Markdown 标记区块引用是使用类似 email 中用 &gt; 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 &gt; ：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">&gt; </span><br><span class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class="line">&gt; id sem consectetuer libero luctus adipiscing.</span><br><span class="line">Markdown 也允许你偷懒只在整个段落的第一行最前面加上 &gt; ：</span><br><span class="line"></span><br><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">​</span><br><span class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class="line">id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure>

<p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; This is the first level of quoting.</span><br><span class="line">&gt;</span><br><span class="line">&gt; &gt; This is nested blockquote.</span><br><span class="line">&gt;</span><br><span class="line">&gt; Back to the first level.</span><br></pre></td></tr></table></figure>

<p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; ## 这是一个标题。</span><br><span class="line">&gt; </span><br><span class="line">&gt; 1.   这是第一行列表项。</span><br><span class="line">&gt; 2.   这是第二行列表项。</span><br><span class="line">&gt; </span><br><span class="line">&gt; 给出一些例子代码：</span><br><span class="line">&gt; </span><br><span class="line">&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</span><br></pre></td></tr></table></figure>

<p>任何像样的文本编辑器都能轻松地建立 email 型的引用。例如在 BBEdit 中，你可以选取文字后然后从选单中选择增加引用阶层。</p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>Markdown 支持有序列表和无序列表。</p>
<p>无序列表使用星号、加号或是减号作为列表标记：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*   Red</span><br><span class="line">*   Green</span><br><span class="line">*   Blue</span><br></pre></td></tr></table></figure>

<p>等同于：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+   Red</span><br><span class="line">+   Green</span><br><span class="line">+   Blue</span><br></pre></td></tr></table></figure>

<p>也等同于：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-   Red</span><br><span class="line">-   Green</span><br><span class="line">-   Blue</span><br></pre></td></tr></table></figure>

<p>有序列表则使用数字接着一个英文句点：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.  Bird</span><br><span class="line">2.  McHale</span><br><span class="line">3.  Parish</span><br></pre></td></tr></table></figure>

<p>很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;ol&gt;</span><br><span class="line">&lt;li&gt;Bird&lt;/li&gt;</span><br><span class="line">&lt;li&gt;McHale&lt;/li&gt;</span><br><span class="line">&lt;li&gt;Parish&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure>

<p>如果你的列表标记写成：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.  Bird</span><br><span class="line">1.  McHale</span><br><span class="line">1.  Parish</span><br></pre></td></tr></table></figure>

<p>或甚至是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3. Bird</span><br><span class="line">1. McHale</span><br><span class="line">8. Parish</span><br></pre></td></tr></table></figure>

<p>你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。</p>
<p>如果你使用懒惰的写法，建议第一个项目最好还是从 1. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。</p>
<p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p>
<p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span><br><span class="line">    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">    viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br><span class="line">    Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure>

<p>但是如果你懒，那也行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span><br><span class="line">Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br><span class="line">Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure>

<p>如果列表项目间用空行分开，在输出 HTML 时 Markdown 就会将项目内容用 `` 标签包起来，举例来说：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*   Bird</span><br><span class="line">*   Magic</span><br></pre></td></tr></table></figure>

<p>会被转换为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;Bird&lt;/li&gt;</span><br><span class="line">&lt;li&gt;Magic&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>

<p>但是这个：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*   Bird</span><br><span class="line">​</span><br><span class="line">*   Magic</span><br></pre></td></tr></table></figure>

<p>会被转换为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>

<p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.  This is a list item with two paragraphs. Lorem ipsum dolor</span><br><span class="line">    sit amet, consectetuer adipiscing elit. Aliquam hendrerit</span><br><span class="line">    mi posuere lectus.</span><br><span class="line">​</span><br><span class="line">    Vestibulum enim wisi, viverra nec, fringilla in, laoreet</span><br><span class="line">    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum</span><br><span class="line">    sit amet velit.</span><br><span class="line"></span><br><span class="line">2.  Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure>

<p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*   This is a list item with two paragraphs.</span><br><span class="line">​</span><br><span class="line">    This is the second paragraph in the list item. You&apos;re</span><br><span class="line">only required to indent the first line. Lorem ipsum dolor</span><br><span class="line">sit amet, consectetuer adipiscing elit.</span><br><span class="line">​</span><br><span class="line">*   Another item in the same list.</span><br></pre></td></tr></table></figure>

<p>如果要在列表项目内放进引用，那 &gt; 就需要缩进：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*   A list item with a blockquote:</span><br><span class="line">​</span><br><span class="line">    &gt; This is a blockquote</span><br><span class="line">    &gt; inside a list item.</span><br></pre></td></tr></table></figure>

<p>如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*   一列表项包含一个列表区块：</span><br><span class="line">​</span><br><span class="line">        &lt;代码写在这&gt;</span><br></pre></td></tr></table></figure>

<p>当然，项目列表很可能会不小心产生，像是下面这样的写法：</p>
<p><code>1986. What a great season.</code></p>
<p>换句话说，也就是在行首出现数字-句点-空白，要避免这样的状况，你可以在句点前面加上反斜杠。</p>
<p><code>1986\. What a great season.</code></p>
<h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 和 标签来把代码区块包起来。</p>
<p>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：</p>
<p>这是一个普通段落：<br>​<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这是一个代码区块。</span><br></pre></td></tr></table></figure></p>
<p>Markdown 会转换成：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;这是一个普通段落：&lt;/p&gt;</span><br><span class="line">​</span><br><span class="line">&lt;pre&gt;&lt;code&gt;这是一个代码区块。</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure>

<p>这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Here is an example of AppleScript:</span><br><span class="line">​</span><br><span class="line">    tell application &quot;Foo&quot;</span><br><span class="line">        beep</span><br><span class="line">    end tell</span><br></pre></td></tr></table></figure>

<p>会被转换为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;</span><br><span class="line">​</span><br><span class="line">&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;</span><br><span class="line">    beep</span><br><span class="line">end tell</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure>

<p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p>
<p>在代码区块里面， &amp; 、 &lt; 和 &gt; 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">    &amp;copy; 2004 Foo Corporation</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>会被转换为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;</span><br><span class="line">    &amp;amp;copy; 2004 Foo Corporation</span><br><span class="line">&amp;lt;/div&amp;gt;</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure>

<p>代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。</p>
<p>分隔线<br>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* * *</span><br><span class="line">​</span><br><span class="line">***</span><br><span class="line">​</span><br><span class="line">*****</span><br><span class="line">​</span><br><span class="line">- - -</span><br><span class="line">​</span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure>

<h2 id="区段元素"><a href="#区段元素" class="headerlink" title="区段元素"></a>区段元素</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。</p>
<p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p>
<p>要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This is [an example](http://example.com/ &quot;Title&quot;) inline link.</span><br><span class="line">​</span><br><span class="line">[This link](http://example.net/) has no title attribute.</span><br></pre></td></tr></table></figure>

<p>会产生：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;</span><br><span class="line">an example&lt;/a&gt; inline link.&lt;/p&gt;</span><br><span class="line">​</span><br><span class="line">&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no</span><br><span class="line">title attribute.&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p>如果你是要链接到同样主机的资源，你可以使用相对路径：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">See my [About](/about/) page for details.</span><br></pre></td></tr></table></figure>

<p>参考式的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This is [an example][id] reference-style link.</span><br></pre></td></tr></table></figure>

<p>你也可以选择性地在两个方括号中间加上一个空格：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This is [an example] [id] reference-style link.</span><br></pre></td></tr></table></figure>

<p>接着，在文件的任意处，你可以把这个标记的链接内容定义出来：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[id]: http://example.com/  &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure>

<p>链接内容定义的形式为：</p>
<p>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字<br>接着一个冒号<br>接着一个以上的空格或制表符<br>接着链接的网址<br>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着<br>下面这三种链接的定义都是相同：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[foo]: http://example.com/  &quot;Optional Title Here&quot;</span><br><span class="line">[foo]: http://example.com/  &apos;Optional Title Here&apos;</span><br><span class="line">[foo]: http://example.com/  (Optional Title Here)</span><br></pre></td></tr></table></figure>

<p>请注意：有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</p>
<p>链接网址也可以用方括号包起来：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure>

<p>你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[id]: http://example.com/longish/path/to/resource/here</span><br><span class="line">    &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure>

<p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p>
<p>链接辨别标签可以有字母、数字、空白和标点符号，但是并不区分大小写，因此下面两个链接是一样的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[link text][a]</span><br><span class="line">[link text][A]</span><br></pre></td></tr></table></figure>

<p>隐式链接标记功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 链接到 google.com，你可以简化成：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Google][]</span><br></pre></td></tr></table></figure>

<p>然后定义链接内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Google]: http://google.com/</span><br></pre></td></tr></table></figure>

<p>由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Visit [Daring Fireball][] for more information.</span><br></pre></td></tr></table></figure>

<p>然后接着定义链接：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Daring Fireball]: http://daringfireball.net/</span><br></pre></td></tr></table></figure>

<p>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p>
<p>下面是一个参考式链接的范例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I get 10 times more traffic from [Google] [1] than from</span><br><span class="line">[Yahoo] [2] or [MSN] [3].</span><br><span class="line">​</span><br><span class="line">  [1]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [3]: http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure>

<p>如果改成用链接名称的方式写：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I get 10 times more traffic from [Google][] than from</span><br><span class="line">[Yahoo][] or [MSN][].</span><br><span class="line">​</span><br><span class="line">  [google]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure>

<p>上面两种写法都会产生下面的 HTML。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;</span><br><span class="line">title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from</span><br><span class="line">&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;</span><br><span class="line">or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p>下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)</span><br><span class="line">than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or</span><br><span class="line">[MSN](http://search.msn.com/ &quot;MSN Search&quot;).</span><br></pre></td></tr></table></figure>

<p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。</p>
<p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</p>
<h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><p>Markdown 使用星号（<code>*</code>）和底线（<code>_</code>）作为标记强调字词的符号，被 <code>*</code> 或 <code>_</code> 包围的字词会被转成用 标签包围，用两个<code>*</code>或<code>_</code>包起来的话，则会被转成，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*single asterisks*</span><br><span class="line">​</span><br><span class="line">_single underscores_</span><br><span class="line">​</span><br><span class="line">**double asterisks**</span><br><span class="line">​</span><br><span class="line">__double underscores__</span><br></pre></td></tr></table></figure>

<p>会转成：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;em&gt;single asterisks&lt;/em&gt;</span><br><span class="line">​</span><br><span class="line">&lt;em&gt;single underscores&lt;/em&gt;</span><br><span class="line">​</span><br><span class="line">&lt;strong&gt;double asterisks&lt;/strong&gt;</span><br><span class="line">​</span><br><span class="line">&lt;strong&gt;double underscores&lt;/strong&gt;</span><br></pre></td></tr></table></figure>

<p>你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。</p>
<p>强调也可以直接插在文字中间：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">un*frigging*believable</span><br></pre></td></tr></table></figure>

<p>但是如果你的 <code>\*</code> 和 _ 两边都有空白的话，它们就只会被当成普通的符号。</p>
<p>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\*this text is surrounded by literal asterisks\*</span><br></pre></td></tr></table></figure>

<p>代码<br>如果要标记一小段行内代码，你可以用反引号把它包起来（<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line">Use the `printf()` function.</span><br></pre></td></tr></table></figure></p>
<p>会产生：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p>如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：</p>
<p><code>There is a literal backtick (`) here.</code><br>这段语法会产生：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p>代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A single backtick in a code span: `` ` ``</span><br><span class="line">​</span><br><span class="line">A backtick-delimited string in a code span: `` `foo` ``</span><br></pre></td></tr></table></figure>

<p>会产生：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;</span><br><span class="line">​</span><br><span class="line">&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p>在代码区段内，&amp; 和方括号都会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Please don&apos;t use any `&lt;blink&gt;` tags.</span><br></pre></td></tr></table></figure>

<p>转为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;Please don&apos;t use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p>你也可以这样写：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.</span><br></pre></td></tr></table></figure>

<p>以产生：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encoded</span><br><span class="line">equivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p>图片<br>很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。</p>
<p>Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： 行内式和参考式。</p>
<p>行内式的图片语法看起来像是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![Alt text](/path/to/img.jpg)</span><br><span class="line">​</span><br><span class="line">![Alt text](/path/to/img.jpg &quot;Optional title&quot;)</span><br></pre></td></tr></table></figure>

<p>详细叙述如下：</p>
<p>一个惊叹号 !
接着一个方括号，里面放上图片的替代文字<br>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 ‘title’ 文字。<br>参考式的图片语法则长得像这样：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![Alt text][id]</span><br><span class="line">「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：</span><br><span class="line"></span><br><span class="line">[id]: url/to/image  &quot;Optional title attribute&quot;</span><br></pre></td></tr></table></figure>

<p>到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 `` 标签。</p>
<h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;http://example.com/&gt;</span><br></pre></td></tr></table></figure>

<p>Markdown 会转为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;</span><br></pre></td></tr></table></figure>

<p>邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;address@example.com&gt;</span><br></pre></td></tr></table></figure>

<p>Markdown 会转成：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;</span><br><span class="line">&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;</span><br><span class="line">&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;</span><br><span class="line">&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;</span><br></pre></td></tr></table></figure>

<p>在浏览器里面，这段字串（其实是 <code>[address@example.com](mailto:address@example.com)</code>）会变成一个可以点击的「<a href="mailto:address@example.com" target="_blank" rel="noopener">address@example.com</a>」链接。</p>
<p>（这种作法虽然可以糊弄不少的机器人，但并不能全部挡下来，不过总比什么都不做好些。不管怎样，公开你的信箱终究会引来广告信件的。）</p>
<h3 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠"></a>反斜杠</h3><p>Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 `` 标签），你可以在星号的前面加上反斜杠：</p>
<p><code>\*literal asterisks\*</code><br>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   底线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  括弧</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   惊叹号</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>IBMMQ错误代码</title>
    <url>/IBMMQ%E9%94%99%E8%AF%AF%E4%BB%A3%E7%A0%81.html</url>
    <content><![CDATA[<center>写在前面</center>
IBM官方说明：https://www.ibm.com/support/knowledgecenter/SSFKSJ_9.0.0/com.ibm.mq.tro.doc/q040710_.htm
<a id="more"></a>

<table>
<thead>
<tr>
<th align="left">ErrorCode</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="left">0 (0000) (RC0): MQRC_NONE</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">900 (0384) (RC900)</td>
<td align="left">MQRC_APPL_FIRST</td>
</tr>
<tr>
<td align="left">999 (03E7) (RC999)</td>
<td align="left">MQRC_APPL_LAST</td>
</tr>
<tr>
<td align="left">2001 (07D1) (RC2001)</td>
<td align="left">MQRC_ALIAS_BASE_Q_TYPE_ERROR</td>
</tr>
<tr>
<td align="left">2002 (07D2) (RC2002)</td>
<td align="left">MQRC_ALREADY_CONNECTED</td>
</tr>
<tr>
<td align="left">2003 (07D3) (RC2003)</td>
<td align="left">MQRC_BACKED_OUT</td>
</tr>
<tr>
<td align="left">2004 (07D4) (RC2004)</td>
<td align="left">MQRC_BUFFER_ERROR</td>
</tr>
<tr>
<td align="left">2005 (07D5) (RC2005)</td>
<td align="left">MQRC_BUFFER_LENGTH_ERROR</td>
</tr>
<tr>
<td align="left">2006 (07D6) (RC2006)</td>
<td align="left">MQRC_CHAR_ATTR_LENGTH_ERROR</td>
</tr>
<tr>
<td align="left">2007 (07D7) (RC2007)</td>
<td align="left">MQRC_CHAR_ATTRS_ERROR</td>
</tr>
<tr>
<td align="left">2008 (07D8) (RC2008)</td>
<td align="left">MQRC_CHAR_ATTRS_TOO_SHORT</td>
</tr>
<tr>
<td align="left">2009 (07D9) (RC2009)</td>
<td align="left">MQRC_CONNECTION_BROKEN</td>
</tr>
<tr>
<td align="left">2010 (07DA) (RC2010)</td>
<td align="left">MQRC_DATA_LENGTH_ERROR</td>
</tr>
<tr>
<td align="left">2011 (07DB) (RC2011)</td>
<td align="left">MQRC_DYNAMIC_Q_NAME_ERROR</td>
</tr>
<tr>
<td align="left">2012 (07DC) (RC2012)</td>
<td align="left">MQRC_ENVIRONMENT_ERROR</td>
</tr>
<tr>
<td align="left">2013 (07DD) (RC2013)</td>
<td align="left">MQRC_EXPIRY_ERROR</td>
</tr>
<tr>
<td align="left">2014 (07DE) (RC2014)</td>
<td align="left">MQRC_FEEDBACK_ERROR</td>
</tr>
<tr>
<td align="left">2016 (07E0) (RC2016)</td>
<td align="left">MQRC_GET_INHIBITED</td>
</tr>
<tr>
<td align="left">2017 (07E1) (RC2017)</td>
<td align="left">MQRC_HANDLE_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2018 (07E2) (RC2018)</td>
<td align="left">MQRC_HCONN_ERROR</td>
</tr>
<tr>
<td align="left">2019 (07E3) (RC2019)</td>
<td align="left">MQRC_HOBJ_ERROR</td>
</tr>
<tr>
<td align="left">2020 (07E4) (RC2020)</td>
<td align="left">MQRC_INHIBIT_VALUE_ERROR</td>
</tr>
<tr>
<td align="left">2021 (07E5) (RC2021)</td>
<td align="left">MQRC_INT_ATTR_COUNT_ERROR</td>
</tr>
<tr>
<td align="left">2022 (07E6) (RC2022)</td>
<td align="left">MQRC_INT_ATTR_COUNT_TOO_SMALL</td>
</tr>
<tr>
<td align="left">2023 (07E7) (RC2023)</td>
<td align="left">MQRC_INT_ATTRS_ARRAY_ERROR</td>
</tr>
<tr>
<td align="left">2024 (07E8) (RC2024)</td>
<td align="left">MQRC_SYNCPOINT_LIMIT_REACHED</td>
</tr>
<tr>
<td align="left">2025 (07E9) (RC2025)</td>
<td align="left">MQRC_MAX_CONNS_LIMIT_REACHED</td>
</tr>
<tr>
<td align="left">2026 (07EA) (RC2026)</td>
<td align="left">MQRC_MD_ERROR</td>
</tr>
<tr>
<td align="left">2027 (07EB) (RC2027)</td>
<td align="left">MQRC_MISSING_REPLY_TO_Q</td>
</tr>
<tr>
<td align="left">2029 (07ED) (RC2029)</td>
<td align="left">MQRC_MSG_TYPE_ERROR</td>
</tr>
<tr>
<td align="left">2030 (07EE) (RC2030)</td>
<td align="left">MQRC_MSG_TOO_BIG_FOR_Q</td>
</tr>
<tr>
<td align="left">2031 (07EF) (RC2031)</td>
<td align="left">MQRC_MSG_TOO_BIG_FOR_Q_MGR</td>
</tr>
<tr>
<td align="left">2033 (07F1) (RC2033)</td>
<td align="left">MQRC_NO_MSG_AVAILABLE</td>
</tr>
<tr>
<td align="left">2034 (07F2) (RC2034)</td>
<td align="left">MQRC_NO_MSG_UNDER_CURSOR</td>
</tr>
<tr>
<td align="left">2035 (07F3) (RC2035)</td>
<td align="left">MQRC_NOT_AUTHORIZED</td>
</tr>
<tr>
<td align="left">2036 (07F4) (RC2036)</td>
<td align="left">MQRC_NOT_OPEN_FOR_BROWSE</td>
</tr>
<tr>
<td align="left">2037 (07F5) (RC2037)</td>
<td align="left">MQRC_NOT_OPEN_FOR_INPUT</td>
</tr>
<tr>
<td align="left">2038 (07F6) (RC2038)</td>
<td align="left">MQRC_NOT_OPEN_FOR_INQUIRE</td>
</tr>
<tr>
<td align="left">2039 (07F7) (RC2039)</td>
<td align="left">MQRC_NOT_OPEN_FOR_OUTPUT</td>
</tr>
<tr>
<td align="left">2040 (07F8) (RC2040)</td>
<td align="left">MQRC_NOT_OPEN_FOR_SET</td>
</tr>
<tr>
<td align="left">2041 (07F9) (RC2041)</td>
<td align="left">MQRC_OBJECT_CHANGED</td>
</tr>
<tr>
<td align="left">2042 (07FA) (RC2042)</td>
<td align="left">MQRC_OBJECT_IN_USE</td>
</tr>
<tr>
<td align="left">2043 (07FB) (RC2043)</td>
<td align="left">MQRC_OBJECT_TYPE_ERROR</td>
</tr>
<tr>
<td align="left">2044 (07FC) (RC2044)</td>
<td align="left">MQRC_OD_ERROR</td>
</tr>
<tr>
<td align="left">2045 (07FD) (RC2045)</td>
<td align="left">MQRC_OPTION_NOT_VALID_FOR_TYPE</td>
</tr>
<tr>
<td align="left">2046 (07FE) (RC2046)</td>
<td align="left">MQRC_OPTIONS_ERROR</td>
</tr>
<tr>
<td align="left">2047 (07FF) (RC2047)</td>
<td align="left">MQRC_PERSISTENCE_ERROR</td>
</tr>
<tr>
<td align="left">2048 (0800) (RC2048)</td>
<td align="left">MQRC_PERSISTENT_NOT_ALLOWED</td>
</tr>
<tr>
<td align="left">2049 (0801) (RC2049)</td>
<td align="left">MQRC_PRIORITY_EXCEEDS_MAXIMUM</td>
</tr>
<tr>
<td align="left">2050 (0802) (RC2050)</td>
<td align="left">MQRC_PRIORITY_ERROR</td>
</tr>
<tr>
<td align="left">2051 (0803) (RC2051)</td>
<td align="left">MQRC_PUT_INHIBITED</td>
</tr>
<tr>
<td align="left">2052 (0804) (RC2052)</td>
<td align="left">MQRC_Q_DELETED</td>
</tr>
<tr>
<td align="left">2053 (0805) (RC2053)</td>
<td align="left">MQRC_Q_FULL</td>
</tr>
<tr>
<td align="left">2055 (0807) (RC2055)</td>
<td align="left">MQRC_Q_NOT_EMPTY</td>
</tr>
<tr>
<td align="left">2056 (0808) (RC2056)</td>
<td align="left">MQRC_Q_SPACE_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2057 (0809) (RC2057)</td>
<td align="left">MQRC_Q_TYPE_ERROR</td>
</tr>
<tr>
<td align="left">2058 (080A) (RC2058)</td>
<td align="left">MQRC_Q_MGR_NAME_ERROR</td>
</tr>
<tr>
<td align="left">2059 (080B) (RC2059)</td>
<td align="left">MQRC_Q_MGR_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2061 (080D) (RC2061)</td>
<td align="left">MQRC_REPORT_OPTIONS_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2062 (080E) (RC2062)</td>
<td align="left">MQRC_SECOND_MARK_NOT_ALLOWED</td>
</tr>
<tr>
<td align="left">2063 (080F) (RC2063)</td>
<td align="left">MQRC_SECURITY_ERROR</td>
</tr>
<tr>
<td align="left">2065 (0811) (RC2065)</td>
<td align="left">MQRC_SELECTOR_COUNT_ERROR</td>
</tr>
<tr>
<td align="left">2066 (0812) (RC2066)</td>
<td align="left">MQRC_SELECTOR_LIMIT_EXCEEDED</td>
</tr>
<tr>
<td align="left">2067 (0813) (RC2067)</td>
<td align="left">MQRC_SELECTOR_ERROR</td>
</tr>
<tr>
<td align="left">2068 (0814) (RC2068)</td>
<td align="left">MQRC_SELECTOR_NOT_FOR_TYPE</td>
</tr>
<tr>
<td align="left">[z/OS][Windows]2069 (0815) (RC2069)</td>
<td align="left">MQRC_SIGNAL_OUTSTANDING</td>
</tr>
<tr>
<td align="left">[z/OS][Windows]2070 (0816) (RC2070)</td>
<td align="left">MQRC_SIGNAL_REQUEST_ACCEPTED</td>
</tr>
<tr>
<td align="left">2071 (0817) (RC2071)</td>
<td align="left">MQRC_STORAGE_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2072 (0818) (RC2072)</td>
<td align="left">MQRC_SYNCPOINT_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2075 (081B) (RC2075)</td>
<td align="left">MQRC_TRIGGER_CONTROL_ERROR</td>
</tr>
<tr>
<td align="left">2076 (081C) (RC2076)</td>
<td align="left">MQRC_TRIGGER_DEPTH_ERROR</td>
</tr>
<tr>
<td align="left">2077 (081D) (RC2077)</td>
<td align="left">MQRC_TRIGGER_MSG_PRIORITY_ERR</td>
</tr>
<tr>
<td align="left">2078 (081E) (RC2078)</td>
<td align="left">MQRC_TRIGGER_TYPE_ERROR</td>
</tr>
<tr>
<td align="left">2079 (081F) (RC2079)</td>
<td align="left">MQRC_TRUNCATED_MSG_ACCEPTED</td>
</tr>
<tr>
<td align="left">2080 (0820) (RC2080)</td>
<td align="left">MQRC_TRUNCATED_MSG_FAILED</td>
</tr>
<tr>
<td align="left">2082 (0822) (RC2082)</td>
<td align="left">MQRC_UNKNOWN_ALIAS_BASE_Q</td>
</tr>
<tr>
<td align="left">2085 (0825) (RC2085)</td>
<td align="left">MQRC_UNKNOWN_OBJECT_NAME</td>
</tr>
<tr>
<td align="left">2086 (0826) (RC2086)</td>
<td align="left">MQRC_UNKNOWN_OBJECT_Q_MGR</td>
</tr>
<tr>
<td align="left">2087 (0827) (RC2087)</td>
<td align="left">MQRC_UNKNOWN_REMOTE_Q_MGR</td>
</tr>
<tr>
<td align="left">2090 (082A) (RC2090)</td>
<td align="left">MQRC_WAIT_INTERVAL_ERROR</td>
</tr>
<tr>
<td align="left">2091 (082B) (RC2091)</td>
<td align="left">MQRC_XMIT_Q_TYPE_ERROR</td>
</tr>
<tr>
<td align="left">2092 (082C) (RC2092)</td>
<td align="left">MQRC_XMIT_Q_USAGE_ERROR</td>
</tr>
<tr>
<td align="left">2093 (082D) (RC2093)</td>
<td align="left">MQRC_NOT_OPEN_FOR_PASS_ALL</td>
</tr>
<tr>
<td align="left">2094 (082E) (RC2094)</td>
<td align="left">MQRC_NOT_OPEN_FOR_PASS_IDENT</td>
</tr>
<tr>
<td align="left">2095 (082F) (RC2095)</td>
<td align="left">MQRC_NOT_OPEN_FOR_SET_ALL</td>
</tr>
<tr>
<td align="left">2096 (0830) (RC2096)</td>
<td align="left">MQRC_NOT_OPEN_FOR_SET_IDENT</td>
</tr>
<tr>
<td align="left">2097 (0831) (RC2097)</td>
<td align="left">MQRC_CONTEXT_HANDLE_ERROR</td>
</tr>
<tr>
<td align="left">2098 (0832) (RC2098)</td>
<td align="left">MQRC_CONTEXT_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">[z/OS][Windows]2099 (0833) (RC2099)</td>
<td align="left">MQRC_SIGNAL1_ERROR</td>
</tr>
<tr>
<td align="left">2100 (0834) (RC2100)</td>
<td align="left">MQRC_OBJECT_ALREADY_EXISTS</td>
</tr>
<tr>
<td align="left">2101 (0835) (RC2101)</td>
<td align="left">MQRC_OBJECT_DAMAGED</td>
</tr>
<tr>
<td align="left">2102 (0836) (RC2102)</td>
<td align="left">MQRC_RESOURCE_PROBLEM</td>
</tr>
<tr>
<td align="left">[UNIX, Linux, Windows, IBM i]2103 (0837) (RC2103)</td>
<td align="left">MQRC_ANOTHER_Q_MGR_CONNECTED</td>
</tr>
<tr>
<td align="left">2104 (0838) (RC2104)</td>
<td align="left">MQRC_UNKNOWN_REPORT_OPTION</td>
</tr>
<tr>
<td align="left">[z/OS]2105 (0839) (RC2105)</td>
<td align="left">MQRC_STORAGE_CLASS_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2106 (083A) (RC2106)</td>
<td align="left">MQRC_COD_NOT_VALID_FOR_XCF_Q</td>
</tr>
<tr>
<td align="left">2107 (083B) (RC2107)</td>
<td align="left">MQRC_XWAIT_CANCELED</td>
</tr>
<tr>
<td align="left">[z/OS]2108 (083C) (RC2108)</td>
<td align="left">MQRC_XWAIT_ERROR</td>
</tr>
<tr>
<td align="left">2109 (083D) (RC2109)</td>
<td align="left">MQRC_SUPPRESSED_BY_EXIT</td>
</tr>
<tr>
<td align="left">2110 (083E) (RC2110)</td>
<td align="left">MQRC_FORMAT_ERROR</td>
</tr>
<tr>
<td align="left">2111 (083F) (RC2111)</td>
<td align="left">MQRC_SOURCE_CCSID_ERROR</td>
</tr>
<tr>
<td align="left">2112 (0840) (RC2112)</td>
<td align="left">MQRC_SOURCE_INTEGER_ENC_ERROR</td>
</tr>
<tr>
<td align="left">2113 (0841) (RC2113)</td>
<td align="left">MQRC_SOURCE_DECIMAL_ENC_ERROR</td>
</tr>
<tr>
<td align="left">2114 (0842) (RC2114)</td>
<td align="left">MQRC_SOURCE_FLOAT_ENC_ERROR</td>
</tr>
<tr>
<td align="left">2115 (0843) (RC2115)</td>
<td align="left">MQRC_TARGET_CCSID_ERROR</td>
</tr>
<tr>
<td align="left">2116 (0844) (RC2116)</td>
<td align="left">MQRC_TARGET_INTEGER_ENC_ERROR</td>
</tr>
<tr>
<td align="left">2117 (0845) (RC2117)</td>
<td align="left">MQRC_TARGET_DECIMAL_ENC_ERROR</td>
</tr>
<tr>
<td align="left">2118 (0846) (RC2118)</td>
<td align="left">MQRC_TARGET_FLOAT_ENC_ERROR</td>
</tr>
<tr>
<td align="left">2119 (0847) (RC2119)</td>
<td align="left">MQRC_NOT_CONVERTED</td>
</tr>
<tr>
<td align="left">2120 (0848) (RC2120)</td>
<td align="left">MQRC_CONVERTED_MSG_TOO_BIG</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2121 (0849) (RC2121)</td>
<td align="left">MQRC_NO_EXTERNAL_PARTICIPANTS</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2122 (084A) (RC2122)</td>
<td align="left">MQRC_PARTICIPANT_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2123 (084B) (RC2123)</td>
<td align="left">MQRC_OUTCOME_MIXED</td>
</tr>
<tr>
<td align="left">[UNIX][Windows][z/OS]2124 (084C) (RC2124)</td>
<td align="left">MQRC_OUTCOME_PENDING</td>
</tr>
<tr>
<td align="left">2125 (084D) (RC2125)</td>
<td align="left">MQRC_BRIDGE_STARTED</td>
</tr>
<tr>
<td align="left">2126 (084E) (RC2126)</td>
<td align="left">MQRC_BRIDGE_STOPPED</td>
</tr>
<tr>
<td align="left">[z/OS]2127 (084F) (RC2127)</td>
<td align="left">MQRC_ADAPTER_STORAGE_SHORTAGE</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2128 (0850) (RC2128)</td>
<td align="left">MQRC_UOW_IN_PROGRESS</td>
</tr>
<tr>
<td align="left">[z/OS]2129 (0851) (RC2129)</td>
<td align="left">MQRC_ADAPTER_CONN_LOAD_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2130 (0852) (RC2130)</td>
<td align="left">MQRC_ADAPTER_SERV_LOAD_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2131 (0853) (RC2131)</td>
<td align="left">MQRC_ADAPTER_DEFS_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2132 (0854) (RC2132)</td>
<td align="left">MQRC_ADAPTER_DEFS_LOAD_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2133 (0855) (RC2133)</td>
<td align="left">MQRC_ADAPTER_CONV_LOAD_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2134 (0856) (RC2134)</td>
<td align="left">MQRC_BO_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2135 (0857) (RC2135)</td>
<td align="left">MQRC_DH_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2136 (0858) (RC2136)</td>
<td align="left">MQRC_MULTIPLE_REASONS</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2137 (0859) (RC2137)</td>
<td align="left">MQRC_OPEN_FAILED</td>
</tr>
<tr>
<td align="left">[z/OS]2138 (085A) (RC2138)</td>
<td align="left">MQRC_ADAPTER_DISC_LOAD_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2139 (085B) (RC2139)</td>
<td align="left">MQRC_CNO_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2140 (085C) (RC2140)</td>
<td align="left">MQRC_CICS_WAIT_FAILED</td>
</tr>
<tr>
<td align="left">2141 (085D) (RC2141)</td>
<td align="left">MQRC_DLH_ERROR</td>
</tr>
<tr>
<td align="left">2142 (085E) (RC2142)</td>
<td align="left">MQRC_HEADER_ERROR</td>
</tr>
<tr>
<td align="left">2143 (085F) (RC2143)</td>
<td align="left">MQRC_SOURCE_LENGTH_ERROR</td>
</tr>
<tr>
<td align="left">2144 (0860) (RC2144)</td>
<td align="left">MQRC_TARGET_LENGTH_ERROR</td>
</tr>
<tr>
<td align="left">2145 (0861) (RC2145)</td>
<td align="left">MQRC_SOURCE_BUFFER_ERROR</td>
</tr>
<tr>
<td align="left">2146 (0862) (RC2146)</td>
<td align="left">MQRC_TARGET_BUFFER_ERROR</td>
</tr>
<tr>
<td align="left">[Windows][V9.0.0.6 Mar 2019]2147 (0863) (RC2147)</td>
<td align="left">MQRC_INCOMPLETE_TRANSACTION</td>
</tr>
<tr>
<td align="left">2148 (0864) (RC2148)</td>
<td align="left">MQRC_IIH_ERROR</td>
</tr>
<tr>
<td align="left">2149 (0865) (RC2149)</td>
<td align="left">MQRC_PCF_ERROR</td>
</tr>
<tr>
<td align="left">2150 (0866) (RC2150)</td>
<td align="left">MQRC_DBCS_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2152 (0868) (RC2152)</td>
<td align="left">MQRC_OBJECT_NAME_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2153 (0869) (RC2153)</td>
<td align="left">MQRC_OBJECT_Q_MGR_NAME_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2154 (086A) (RC2154)</td>
<td align="left">MQRC_RECS_PRESENT_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2155 (086B) (RC2155)</td>
<td align="left">MQRC_OBJECT_RECORDS_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2156 (086C) (RC2156)</td>
<td align="left">MQRC_RESPONSE_RECORDS_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2157 (086D) (RC2157)</td>
<td align="left">MQRC_ASID_MISMATCH</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2158 (086E) (RC2158)</td>
<td align="left">MQRC_PMO_RECORD_FLAGS_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2159 (086F) (RC2159)</td>
<td align="left">MQRC_PUT_MSG_RECORDS_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2160 (0870) (RC2160)</td>
<td align="left">MQRC_CONN_ID_IN_USE</td>
</tr>
<tr>
<td align="left">2161 (0871) (RC2161)</td>
<td align="left">MQRC_Q_MGR_QUIESCING</td>
</tr>
<tr>
<td align="left">2162 (0872) (RC2162)</td>
<td align="left">MQRC_Q_MGR_STOPPING</td>
</tr>
<tr>
<td align="left">[z/OS]2163 (0873) (RC2163)</td>
<td align="left">MQRC_DUPLICATE_RECOV_COORD</td>
</tr>
<tr>
<td align="left">2173 (087D) (RC2173)</td>
<td align="left">MQRC_PMO_ERROR</td>
</tr>
<tr>
<td align="left">2182 (0886) (RC2182)</td>
<td align="left">MQRC_API_EXIT_NOT_FOUND</td>
</tr>
<tr>
<td align="left">2183 (0887) (RC2183)</td>
<td align="left">MQRC_API_EXIT_LOAD_ERROR</td>
</tr>
<tr>
<td align="left">2184 (0888) (RC2184)</td>
<td align="left">MQRC_REMOTE_Q_NAME_ERROR</td>
</tr>
<tr>
<td align="left">2185 (0889) (RC2185)</td>
<td align="left">MQRC_INCONSISTENT_PERSISTENCE</td>
</tr>
<tr>
<td align="left">2186 (088A) (RC2186)</td>
<td align="left">MQRC_GMO_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2187 (088B) (RC2187)</td>
<td align="left">MQRC_CICS_BRIDGE_RESTRICTION</td>
</tr>
<tr>
<td align="left">2188 (088C) (RC2188)</td>
<td align="left">MQRC_STOPPED_BY_CLUSTER_EXIT</td>
</tr>
<tr>
<td align="left">2189 (088D) (RC2189)</td>
<td align="left">MQRC_CLUSTER_RESOLUTION_ERROR</td>
</tr>
<tr>
<td align="left">2190 (088E) (RC2190)</td>
<td align="left">MQRC_CONVERTED_STRING_TOO_BIG</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2191 (088F) (RC2191)</td>
<td align="left">MQRC_TMC_ERROR</td>
</tr>
<tr>
<td align="left">2192 (0890) (RC2192)</td>
<td align="left">MQRC_PAGESET_FULL</td>
</tr>
<tr>
<td align="left">[z/OS]2192 (0890) (RC2192)</td>
<td align="left">MQRC_STORAGE_MEDIUM_FULL</td>
</tr>
<tr>
<td align="left">[z/OS]2193 (0891) (RC2193)</td>
<td align="left">MQRC_PAGESET_ERROR</td>
</tr>
<tr>
<td align="left">2194 (0892) (RC2194)</td>
<td align="left">MQRC_NAME_NOT_VALID_FOR_TYPE</td>
</tr>
<tr>
<td align="left">2195 (0893) (RC2195)</td>
<td align="left">MQRC_UNEXPECTED_ERROR</td>
</tr>
<tr>
<td align="left">2196 (0894) (RC2196)</td>
<td align="left">MQRC_UNKNOWN_XMIT_Q</td>
</tr>
<tr>
<td align="left">2197 (0895) (RC2197)</td>
<td align="left">MQRC_UNKNOWN_DEF_XMIT_Q</td>
</tr>
<tr>
<td align="left">2198 (0896) (RC2198)</td>
<td align="left">MQRC_DEF_XMIT_Q_TYPE_ERROR</td>
</tr>
<tr>
<td align="left">2199 (0897) (RC2199)</td>
<td align="left">MQRC_DEF_XMIT_Q_USAGE_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2201 (0899) (RC2201)</td>
<td align="left">MQRC_NAME_IN_USE</td>
</tr>
<tr>
<td align="left">2202 (089A) (RC2202)</td>
<td align="left">MQRC_CONNECTION_QUIESCING</td>
</tr>
<tr>
<td align="left">2203 (089B) (RC2203)</td>
<td align="left">MQRC_CONNECTION_STOPPING</td>
</tr>
<tr>
<td align="left">[z/OS]2204 (089C) (RC2204)</td>
<td align="left">MQRC_ADAPTER_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2206 (089E) (RC2206)</td>
<td align="left">MQRC_MSG_ID_ERROR</td>
</tr>
<tr>
<td align="left">2207 (089F) (RC2207)</td>
<td align="left">MQRC_CORREL_ID_ERROR</td>
</tr>
<tr>
<td align="left">2208 (08A0) (RC2208)</td>
<td align="left">MQRC_FILE_SYSTEM_ERROR</td>
</tr>
<tr>
<td align="left">2209 (08A1) (RC2209)</td>
<td align="left">MQRC_NO_MSG_LOCKED</td>
</tr>
<tr>
<td align="left">2210 (08A2) (RC2210)</td>
<td align="left">MQRC_SOAP_DOTNET_ERROR</td>
</tr>
<tr>
<td align="left">2211 (08A3) (RC2211)</td>
<td align="left">MQRC_SOAP_AXIS_ERROR</td>
</tr>
<tr>
<td align="left">2212 (08A4) (RC2212)</td>
<td align="left">MQRC_SOAP_URL_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2217 (08A9) (RC2217)</td>
<td align="left">MQRC_CONNECTION_NOT_AUTHORIZED</td>
</tr>
<tr>
<td align="left">2218 (08AA) (RC2218)</td>
<td align="left">MQRC_MSG_TOO_BIG_FOR_CHANNEL</td>
</tr>
<tr>
<td align="left">2219 (08AB) (RC2219)</td>
<td align="left">MQRC_CALL_IN_PROGRESS</td>
</tr>
<tr>
<td align="left">2220 (08AC) (RC2220)</td>
<td align="left">MQRC_RMH_ERROR</td>
</tr>
<tr>
<td align="left">2222 (08AE) (RC2222)</td>
<td align="left">MQRC_Q_MGR_ACTIVE</td>
</tr>
<tr>
<td align="left">2223 (08AF) (RC2223)</td>
<td align="left">MQRC_Q_MGR_NOT_ACTIVE</td>
</tr>
<tr>
<td align="left">2224 (08B0) (RC2224)</td>
<td align="left">MQRC_Q_DEPTH_HIGH</td>
</tr>
<tr>
<td align="left">2225 (08B1) (RC2225)</td>
<td align="left">MQRC_Q_DEPTH_LOW</td>
</tr>
<tr>
<td align="left">2226 (08B2) (RC2226)</td>
<td align="left">MQRC_Q_SERVICE_INTERVAL_HIGH</td>
</tr>
<tr>
<td align="left">2227 (08B3) (RC2227)</td>
<td align="left">MQRC_Q_SERVICE_INTERVAL_OK</td>
</tr>
<tr>
<td align="left">2228 (08B4) (RC2228)</td>
<td align="left">MQRC_RFH_HEADER_FIELD_ERROR</td>
</tr>
<tr>
<td align="left">2229 (08B5) (RC2229)</td>
<td align="left">MQRC_RAS_PROPERTY_ERROR</td>
</tr>
<tr>
<td align="left">2232 (08B8) (RC2232)</td>
<td align="left">MQRC_UNIT_OF_WORK_NOT_STARTED</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2233 (08B9) (RC2233)</td>
<td align="left">MQRC_CHANNEL_AUTO_DEF_OK</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2234 (08BA) (RC2234)</td>
<td align="left">MQRC_CHANNEL_AUTO_DEF_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2235 (08BB) (RC2235)</td>
<td align="left">MQRC_CFH_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2236 (08BC) (RC2236)</td>
<td align="left">MQRC_CFIL_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2237 (08BD) (RC2237)</td>
<td align="left">MQRC_CFIN_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2238 (08BE) (RC2238)</td>
<td align="left">MQRC_CFSL_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2239 (08BF) (RC2239)</td>
<td align="left">MQRC_CFST_ERROR</td>
</tr>
<tr>
<td align="left">2241 (08C1) (RC2241)</td>
<td align="left">MQRC_INCOMPLETE_GROUP</td>
</tr>
<tr>
<td align="left">2242 (08C2) (RC2242)</td>
<td align="left">MQRC_INCOMPLETE_MSG</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2243 (08C3) (RC2243)</td>
<td align="left">MQRC_INCONSISTENT_CCSIDS</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2244 (08C4) (RC2244)</td>
<td align="left">MQRC_INCONSISTENT_ENCODINGS</td>
</tr>
<tr>
<td align="left">2245 (08C5) (RC2245)</td>
<td align="left">MQRC_INCONSISTENT_UOW</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2246 (08C6) (RC2246)</td>
<td align="left">MQRC_INVALID_MSG_UNDER_CURSOR</td>
</tr>
<tr>
<td align="left">2247 (08C7) (RC2247)</td>
<td align="left">MQRC_MATCH_OPTIONS_ERROR</td>
</tr>
<tr>
<td align="left">2248 (08C8) (RC2248)</td>
<td align="left">MQRC_MDE_ERROR</td>
</tr>
<tr>
<td align="left">2249 (08C9) (RC2249)</td>
<td align="left">MQRC_MSG_FLAGS_ERROR</td>
</tr>
<tr>
<td align="left">2250 (08CA) (RC2250)</td>
<td align="left">MQRC_MSG_SEQ_NUMBER_ERROR</td>
</tr>
<tr>
<td align="left">2251 (08CB) (RC2251)</td>
<td align="left">MQRC_OFFSET_ERROR</td>
</tr>
<tr>
<td align="left">2252 (08CC) (RC2252)</td>
<td align="left">MQRC_ORIGINAL_LENGTH_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2253 (08CD) (RC2253)</td>
<td align="left">MQRC_SEGMENT_LENGTH_ZERO</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2255 (08CF) (RC2255)</td>
<td align="left">MQRC_UOW_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2256 (08D0) (RC2256)</td>
<td align="left">MQRC_WRONG_GMO_VERSION</td>
</tr>
<tr>
<td align="left">2257 (08D1) (RC2257)</td>
<td align="left">MQRC_WRONG_MD_VERSION</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2258 (08D2) (RC2258)</td>
<td align="left">MQRC_GROUP_ID_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2259 (08D3) (RC2259)</td>
<td align="left">MQRC_INCONSISTENT_BROWSE</td>
</tr>
<tr>
<td align="left">2260 (08D4) (RC2260)</td>
<td align="left">MQRC_XQH_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2261 (08D5) (RC2261)</td>
<td align="left">MQRC_SRC_ENV_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2262 (08D6) (RC2262)</td>
<td align="left">MQRC_SRC_NAME_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Linux]2263 (08D7) (RC2263)</td>
<td align="left">MQRC_DEST_ENV_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2264 (08D8) (RC2264)</td>
<td align="left">MQRC_DEST_NAME_ERROR</td>
</tr>
<tr>
<td align="left">2265 (08D9) (RC2265)</td>
<td align="left">MQRC_TM_ERROR</td>
</tr>
<tr>
<td align="left">2266 (08DA) (RC2266)</td>
<td align="left">MQRC_CLUSTER_EXIT_ERROR</td>
</tr>
<tr>
<td align="left">2267 (08DB) (RC2267)</td>
<td align="left">MQRC_CLUSTER_EXIT_LOAD_ERROR</td>
</tr>
<tr>
<td align="left">2268 (08DC) (RC2268)</td>
<td align="left">MQRC_CLUSTER_PUT_INHIBITED</td>
</tr>
<tr>
<td align="left">2269 (08DD) (RC2269)</td>
<td align="left">MQRC_CLUSTER_RESOURCE_ERROR</td>
</tr>
<tr>
<td align="left">2270 (08DE) (RC2270)</td>
<td align="left">MQRC_NO_DESTINATIONS_AVAILABLE</td>
</tr>
<tr>
<td align="left">[z/OS]2271 (08DF) (RC2271)</td>
<td align="left">MQRC_CONN_TAG_IN_USE</td>
</tr>
<tr>
<td align="left">2272 (08E0) (RC2272)</td>
<td align="left">MQRC_PARTIALLY_CONVERTED</td>
</tr>
<tr>
<td align="left">2273 (08E1) (RC2273)</td>
<td align="left">MQRC_CONNECTION_ERROR</td>
</tr>
<tr>
<td align="left">2274 (08E2) (RC2274)</td>
<td align="left">MQRC_OPTION_ENVIRONMENT_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2277 (08E5) (RC2277)</td>
<td align="left">MQRC_CD_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2278 (08E6) (RC2278)</td>
<td align="left">MQRC_CLIENT_CONN_ERROR</td>
</tr>
<tr>
<td align="left">2279 (08E7) (RC2279)</td>
<td align="left">MQRC_CHANNEL_STOPPED_BY_USER</td>
</tr>
<tr>
<td align="left">[UNIX, Linux, Windows, IBM i]2280 (08E8) (RC2280)</td>
<td align="left">MQRC_HCONFIG_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX, Linux, Windows, IBM i]2281 (08E9) (RC2281)</td>
<td align="left">MQRC_FUNCTION_ERROR</td>
</tr>
<tr>
<td align="left">2282 (08EA) (RC2282)</td>
<td align="left">MQRC_CHANNEL_STARTED</td>
</tr>
<tr>
<td align="left">2283 (08EB) (RC2283)</td>
<td align="left">MQRC_CHANNEL_STOPPED</td>
</tr>
<tr>
<td align="left">2284 (08EC) (RC2284)</td>
<td align="left">MQRC_CHANNEL_CONV_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX, Linux, Windows, IBM i]2285 (08ED) (RC2285)</td>
<td align="left">MQRC_SERVICE_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">[UNIX, Linux, Windows, IBM i]2286 (08EE) (RC2286)</td>
<td align="left">MQRC_INITIALIZATION_FAILED</td>
</tr>
<tr>
<td align="left">[UNIX, Linux, Windows, IBM i]2287 (08EF) (RC2287)</td>
<td align="left">MQRC_TERMINATION_FAILED</td>
</tr>
<tr>
<td align="left">[UNIX, Linux, Windows, IBM i]2288 (08F0) (RC2288)</td>
<td align="left">MQRC_UNKNOWN_Q_NAME</td>
</tr>
<tr>
<td align="left">[UNIX, Linux, Windows, IBM i]2289 (08F1) (RC2289)</td>
<td align="left">MQRC_SERVICE_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX, Linux, Windows, IBM i]2290 (08F2) (RC2290)</td>
<td align="left">MQRC_Q_ALREADY_EXISTS</td>
</tr>
<tr>
<td align="left">[UNIX, Linux, Windows, IBM i]2291 (08F3) (RC2291)</td>
<td align="left">MQRC_USER_ID_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">[UNIX, Linux, Windows, IBM i]2292 (08F4) (RC2292)</td>
<td align="left">MQRC_UNKNOWN_ENTITY</td>
</tr>
<tr>
<td align="left">[UNIX, Linux, Windows, IBM i]2294 (08F6) (RC2294)</td>
<td align="left">MQRC_UNKNOWN_REF_OBJECT</td>
</tr>
<tr>
<td align="left">2295 (08F7) (RC2295)</td>
<td align="left">MQRC_CHANNEL_ACTIVATED</td>
</tr>
<tr>
<td align="left">2296 (08F8) (RC2296)</td>
<td align="left">MQRC_CHANNEL_NOT_ACTIVATED</td>
</tr>
<tr>
<td align="left">2297 (08F9) (RC2297)</td>
<td align="left">MQRC_UOW_CANCELED</td>
</tr>
<tr>
<td align="left">2298 (08FA) (RC2298)</td>
<td align="left">MQRC_FUNCTION_NOT_SUPPORTED</td>
</tr>
<tr>
<td align="left">2299 (08FB) (RC2299)</td>
<td align="left">MQRC_SELECTOR_TYPE_ERROR</td>
</tr>
<tr>
<td align="left">2300 (08FC) (RC2300)</td>
<td align="left">MQRC_COMMAND_TYPE_ERROR</td>
</tr>
<tr>
<td align="left">2301 (08FD) (RC2301)</td>
<td align="left">MQRC_MULTIPLE_INSTANCE_ERROR</td>
</tr>
<tr>
<td align="left">2302 (08FE) (RC2302)</td>
<td align="left">MQRC_SYSTEM_ITEM_NOT_ALTERABLE</td>
</tr>
<tr>
<td align="left">2303 (08FF) (RC2303)</td>
<td align="left">MQRC_BAG_CONVERSION_ERROR</td>
</tr>
<tr>
<td align="left">2304 (0900) (RC2304)</td>
<td align="left">MQRC_SELECTOR_OUT_OF_RANGE</td>
</tr>
<tr>
<td align="left">2305 (0901) (RC2305)</td>
<td align="left">MQRC_SELECTOR_NOT_UNIQUE</td>
</tr>
<tr>
<td align="left">2306 (0902) (RC2306)</td>
<td align="left">MQRC_INDEX_NOT_PRESENT</td>
</tr>
<tr>
<td align="left">2307 (0903) (RC2307)</td>
<td align="left">MQRC_STRING_ERROR</td>
</tr>
<tr>
<td align="left">2308 (0904) (RC2308)</td>
<td align="left">MQRC_ENCODING_NOT_SUPPORTED</td>
</tr>
<tr>
<td align="left">2309 (0905) (RC2309)</td>
<td align="left">MQRC_SELECTOR_NOT_PRESENT</td>
</tr>
<tr>
<td align="left">2310 (0906) (RC2310)</td>
<td align="left">MQRC_OUT_SELECTOR_ERROR</td>
</tr>
<tr>
<td align="left">2311 (0907) (RC2311)</td>
<td align="left">MQRC_STRING_TRUNCATED</td>
</tr>
<tr>
<td align="left">2312 (0908) (RC2312)</td>
<td align="left">MQRC_SELECTOR_WRONG_TYPE</td>
</tr>
<tr>
<td align="left">2313 (0909) (RC2313)</td>
<td align="left">MQRC_INCONSISTENT_ITEM_TYPE</td>
</tr>
<tr>
<td align="left">2314 (090A) (RC2314)</td>
<td align="left">MQRC_INDEX_ERROR</td>
</tr>
<tr>
<td align="left">2315 (090B) (RC2315)</td>
<td align="left">MQRC_SYSTEM_BAG_NOT_ALTERABLE</td>
</tr>
<tr>
<td align="left">2316 (090C) (RC2316)</td>
<td align="left">MQRC_ITEM_COUNT_ERROR</td>
</tr>
<tr>
<td align="left">2317 (090D) (RC2317)</td>
<td align="left">MQRC_FORMAT_NOT_SUPPORTED</td>
</tr>
<tr>
<td align="left">2318 (090E) (RC2318)</td>
<td align="left">MQRC_SELECTOR_NOT_SUPPORTED</td>
</tr>
<tr>
<td align="left">2319 (090F) (RC2319)</td>
<td align="left">MQRC_ITEM_VALUE_ERROR</td>
</tr>
<tr>
<td align="left">2320 (0910) (RC2320)</td>
<td align="left">MQRC_HBAG_ERROR</td>
</tr>
<tr>
<td align="left">2321 (0911) (RC2321)</td>
<td align="left">MQRC_PARAMETER_MISSING</td>
</tr>
<tr>
<td align="left">2322 (0912) (RC2322)</td>
<td align="left">MQRC_CMD_SERVER_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2323 (0913) (RC2323)</td>
<td align="left">MQRC_STRING_LENGTH_ERROR</td>
</tr>
<tr>
<td align="left">2324 (0914) (RC2324)</td>
<td align="left">MQRC_INQUIRY_COMMAND_ERROR</td>
</tr>
<tr>
<td align="left">2325 (0915) (RC2325)</td>
<td align="left">MQRC_NESTED_BAG_NOT_SUPPORTED</td>
</tr>
<tr>
<td align="left">2326 (0916) (RC2326)</td>
<td align="left">MQRC_BAG_WRONG_TYPE</td>
</tr>
<tr>
<td align="left">2327 (0917) (RC2327)</td>
<td align="left">MQRC_ITEM_TYPE_ERROR</td>
</tr>
<tr>
<td align="left">2328 (0918) (RC2328)</td>
<td align="left">MQRC_SYSTEM_BAG_NOT_DELETABLE</td>
</tr>
<tr>
<td align="left">2329 (0919) (RC2329)</td>
<td align="left">MQRC_SYSTEM_ITEM_NOT_DELETABLE</td>
</tr>
<tr>
<td align="left">2330 (091A) (RC2330)</td>
<td align="left">MQRC_CODED_CHAR_SET_ID_ERROR</td>
</tr>
<tr>
<td align="left">2331 (091B) (RC2331)</td>
<td align="left">MQRC_MSG_TOKEN_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2332 (091C) (RC2332)</td>
<td align="left">MQRC_MISSING_WIH</td>
</tr>
<tr>
<td align="left">2333 (091D) (RC2333)</td>
<td align="left">MQRC_WIH_ERROR</td>
</tr>
<tr>
<td align="left">2334 (091E) (RC2334)</td>
<td align="left">MQRC_RFH_ERROR</td>
</tr>
<tr>
<td align="left">2335 (091F) (RC2335)</td>
<td align="left">MQRC_RFH_STRING_ERROR</td>
</tr>
<tr>
<td align="left">2336 (0920) (RC2336)</td>
<td align="left">MQRC_RFH_COMMAND_ERROR</td>
</tr>
<tr>
<td align="left">2337 (0921) (RC2337)</td>
<td align="left">MQRC_RFH_PARM_ERROR</td>
</tr>
<tr>
<td align="left">2338 (0922) (RC2338)</td>
<td align="left">MQRC_RFH_DUPLICATE_PARM</td>
</tr>
<tr>
<td align="left">2339 (0923) (RC2339)</td>
<td align="left">MQRC_RFH_PARM_MISSING</td>
</tr>
<tr>
<td align="left">[z/OS]2340 (0924) (RC2340)</td>
<td align="left">MQRC_CHAR_CONVERSION_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2341 (0925) (RC2341)</td>
<td align="left">MQRC_UCS2_CONVERSION_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2342 (0926) (RC2342)</td>
<td align="left">MQRC_DB2_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">[z/OS]2343 (0927) (RC2343)</td>
<td align="left">MQRC_OBJECT_NOT_UNIQUE</td>
</tr>
<tr>
<td align="left">[z/OS]2344 (0928) (RC2344)</td>
<td align="left">MQRC_CONN_TAG_NOT_RELEASED</td>
</tr>
<tr>
<td align="left">[z/OS]2345 (0929) (RC2345)</td>
<td align="left">MQRC_CF_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">[z/OS]2346 (092A) (RC2346)</td>
<td align="left">MQRC_CF_STRUC_IN_USE</td>
</tr>
<tr>
<td align="left">[z/OS]2347 (092B) (RC2347)</td>
<td align="left">MQRC_CF_STRUC_LIST_HDR_IN_USE</td>
</tr>
<tr>
<td align="left">[z/OS]2348 (092C) (RC2348)</td>
<td align="left">MQRC_CF_STRUC_AUTH_FAILED</td>
</tr>
<tr>
<td align="left">[z/OS]2349 (092D) (RC2349)</td>
<td align="left">MQRC_CF_STRUC_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2350 (092E) (RC2350)</td>
<td align="left">MQRC_CONN_TAG_NOT_USABLE</td>
</tr>
<tr>
<td align="left">[Windows][z/OS]2351 (092F) (RC2351)</td>
<td align="left">MQRC_GLOBAL_UOW_CONFLICT</td>
</tr>
<tr>
<td align="left">[Windows][z/OS]2352 (0930) (RC2352)</td>
<td align="left">MQRC_LOCAL_UOW_CONFLICT</td>
</tr>
<tr>
<td align="left">[Windows]2353 (0931) (RC2353)</td>
<td align="left">MQRC_HANDLE_IN_USE_FOR_UOW</td>
</tr>
<tr>
<td align="left">[HPNSS][Windows]2354 (0932) (RC2354)</td>
<td align="left">MQRC_UOW_ENLISTMENT_ERROR</td>
</tr>
<tr>
<td align="left">[HPNSS][Windows]2355 (0933) (RC2355)</td>
<td align="left">MQRC_UOW_MIX_NOT_SUPPORTED</td>
</tr>
<tr>
<td align="left">2356 (0934) (RC2356)</td>
<td align="left">MQRC_WXP_ERROR</td>
</tr>
<tr>
<td align="left">2357 (0935) (RC2357)</td>
<td align="left">MQRC_CURRENT_RECORD_ERROR</td>
</tr>
<tr>
<td align="left">2358 (0936) (RC2358)</td>
<td align="left">MQRC_NEXT_OFFSET_ERROR</td>
</tr>
<tr>
<td align="left">2359 (0937) (RC2359)</td>
<td align="left">MQRC_NO_RECORD_AVAILABLE</td>
</tr>
<tr>
<td align="left">[z/OS]2360 (0938) (RC2360)</td>
<td align="left">MQRC_OBJECT_LEVEL_INCOMPATIBLE</td>
</tr>
<tr>
<td align="left">2361 (0939) (RC2361)</td>
<td align="left">MQRC_NEXT_RECORD_ERROR</td>
</tr>
<tr>
<td align="left">2362 (093A) (RC2362)</td>
<td align="left">MQRC_BACKOUT_THRESHOLD_REACHED</td>
</tr>
<tr>
<td align="left">2363 (093B) (RC2363)</td>
<td align="left">MQRC_MSG_NOT_MATCHED</td>
</tr>
<tr>
<td align="left">2364 (093C) (RC2364)</td>
<td align="left">MQRC_JMS_FORMAT_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2365 (093D) (RC2365)</td>
<td align="left">MQRC_SEGMENTS_NOT_SUPPORTED</td>
</tr>
<tr>
<td align="left">[z/OS]2366 (093E) (RC2366)</td>
<td align="left">MQRC_WRONG_CF_LEVEL</td>
</tr>
<tr>
<td align="left">2367 (093F) (RC2367)</td>
<td align="left">MQRC_CONFIG_CREATE_OBJECT</td>
</tr>
<tr>
<td align="left">2368 (0940) (RC2368)</td>
<td align="left">MQRC_CONFIG_CHANGE_OBJECT</td>
</tr>
<tr>
<td align="left">2369 (0941) (RC2369)</td>
<td align="left">MQRC_CONFIG_DELETE_OBJECT</td>
</tr>
<tr>
<td align="left">2370 (0942) (RC2370)</td>
<td align="left">MQRC_CONFIG_REFRESH_OBJECT</td>
</tr>
<tr>
<td align="left">2371 (0943) (RC2371)</td>
<td align="left">MQRC_CHANNEL_SSL_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2373 (0945) (RC2373)</td>
<td align="left">MQRC_CF_STRUC_FAILED</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2374 (0946) (RC2374)</td>
<td align="left">MQRC_API_EXIT_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2375 (0947) (RC2375)</td>
<td align="left">MQRC_API_EXIT_INIT_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2376 (0948) (RC2376)</td>
<td align="left">MQRC_API_EXIT_TERM_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2377 (0949) (RC2377)</td>
<td align="left">MQRC_EXIT_REASON_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2378 (094A) (RC2378)</td>
<td align="left">MQRC_RESERVED_VALUE_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX, Linux, Windows, IBM i]2379 (094B) (RC2379)</td>
<td align="left">MQRC_NO_DATA_AVAILABLE</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2380 (094C) (RC2380)</td>
<td align="left">MQRC_SCO_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2381 (094D) (RC2381)</td>
<td align="left">MQRC_KEY_REPOSITORY_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2382 (094E) (RC2382)</td>
<td align="left">MQRC_CRYPTO_HARDWARE_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2383 (094F) (RC2383)</td>
<td align="left">MQRC_AUTH_INFO_REC_COUNT_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2384 (0950) (RC2384)</td>
<td align="left">MQRC_AUTH_INFO_REC_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2385 (0951) (RC2385)</td>
<td align="left">MQRC_AIR_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2386 (0952) (RC2386)</td>
<td align="left">MQRC_AUTH_INFO_TYPE_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2387 (0953) (RC2387)</td>
<td align="left">MQRC_AUTH_INFO_CONN_NAME_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2388 (0954) (RC2388)</td>
<td align="left">MQRC_LDAP_USER_NAME_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2389 (0955) (RC2389)</td>
<td align="left">MQRC_LDAP_USER_NAME_LENGTH_ERR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2390 (0956) (RC2390)</td>
<td align="left">MQRC_LDAP_PASSWORD_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2391 (0957) (RC2391)</td>
<td align="left">MQRC_SSL_ALREADY_INITIALIZED</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2392 (0958) (RC2392)</td>
<td align="left">MQRC_SSL_CONFIG_ERROR</td>
</tr>
<tr>
<td align="left">[UNIX][Windows]2393 (0959) (RC2393)</td>
<td align="left">MQRC_SSL_INITIALIZATION_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2394 (095A) (RC2394)</td>
<td align="left">MQRC_Q_INDEX_TYPE_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2395 (095B) (RC2395)</td>
<td align="left">MQRC_CFBS_ERROR</td>
</tr>
<tr>
<td align="left">2396 (095C) (RC2396)</td>
<td align="left">MQRC_SSL_NOT_ALLOWED</td>
</tr>
<tr>
<td align="left">2397 (095D) (RC2397)</td>
<td align="left">MQRC_JSSE_ERROR</td>
</tr>
<tr>
<td align="left">2398 (095E) (RC2398)</td>
<td align="left">MQRC_SSL_PEER_NAME_MISMATCH</td>
</tr>
<tr>
<td align="left">2399 (095F) (RC2399)</td>
<td align="left">MQRC_SSL_PEER_NAME_ERROR</td>
</tr>
<tr>
<td align="left">2400 (0960) (RC2400)</td>
<td align="left">MQRC_UNSUPPORTED_CIPHER_SUITE</td>
</tr>
<tr>
<td align="left">2401 (0961) (RC2401)</td>
<td align="left">MQRC_SSL_CERTIFICATE_REVOKED</td>
</tr>
<tr>
<td align="left">2402 (0962) (RC2402)</td>
<td align="left">MQRC_SSL_CERT_STORE_ERROR</td>
</tr>
<tr>
<td align="left">2406 (0966) (RC2406)</td>
<td align="left">MQRC_CLIENT_EXIT_LOAD_ERROR</td>
</tr>
<tr>
<td align="left">2407 (0967) (RC2407)</td>
<td align="left">MQRC_CLIENT_EXIT_ERROR</td>
</tr>
<tr>
<td align="left">2409 (0969) (RC2409)</td>
<td align="left">MQRC_SSL_KEY_RESET_ERROR</td>
</tr>
<tr>
<td align="left">2411 (096B) (RC2411)</td>
<td align="left">MQRC_LOGGER_STATUS</td>
</tr>
<tr>
<td align="left">2412 (096C) (RC2412)</td>
<td align="left">MQRC_COMMAND_MQSC</td>
</tr>
<tr>
<td align="left">2413 (096D) (RC2413)</td>
<td align="left">MQRC_COMMAND_PCF</td>
</tr>
<tr>
<td align="left">2414 (096E) (RC2414)</td>
<td align="left">MQRC_CFIF_ERROR</td>
</tr>
<tr>
<td align="left">2415 (096F) (RC2415)</td>
<td align="left">MQRC_CFSF_ERROR</td>
</tr>
<tr>
<td align="left">2416 (0970) (RC2416)</td>
<td align="left">MQRC_CFGR_ERROR</td>
</tr>
<tr>
<td align="left">2417 (0971) (RC2417)</td>
<td align="left">MQRC_MSG_NOT_ALLOWED_IN_GROUP</td>
</tr>
<tr>
<td align="left">An explanation of the error, completion code, and programmer response.</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">2418 (0972) (RC2418)</td>
<td align="left">MQRC_FILTER_OPERATOR_ERROR</td>
</tr>
<tr>
<td align="left">2419 (0973) (RC2419)</td>
<td align="left">MQRC_NESTED_SELECTOR_ERROR</td>
</tr>
<tr>
<td align="left">2420 (0974) (RC2420)</td>
<td align="left">MQRC_EPH_ERROR</td>
</tr>
<tr>
<td align="left">2421 (0975) (RC2421)</td>
<td align="left">MQRC_RFH_FORMAT_ERROR</td>
</tr>
<tr>
<td align="left">[IBM i][UNIX][Windows]2422 (0976) (RC2422)</td>
<td align="left">MQRC_CFBF_ERROR</td>
</tr>
<tr>
<td align="left">2423 (0977) (RC2423)</td>
<td align="left">MQRC_CLIENT_CHANNEL_CONFLICT</td>
</tr>
<tr>
<td align="left">2424 (0978) (RC2424)</td>
<td align="left">MQRC_SD_ERROR</td>
</tr>
<tr>
<td align="left">2425 (0979) (RC2425)</td>
<td align="left">MQRC_TOPIC_STRING_ERROR</td>
</tr>
<tr>
<td align="left">2426 (097A) (RC2426)</td>
<td align="left">MQRC_STS_ERROR</td>
</tr>
<tr>
<td align="left">2428 (097C) (RC2428)</td>
<td align="left">MQRC_NO_SUBSCRIPTION</td>
</tr>
<tr>
<td align="left">2429 (097D) (RC2429)</td>
<td align="left">MQRC_SUBSCRIPTION_IN_USE</td>
</tr>
<tr>
<td align="left">2430 (097E) (RC2430)</td>
<td align="left">MQRC_STAT_TYPE_ERROR</td>
</tr>
<tr>
<td align="left">2431 (097F) (RC2431)</td>
<td align="left">MQRC_SUB_USER_DATA_ERROR</td>
</tr>
<tr>
<td align="left">2432 (0980) (RC2432)</td>
<td align="left">MQRC_SUB_ALREADY_EXISTS</td>
</tr>
<tr>
<td align="left">2434 (0982) (RC2434)</td>
<td align="left">MQRC_IDENTITY_MISMATCH</td>
</tr>
<tr>
<td align="left">2435 (0983) (RC2435)</td>
<td align="left">MQRC_ALTER_SUB_ERROR</td>
</tr>
<tr>
<td align="left">2436 (0984) (RC2436)</td>
<td align="left">MQRC_DURABILITY_NOT_ALLOWED</td>
</tr>
<tr>
<td align="left">2437 (0985) (RC2437)</td>
<td align="left">MQRC_NO_RETAINED_MSG</td>
</tr>
<tr>
<td align="left">2438 (0986) (RC2438)</td>
<td align="left">MQRC_SRO_ERROR</td>
</tr>
<tr>
<td align="left">2440 (0988) (RC2440)</td>
<td align="left">MQRC_SUB_NAME_ERROR</td>
</tr>
<tr>
<td align="left">2441 (0989) (RC2441)</td>
<td align="left">MQRC_OBJECT_STRING_ERROR</td>
</tr>
<tr>
<td align="left">2442 (098A) (RC2442)</td>
<td align="left">MQRC_PROPERTY_NAME_ERROR</td>
</tr>
<tr>
<td align="left">2443 (098B) (RC2443)</td>
<td align="left">MQRC_SEGMENTATION_NOT_ALLOWED</td>
</tr>
<tr>
<td align="left">2444 (098C) (RC2444)</td>
<td align="left">MQRC_CBD_ERROR</td>
</tr>
<tr>
<td align="left">2445 (098D) (RC2445)</td>
<td align="left">MQRC_CTLO_ERROR</td>
</tr>
<tr>
<td align="left">2446 (098E) (RC2446)</td>
<td align="left">MQRC_NO_CALLBACKS_ACTIVE</td>
</tr>
<tr>
<td align="left">2448 (0990) (RC2448)</td>
<td align="left">MQRC_CALLBACK_NOT_REGISTERED</td>
</tr>
<tr>
<td align="left">2449 (0991) (RC2449)</td>
<td align="left">MQRC_OPERATION_NOT_ALLOWED</td>
</tr>
<tr>
<td align="left">2457 (0999) (RC2457)</td>
<td align="left">MQRC_OPTIONS_CHANGED</td>
</tr>
<tr>
<td align="left">2458 (099A) (RC2458)</td>
<td align="left">MQRC_READ_AHEAD_MSGS</td>
</tr>
<tr>
<td align="left">2459 (099B) (RC2459)</td>
<td align="left">MQRC_SELECTOR_SYNTAX_ERROR</td>
</tr>
<tr>
<td align="left">2460 (099C) (RC2460)</td>
<td align="left">MQRC_HMSG_ERROR</td>
</tr>
<tr>
<td align="left">2461 (099D) (RC2461)</td>
<td align="left">MQRC_CMHO_ERROR</td>
</tr>
<tr>
<td align="left">2462 (099E) (RC2462)</td>
<td align="left">MQRC_DMHO_ERROR</td>
</tr>
<tr>
<td align="left">2463 (099F) (RC2463)</td>
<td align="left">MQRC_SMPO_ERROR</td>
</tr>
<tr>
<td align="left">2464 (09A0) (RC2464)</td>
<td align="left">MQRC_IMPO_ERROR</td>
</tr>
<tr>
<td align="left">2465 (09A1) (RC2465)</td>
<td align="left">MQRC_PROPERTY_NAME_TOO_BIG</td>
</tr>
<tr>
<td align="left">2466 (09A2) (RC2466)</td>
<td align="left">MQRC_PROP_VALUE_NOT_CONVERTED</td>
</tr>
<tr>
<td align="left">2467 (09A3) (RC2467)</td>
<td align="left">MQRC_PROP_TYPE_NOT_SUPPORTED</td>
</tr>
<tr>
<td align="left">2469 (09A5) (RC2469)</td>
<td align="left">MQRC_PROPERTY_VALUE_TOO_BIG</td>
</tr>
<tr>
<td align="left">2470 (09A6) (RC2470)</td>
<td align="left">MQRC_PROP_CONV_NOT_SUPPORTED</td>
</tr>
<tr>
<td align="left">2471 (09A7) (RC2471)</td>
<td align="left">MQRC_PROPERTY_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2472 (09A8) (RC2472)</td>
<td align="left">MQRC_PROP_NUMBER_FORMAT_ERROR</td>
</tr>
<tr>
<td align="left">2473 (09A9) (RC2473)</td>
<td align="left">MQRC_PROPERTY_TYPE_ERROR</td>
</tr>
<tr>
<td align="left">2478 (09AE) (RC2478)</td>
<td align="left">MQRC_PROPERTIES_TOO_BIG</td>
</tr>
<tr>
<td align="left">2479 (09AF) (RC2479)</td>
<td align="left">MQRC_PUT_NOT_RETAINED</td>
</tr>
<tr>
<td align="left">2480 (09B0) (RC2480)</td>
<td align="left">MQRC_ALIAS_TARGTYPE_CHANGED</td>
</tr>
<tr>
<td align="left">2481 (09B1) (RC2481)</td>
<td align="left">MQRC_DMPO_ERROR</td>
</tr>
<tr>
<td align="left">2482 (09B2) (RC2482)</td>
<td align="left">MQRC_PD_ERROR</td>
</tr>
<tr>
<td align="left">2483 (09B3) (RC2483)</td>
<td align="left">MQRC_CALLBACK_TYPE_ERROR</td>
</tr>
<tr>
<td align="left">2484 (09B4) (RC2484)</td>
<td align="left">MQRC_CBD_OPTIONS_ERROR</td>
</tr>
<tr>
<td align="left">2485 (09B5) (RC2485)</td>
<td align="left">MQRC_MAX_MSG_LENGTH_ERROR</td>
</tr>
<tr>
<td align="left">2486 (09B6) (RC2486)</td>
<td align="left">MQRC_CALLBACK_ROUTINE_ERROR</td>
</tr>
<tr>
<td align="left">[z/OS]2487 (09B7) (RC2487)</td>
<td align="left">MQRC_CALLBACK_LINK_ERROR</td>
</tr>
<tr>
<td align="left">2488 (09B8) (RC2488)</td>
<td align="left">MQRC_OPERATION_ERROR</td>
</tr>
<tr>
<td align="left">2489 (09B9) (RC2489)</td>
<td align="left">MQRC_BMHO_ERROR</td>
</tr>
<tr>
<td align="left">2490 (09BA) (RC2490)</td>
<td align="left">MQRC_UNSUPPORTED_PROPERTY</td>
</tr>
<tr>
<td align="left">2492 (09BC) (RC2492)</td>
<td align="left">MQRC_PROP_NAME_NOT_CONVERTED</td>
</tr>
<tr>
<td align="left">2494 (09BE) (RC2494)</td>
<td align="left">MQRC_GET_ENABLED</td>
</tr>
<tr>
<td align="left">2495 (09BF) (RC2495)</td>
<td align="left">MQRC_MODULE_NOT_FOUND</td>
</tr>
<tr>
<td align="left">2496 (09C0) (RC2496)</td>
<td align="left">MQRC_MODULE_INVALID</td>
</tr>
<tr>
<td align="left">2497 (09C1) (RC2497)</td>
<td align="left">MQRC_MODULE_ENTRY_NOT_FOUND</td>
</tr>
<tr>
<td align="left">2498 (09C2) (RC2498)</td>
<td align="left">MQRC_MIXED_CONTENT_NOT_ALLOWED</td>
</tr>
<tr>
<td align="left">2499 (09C3) (RC2499)</td>
<td align="left">MQRC_MSG_HANDLE_IN_USE</td>
</tr>
<tr>
<td align="left">2500 (09C4) (RC2500)</td>
<td align="left">MQRC_HCONN_ASYNC_ACTIVE</td>
</tr>
<tr>
<td align="left">2501 (09C5) (RC2501)</td>
<td align="left">MQRC_MHBO_ERROR</td>
</tr>
<tr>
<td align="left">2502 (09C6) (RC2502)</td>
<td align="left">MQRC_PUBLICATION_FAILURE</td>
</tr>
<tr>
<td align="left">2503 (09C7) (RC2503)</td>
<td align="left">MQRC_SUB_INHIBITED</td>
</tr>
<tr>
<td align="left">2504 (09C8) (RC2504)</td>
<td align="left">MQRC_SELECTOR_ALWAYS_FALSE</td>
</tr>
<tr>
<td align="left">2507 (09CB) (RC2507)</td>
<td align="left">MQRC_XEPO_ERROR</td>
</tr>
<tr>
<td align="left">2509 (09CD) (RC2509)</td>
<td align="left">MQRC_DURABILITY_NOT_ALTERABLE</td>
</tr>
<tr>
<td align="left">2510 (09CE) (RC2510)</td>
<td align="left">MQRC_TOPIC_NOT_ALTERABLE</td>
</tr>
<tr>
<td align="left">2512 (09D0) (RC2512)</td>
<td align="left">MQRC_SUBLEVEL_NOT_ALTERABLE</td>
</tr>
<tr>
<td align="left">2513 (09D1) (RC2513)</td>
<td align="left">MQRC_PROPERTY_NAME_LENGTH_ERR</td>
</tr>
<tr>
<td align="left">2514 (09D2) (RC2514)</td>
<td align="left">MQRC_DUPLICATE_GROUP_SUB</td>
</tr>
<tr>
<td align="left">2515 (09D3) (RC2515)</td>
<td align="left">MQRC_GROUPING_NOT_ALTERABLE</td>
</tr>
<tr>
<td align="left">2516 (09D4) (RC2516)</td>
<td align="left">MQRC_SELECTOR_INVALID_FOR_TYPE</td>
</tr>
<tr>
<td align="left">2517 (09D5) (RC2517)</td>
<td align="left">MQRC_HOBJ_QUIESCED</td>
</tr>
<tr>
<td align="left">2518 (09D6) (RC2518)</td>
<td align="left">MQRC_HOBJ_QUIESCED_NO_MSGS</td>
</tr>
<tr>
<td align="left">2519 (09D7) (RC2519)</td>
<td align="left">MQRC_SELECTION_STRING_ERROR</td>
</tr>
<tr>
<td align="left">2520 (09D8) (RC2520)</td>
<td align="left">MQRC_RES_OBJECT_STRING_ERROR</td>
</tr>
<tr>
<td align="left">2521 (09D9) (RC2521)</td>
<td align="left">MQRC_CONNECTION_SUSPENDED</td>
</tr>
<tr>
<td align="left">2522 (09DA) (RC2522)</td>
<td align="left">MQRC_INVALID_DESTINATION</td>
</tr>
<tr>
<td align="left">2523 (09DB) (RC2523)</td>
<td align="left">MQRC_INVALID_SUBSCRIPTION</td>
</tr>
<tr>
<td align="left">2524 (09DC) (RC2524)</td>
<td align="left">MQRC_SELECTOR_NOT_ALTERABLE</td>
</tr>
<tr>
<td align="left">2525 (09DD) (RC2525)</td>
<td align="left">MQRC_RETAINED_MSG_Q_ERROR</td>
</tr>
<tr>
<td align="left">2526 (09DE) (RC2526)</td>
<td align="left">MQRC_RETAINED_NOT_DELIVERED</td>
</tr>
<tr>
<td align="left">2527 (09DF) (RC2527)</td>
<td align="left">MQRC_RFH_RESTRICTED_FORMAT_ERR</td>
</tr>
<tr>
<td align="left">2528 (09E0) (RC2528)</td>
<td align="left">MQRC_CONNECTION_STOPPED</td>
</tr>
<tr>
<td align="left">2529 (09E1) (RC2529)</td>
<td align="left">MQRC_ASYNC_UOW_CONFLICT</td>
</tr>
<tr>
<td align="left">2530 (09E2) (RC2530)</td>
<td align="left">MQRC_ASYNC_XA_CONFLICT</td>
</tr>
<tr>
<td align="left">2531 (09E3) (RC2531)</td>
<td align="left">MQRC_PUBSUB_INHIBITED</td>
</tr>
<tr>
<td align="left">2532 (09E4) (RC2532)</td>
<td align="left">MQRC_MSG_HANDLE_COPY_FAILURE</td>
</tr>
<tr>
<td align="left">2533 (09E5) (RC2533)</td>
<td align="left">MQRC_DEST_CLASS_NOT_ALTERABLE</td>
</tr>
<tr>
<td align="left">2534 (09E6) (RC2534)</td>
<td align="left">MQRC_OPERATION_NOT_ALLOWED</td>
</tr>
<tr>
<td align="left">2535 (09E7)</td>
<td align="left">MQRC_ACTION_ERROR</td>
</tr>
<tr>
<td align="left">2537 (09E9) (RC2537)</td>
<td align="left">MQRC_CHANNEL_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2538 (09EA) (RC2538)</td>
<td align="left">MQRC_HOST_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2539 (09EB) (RC2539)</td>
<td align="left">MQRC_CHANNEL_CONFIG_ERROR</td>
</tr>
<tr>
<td align="left">2540 (09EC) (RC2540)</td>
<td align="left">MQRC_UNKNOWN_CHANNEL_NAME</td>
</tr>
<tr>
<td align="left">2541 (09ED) (RC2541)</td>
<td align="left">MQRC_LOOPING_PUBLICATION</td>
</tr>
<tr>
<td align="left">2543 (09EF) (RC2543)</td>
<td align="left">MQRC_STANDBY_Q_MGR</td>
</tr>
<tr>
<td align="left">2544 (09F0) (RC2544)</td>
<td align="left">MQRC_RECONNECTING</td>
</tr>
<tr>
<td align="left">2545 (09F1) (RC2545)</td>
<td align="left">MQRC_RECONNECTED</td>
</tr>
<tr>
<td align="left">2546 (09F2) (RC2546)</td>
<td align="left">MQRC_RECONNECT_QMID_MISMATCH</td>
</tr>
<tr>
<td align="left">2547 (09F3) (RC2547)</td>
<td align="left">MQRC_RECONNECT_INCOMPATIBLE</td>
</tr>
<tr>
<td align="left">2548 (09F4) (RC2548)</td>
<td align="left">MQRC_RECONNECT_FAILED</td>
</tr>
<tr>
<td align="left">2549 (09F5) (RC2549)</td>
<td align="left">MQRC_CALL_INTERRUPTED</td>
</tr>
<tr>
<td align="left">2550 (09F6) (RC2550)</td>
<td align="left">MQRC_NO_SUBS_MATCHED</td>
</tr>
<tr>
<td align="left">2551 (09F7) (RC2551)</td>
<td align="left">MQRC_SELECTION_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2552 (09F8) (RC2552)</td>
<td align="left">MQRC_CHANNEL_SSL_WARNING</td>
</tr>
<tr>
<td align="left">2553 (09F9) (RC2553)</td>
<td align="left">MQRC_OCSP_URL_ERROR</td>
</tr>
<tr>
<td align="left">2554 (09FA) (RC2554)</td>
<td align="left">MQRC_CONTENT_ERROR</td>
</tr>
<tr>
<td align="left">2555 (09FB) (RC2555)</td>
<td align="left">MQRC_RECONNECT_Q_MGR_REQD</td>
</tr>
<tr>
<td align="left">2556 (09FC) (RC2556)</td>
<td align="left">MQRC_RECONNECT_TIMED_OUT</td>
</tr>
<tr>
<td align="left">[UNIX, Linux, Windows, IBM i]2557 (09FD) (RC2557)</td>
<td align="left">MQRC_PUBLISH_EXIT_ERROR</td>
</tr>
<tr>
<td align="left">2558 (09FE) (RC2558)</td>
<td align="left">MQRC_COMMINFO_ERROR</td>
</tr>
<tr>
<td align="left">2560 (0A00) (RC2560)</td>
<td align="left">MQRC_MULTICAST_ONLY</td>
</tr>
<tr>
<td align="left">[z/OS]2561 (0A01) (RC2561)</td>
<td align="left">MQRC_DATA_SET_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2562 (0A02) (RC2562)</td>
<td align="left">MQRC_GROUPING_NOT_ALLOWED</td>
</tr>
<tr>
<td align="left">2563 (0A03) (RC2563)</td>
<td align="left">MQRC_GROUP_ADDRESS_ERROR</td>
</tr>
<tr>
<td align="left">2564 (0A04) (RC2564)</td>
<td align="left">MQRC_MULTICAST_CONFIG_ERROR</td>
</tr>
<tr>
<td align="left">2565 (0A05) (RC2565)</td>
<td align="left">MQRC_MULTICAST_INTERFACE_ERROR</td>
</tr>
<tr>
<td align="left">2566 (0A06) (RC2566)</td>
<td align="left">MQRC_MULTICAST_SEND_ERROR</td>
</tr>
<tr>
<td align="left">2567 (0A07) (RC2567)</td>
<td align="left">MQRC_MULTICAST_INTERNAL_ERROR</td>
</tr>
<tr>
<td align="left">2568 (0A08) (RC2568)</td>
<td align="left">MQRC_CONNECTION_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2569 (0A09) (RC2569)</td>
<td align="left">MQRC_SYNCPOINT_NOT_ALLOWED</td>
</tr>
<tr>
<td align="left">2577 (0A11) (RC2577)</td>
<td align="left">MQRC_CHANNEL_BLOCKED</td>
</tr>
<tr>
<td align="left">2578 (0A12) (RC2578)</td>
<td align="left">MQRC_CHANNEL_BLOCKED_WARNING</td>
</tr>
<tr>
<td align="left">2583 (0A17) (RC2583)</td>
<td align="left">MQRC_INSTALLATION_MISMATCH</td>
</tr>
<tr>
<td align="left">2587 (0A1B) (RC2587)</td>
<td align="left">MQRC_HMSG_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2589 (0A1D) (RC2589) MQRC_INSTALLATION_MISSING</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">2590 (0A1E) (RC2590)</td>
<td align="left">MQRC_FASTPATH_NOT_AVAILABLE</td>
</tr>
<tr>
<td align="left">2591 (0A1F) (RC2591)</td>
<td align="left">MQRC_CIPHER_SPEC_NOT_SUITE_B</td>
</tr>
<tr>
<td align="left">2592 (0A20) (RC2592)</td>
<td align="left">MQRC_SUITE_B_ERROR</td>
</tr>
<tr>
<td align="left">2593 (0A21)(RC2593)</td>
<td align="left">MQRC_CERT_VAL_POLICY_ERROR</td>
</tr>
<tr>
<td align="left">2594 (0A22)(RC2594)</td>
<td align="left">MQRC_PASSWORD_PROTECTION_ERROR</td>
</tr>
<tr>
<td align="left">2595 (0A23)(RC2595)</td>
<td align="left">MQRC_CSP_ERROR</td>
</tr>
<tr>
<td align="left">2596 (0A24)(RC2596)</td>
<td align="left">MQRC_CERT_LABEL_NOT_ALLOWED</td>
</tr>
<tr>
<td align="left">2598 (0A26)(RC2598)</td>
<td align="left">MQRC_ADMIN_TOPIC_STRING_ERROR</td>
</tr>
<tr>
<td align="left">6100 (17D4) (RC6100)</td>
<td align="left">MQRC_REOPEN_EXCL_INPUT_ERROR</td>
</tr>
<tr>
<td align="left">6101 (17D5) (RC6101)</td>
<td align="left">MQRC_REOPEN_INQUIRE_ERROR</td>
</tr>
<tr>
<td align="left">6102 (17D6) (RC6102)</td>
<td align="left">MQRC_REOPEN_SAVED_CONTEXT_ERR</td>
</tr>
<tr>
<td align="left">6103 (17D7) (RC6103)</td>
<td align="left">MQRC_REOPEN_TEMPORARY_Q_ERROR</td>
</tr>
<tr>
<td align="left">6104 (17D8) (RC6104)</td>
<td align="left">MQRC_ATTRIBUTE_LOCKED</td>
</tr>
<tr>
<td align="left">6105 (17D9) (RC6105)</td>
<td align="left">MQRC_CURSOR_NOT_VALID</td>
</tr>
<tr>
<td align="left">6106 (17DA) (RC6106)</td>
<td align="left">MQRC_ENCODING_ERROR</td>
</tr>
<tr>
<td align="left">6107 (17DB) (RC6107)</td>
<td align="left">MQRC_STRUC_ID_ERROR</td>
</tr>
<tr>
<td align="left">6108 (17DC) (RC6108)</td>
<td align="left">MQRC_NULL_POINTER</td>
</tr>
<tr>
<td align="left">6109 (17DD) (RC6109)</td>
<td align="left">MQRC_NO_CONNECTION_REFERENCE</td>
</tr>
<tr>
<td align="left">6110 (17DE) (RC6110)</td>
<td align="left">MQRC_NO_BUFFER</td>
</tr>
<tr>
<td align="left">6111 (17DF) (RC6111)</td>
<td align="left">MQRC_BINARY_DATA_LENGTH_ERROR</td>
</tr>
<tr>
<td align="left">6112 (17E0) (RC6112)</td>
<td align="left">MQRC_BUFFER_NOT_AUTOMATIC</td>
</tr>
<tr>
<td align="left">6113 (17E1) (RC6113)</td>
<td align="left">MQRC_INSUFFICIENT_BUFFER</td>
</tr>
<tr>
<td align="left">6114 (17E2) (RC6114)</td>
<td align="left">MQRC_INSUFFICIENT_DATA</td>
</tr>
<tr>
<td align="left">6115 (17E3) (RC6115)</td>
<td align="left">MQRC_DATA_TRUNCATED</td>
</tr>
<tr>
<td align="left">6116 (17E4) (RC6116)</td>
<td align="left">MQRC_ZERO_LENGTH</td>
</tr>
<tr>
<td align="left">6117 (17E5) (RC6117)</td>
<td align="left">MQRC_NEGATIVE_LENGTH</td>
</tr>
<tr>
<td align="left">6118 (17E6) (RC6118)</td>
<td align="left">MQRC_NEGATIVE_OFFSET</td>
</tr>
<tr>
<td align="left">6119 (17E7) (RC6119)</td>
<td align="left">MQRC_INCONSISTENT_FORMAT</td>
</tr>
<tr>
<td align="left">6120 (17E8) (RC6120)</td>
<td align="left">MQRC_INCONSISTENT_OBJECT_STATE</td>
</tr>
<tr>
<td align="left">6121 (17E9) (RC6121)</td>
<td align="left">MQRC_CONTEXT_OBJECT_NOT_VALID</td>
</tr>
<tr>
<td align="left">6122 (17EA) (RC6122)</td>
<td align="left">MQRC_CONTEXT_OPEN_ERROR</td>
</tr>
<tr>
<td align="left">6123 (17EB) (RC6123)</td>
<td align="left">MQRC_STRUC_LENGTH_ERROR</td>
</tr>
<tr>
<td align="left">6124 (17EC) (RC6124)</td>
<td align="left">MQRC_NOT_CONNECTED</td>
</tr>
<tr>
<td align="left">6125 (17ED) (RC6125)</td>
<td align="left">MQRC_NOT_OPEN</td>
</tr>
<tr>
<td align="left">6126 (17EE) (RC6126)</td>
<td align="left">MQRC_DISTRIBUTION_LIST_EMPTY</td>
</tr>
<tr>
<td align="left">6127 (17EF) (RC6127)</td>
<td align="left">MQRC_INCONSISTENT_OPEN_OPTIONS</td>
</tr>
<tr>
<td align="left">6128 (17FO) (RC6128)</td>
<td align="left">MQRC_WRONG_VERSION</td>
</tr>
<tr>
<td align="left">6129 (17F1) (RC6129)</td>
<td align="left">MQRC_REFERENCE_ERROR</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>MQ</category>
      </categories>
      <tags>
        <tag>IBMMQ</tag>
        <tag>ErrorCode</tag>
      </tags>
  </entry>
</search>
