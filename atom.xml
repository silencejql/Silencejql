<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Silencejql</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://silencejql.gitee.io/"/>
  <updated>2021-06-15T06:44:01.986Z</updated>
  <id>https://silencejql.gitee.io/</id>
  
  <author>
    <name>Justin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>220025西安比亚迪调试记录</title>
    <link href="https://silencejql.gitee.io/220025%E8%A5%BF%E5%AE%89%E6%AF%94%E4%BA%9A%E8%BF%AA%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95.html"/>
    <id>https://silencejql.gitee.io/220025西安比亚迪调试记录.html</id>
    <published>2021-06-10T02:09:31.000Z</published>
    <updated>2021-06-15T06:44:01.986Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Enter password to read！" />    <label for="pass">Enter password to read！</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+vAyQ+STaq1swuaYf9QMFYO5WJcmizizI1HVj5s6KiDgYpmC1Q8yNLu/62dV0DaV+HzDEBXgzk8w1l5PakqMCjJOezqymxZTO/L8AyEvzeGBXyGXM6/KrSwSupZiyJlZpTONSyKtflDRx4771eZAzN526K3qn0hf8WqjhHmp/J1cMX5yjwNCupTUCFCyARNhDQ4dfZN0fjsQ6QKoYOCvkeaW1ueqdaBa/nPEVDQCht6CYCDt53GAOVgbSiNchEuxdnALkgBql5GYewnZPG/TlGTf6MKC6RwhMdUj/ReAdoQ3HEpIPNFDAl++Lvz9tTOnECLhZ8ph/6CPI/vtGYCV6gqfi+xmbUVhoH+T9MyK2S5AoC2gJ9cnoVGvNfuMIe3Dv5HVTzW/q7sQeul5vW8xLvRjbFE7uRVDWW420R1fU+KBq4AeLJbTwEJxbcYFI9Vf0mgMtgrSEcdtHfuQLbm6gcS8gUpNUO0UthhdQ91ItRYUHvxaBnB/3YjjmNgZuk5hEO4GLorODRTA/x9KsSGPClVL3cOUeTTg4CZG4WwTV2fFRBQ59kTHw1uDXRvB6WR5fQAU04W0oDX2AXgFW8PfZEri1iLviruGh5wmTaY5EvtITl+oUU4mli45gnQm+Td3kSXpT9pfgCkJYymZm63A+Ssb5L0zHcRYo9Ka9IA4DqL1kQngnfn6f+DijjyjJkG/7b9wlo5po3ZhSlKgec3XUb1D/7OM61hR82Ak9h/1eijU9MXWaFFL6+ffR4Mci3VrcjUZsnsK1d0DWP/8H2IF01lhSVLAOCDbMd/zw5Sqber7yp47T9Tmvqe8FQyuBL0E78xPdvQSNiwEHDmEAx0QtRTZkCKHGvncfE9RKBd8hHnxW5ADWdiJm8+n7ByE+bUYqSJac5WmBNbdfblk5alqi8OyDL2Yq7GpLN783NN8uA8+C4hTIdCnK2hOspEmX3NIuooUfV2CKd+uuQLagbu2DgkX6cOQsUcHk3HXv5V7EV/mPgX3TKdUJWus1KqQsDwKu+NksWpx9WNhI3+KsOXjlUaBg/iqe+rFjBBpTOAv525P3uih+/okm1AVVdhZxlv7N5/awMR/B53Tp52PPlplgigsgbsQmofEvwQRtk/nqRV7CQBMwidLY5tScutFO+NcMmDBGx/NzJgAHO089wdp2/8iHo5T1DCckf0d10fsrTxRkPQ9I788yq68vMa7AUEqS6v2OFDv+rTrfwJnvZGs6mKS16zgAQ+bmBZIfaV6aUDKFD7LOX2pOjtwaAV2BXYsHZyC9GdugpJP1JKWPXHFKh7sRTMZGZp0XxIDZaYGDEoU5oPOsnQCrh4mSHax/hJRG+EQppPFnnoB0AAnfNek9n5113GgMJy62DOWOaS8ZeUVhNLFLEDaYlfitIGQVmJ4svSNfSjfTZDpTF3/Kh6vF4n/gyC/hB3zlhHbIYqrqcYo2/quwQV1Z04iVb4j/hRKsGrAY0QBml9PsoI0N7juxeRIeC0Q+hAUfY+TsudYh5UiFc8axfpPxWlT+y5U65LTBtkgm3ShaQM84arbNJKbH6ssH/8ulcQKkvqCr3dqX6MWkQwRFVuReCw2ZUyvH04goKl2x1YGOtjPoj8r6UbM55nzhClOGDTKHHttDI/+oNGoQhrmAUGLQzDVn/6w38sUxr3gdtL7JQW5uVCvfkLpqaz7a3fYA+1YQyfKS+BT7WM7ko9suuu/WTet3eusVDuqbTpuWXPB60FbzbkFo/viUBLGT+7K6Ddly+UcxW8pFBsFYrsEXAr9E+umKJInGqEy7qzxxnjPp0X5vII+4cEiZWWjb8wR7DTioayid7//+LhTD68/yx0N3q0i0vMImqXf1SQ2t3pbvcuitgVouQ7kDd8C1rvxzAscqpwRYY4iUb+4fPQayvqjOZ2JNogf2mxppsfeBCgVrB9jjSNX3RwCbsQM7Ar7WCcUnxu1eXdbvoPrPsHo0rkgY3/hXFMD4iiEcDGO7DElJ7UwFkOhSHK3nwUzUDB7eyiCFP6/qtvtMq08ham2z4ihFXSqZioW1WOFCksNC1WIHZFmZ8bs589/8Bbj/tqHhxe1QGY8xagHdSHX8FQ2WA1IOV35yapF0LAuFiXZyHV9NWaEepnizjGfzMOdrO5987UKMl95sSXgt05GyKBEGQtTYoeGwu4XNcTsLX7f3n72z4ODUtxJv+q1y92+UWeq/g8YN1lGiBtAx/p00e9rgJ4FfQR8fiac2atuVS30OaEFTIO11BgNpkgNfB+31GY8cI1SBq02+V77opcuH5b9Rzw46TzBZ8e7kHYYvnF3VGxCD23SkpUmHQJKfazRqkiPzItsf0ksTqpfw4rElz8jsapBsBfJOjkq5nMkaJtlFHhvqQkiOd1NWsPn9uZllBaH0FmKcR7lWVQj/ZJX4LcgiQ8keZAkiV7K/Jsl6op1hOY8GaNtEgF46QOSZ0PZEFutXiVt8qFKYLcg53YWnF8unJxczUqWIE+0aUJmL9NxER8PrMjzh9GVJzcLEJnQzvXOPs3NWfo6paeOOsYNWR48+hwKp+oz5QGRJOTUhGKNbCvr+bJxaaDB+bDMnuj3/JWSwXCayYS9wga2ZgOlMhH6T7+qW3BY6WRmC89W/+bdwBQ2RYF8CwGgFflFKmrN/N7lb402anSO6BBxytWax8L0qDe3L3RPVxBBGLh4yatWGKr7vlTHzB0I9N009/GXWu9I0Q6Tq00+wFR8rkc8dlmf5pj3plNPtCGICU6Kb1sb3AN2voi22Rbp5PmQ4zKyOTwzH1saW6Z4FMRU4Az8DLYN0rX26gUP+NofVJC9jCJRFBLJhKo6dG/zixULwXZ8ZbE72X1OeZqxEN3n98zSyqPeudiVnTpFGRMwg+WvLrDUTSqvpwnYxllbliWRpIyt4OQMDNmKmatf8pJoN5rsgIrtr9wJRNMbQFL4VJi7HqalL0PxTaCCyiHiVf3iLjD562GiF19hxOmV3h1a/4hk0SIiYxSZq2V0VkQLxUIlOneUs/u0XTzpQ1nwNJFmcZqGZVBZ5cQQJwrfDIx8M+sJAZSfRCCUOfNKSOwkAz8S9wkLVATUtDlI4q78Tzn3oPtHuPRj7EfTtqQjKre3lwR0VnEkiLgOHaLeib+/34zMY9ucArFqxkB8qNVqoLRLdFCok2jS1QP48CNdDYWTskZOBI6u+xTXsU28j+TZi4Wrrk0Nvw/n0ULk7f5mKI9y1i8Tss27TTmvNUboW4pRzeYoMQVB+e0KCXLdO/TuvN+1TK48Gw+CXeV+d3KaT507SQQMRrqdxLifK472OP7JAsFwHFfDOYaKJN1KujrCD9loZv48nDE6V9sOHrfW6+edZ3ceFEgTV2BWBtMcRlFCtWjB8YND2MZI19tVWv7/pYo7YZ0ID+169/3Pdr95QvwxUkKgKU0IPh94Kblte5gVnb/x+cMG3LVYSzwNwmHE471htpgr/fH6/kXK/kg+IiQZmVRiUGnu+AgiUE1ijuXJl9HXrUHDmutKtGvkg8fH+8ZTKi+i2z0xvOPxC0q44bw7V5sTh1QQYjXJmglFmXAd6766F/Apfp/y5WPpzt0guJsBzIppZClLqx9orUu79NOczQSnMWUw2/nqzEFJmjAafHZW58ADaL8trW1o1dXPjogjfVgEJaDGfJ/pSGQjoO0ezBZF1Lsc0WDPJhNuQi+fsb5vkD7RcfKGgff6/7IwyW1t10rbBbsMJKeq3vZmQbYyFwtpGxh7cTfu+hqxXm2/04mVzfTMAKtyVuwWQcBO4soU5IgYv4eLbWtUw01kvF6EYL5CLwsDJTW9JE9rANUkIM55lfn+w5+4ibaHTLui2I7LvIaY6eaeC61yMDrG4NsRetGL1/PyIOJvbk6yjuGBOOHzgIbQJySs50ydj5W+ZTKeOqCz9ffS3MMsVmVbAksaG5w9iUqZW7n1h3O6QjKYMsz1C4eKlaiXJLVj6Sfv7sjXJWM0eIQ4ry+gwHR2MPHWApJR/NFh9r6R0fb/zjGHudvbgTXKaw+eM1PVxgeg+RdLyX5x9qOOwC8Q46zbrQxWR1emw4YfAU729wacpWdt8jLaSFvY4SoNvMaHeXPTy9MwYMTHi/fkBm8s1yNs0zexgrX+rwBM0vhNfi05mNNsOhpLrpp5r5fBz2RkW1uMQVLNDifekswIc9ht/DfQDYama21ExXCUlAWCNUcrELXGhtW2Jxnrh8aaxhUqHlvABU5c5tbtW86Rf2gwXxtVV0j6Qpw5C3OOGAahHXnKvxZdeK4VwpWHepVO2mLiM26XQWKEGMDH5uI+PVsFlL6wXtQTmktCGdzciKy5xAQ9eg82UPZCMHv2235KNIMB49oo5gYiP/kMKorIsHyIpocDA5jK42o/YCJSrZ9aiUJxbhq55i6zWvkJAiKrgxFt5eyPuj4jSoGm9fDFuHI0OAg0faBn7uIg2g5xLQiBIdaYFIiAXx8FoOhlf+8IhumCRe5CwCdXNPipkO614p1aH915fc5OVJZmlwhgR580Zq2/GtRSsqbVz0lb1SCIU042SC5znyw/ask34tkm7RojstSFQvQ0JbwqdStu33LtcYSXGxVbfXo5CZ+mFKe9lC+RGPB+T+XUu83trefxI9fDdnJA3bmLRinxzwI8/nOpSfqlthQWE1wBfCNICdXIWx/OMWIMnlgw0iuxwMaq9I0jLEMu9Ky5WzFV2v5Y+Byz75Kfaw36vNUVzPQgYJqrHgpAeIYdDRZXcw4ysLNyScC9NM8cMxWf43ihUCdy18LUwrFXgl3zmpiWxFlXFJ2hZ6bOH6/8Tn4LSOLhG7rHdZNnWjYvnqOQ4pMEmfk9WYYDvO+TOYeCXjPkkrQlAKsbMYBM4/NmLYY1EN22reX81jlX8XkGcYJLk7lARLLp3OMt9AonmBNbZUbPjUkb6t9G4roTS7tRdvYGKpNbz1lN61x6uF/A0U/TSPYN7oy28v0nmOSHJLll5k1aMPJL/FFDEVQEECo97asUZRMn6UvaiuAmibcDPPUPdNMTSSC3NU7tGkfk+h+WdXqKix/cz7+MIgyLdH+ONAO/6As1yrD0rLmNNh5/1K94c0UC16yeHog1GOrS3k1G6l72z+VdeNDpKR3a27ULPkx+WYSAwtovpAqxGYFlFXC5NBM+WZikFJDdWeT2LuBnTXH+GjpB6Pos8JENG+jRYpNJ+JdV5B4MvpTmSksmE9y5AJsbqJ5CqqMkH3TimIkUDH5bj9pPzseK/lz78Hn07cDEikIxveKYvfIJMowkKNQ3AwOugMhf5fvMSAhgSZu+4xj4kNAtUjnu34hft4sHloITAffuVYIKXkdC5mUd83O6bF7KgCLHVM+9Qkn1InnlaOOd8wWFkXumSoJEltQ5eO8WiZJXr7yCOQDESYhq+kDlv7SKqp53cBP4kwHELSvSl+6J6vx6Xx57uyWE+ZoGgCm1UVcgQqNdIdiYODPgz5zoFmuCVQFdPwaOGvs06TDnrCO4IfvaZRBm4wdx2fFW9ZpHoYMCl/Irsqh8Brzlwy98vQy+OMj+YyJuUiAJmySTHsMJSGFqxkVE8sfzn+EEfmDMCeAl1qR9nO0JFeLejFy9AiLoylluxVmcFEW3CBwBTMhk/F4TqNWq1k3YTmRrS/ZCtqTHW15Cn609VXgmUYpwp8/SnMVXjSMMYSDdpV3R5luNsth6GZykR75kj4y2L81w0otD5G8XU6DouU9plS9sNlnkljj5NLz5RXwlHIy2iMLsILO6GUhNPdu9CSiWKvIMOOgsXyJwhduztPvyqG5v4AR82bO+BucRojxBKr9n8XPxwfF5DnjYBi/4j0XPywv8l3nBsKxMha/M5mt4OWyY27Jm9foFNqnBwWE9pmi4PSGOpHTWtF/ivJY+PnZMUT6aKCY3K3Xy0ycvY8O8iHrAf4zOvW9dsrQo6c2udWYxkJFoxjtydKhyWtR8vcYglYjgrKCjbaK9JW8oXyhUw1OyHy+eS3xGbItIb685x3VCSjX6fZ8ys/eaeN+WSnkb+g/lXJsLItzde3LHJaFTow7lWgzASlLrNbtK2fIAQKPTfa0YcchinFu8UFXmTj0VEk6HDABlMzAOaLnMhFnKZU3P5/8UsnRDMbKXbZxsxjy+n+a+BFRqddV3ozxJk8hmCTL+Nlcrh+FRI2brVtPACbW/ra/2GVFaZjxRv4WWYS/Fh4OMn6jUMuefrGX7dfVsbDARNQk03rQl734bQC+bnVfeNmwykTXB+HCKrIAjauE16+8N4YVeIGnEwrW0RLJzuxMEDx7qn0IRm1j667gv54GhEomMQ8QECKKt1jA/G5q+H405EixK5uC61wALigU8dybb6783t+QOyPKr0tU68Ni90W0W61acZZ7yDwj5LBaVZKVGtzimIE3AbxYMm9056mIx2qTUc0WSF6hq7ZrK0jJF6btaBp099qwJysiOLdHgQyleQugdvWwyb9LEOZzWqJdh0Fp112W4HVsv0dd622RkpMv/+qvB9EPRzGooemMwCDPZJATu0CumO17LC73rIOkWoRxoGxRJ5fSAyapC8XWRRzzCs+RD+gcdp/WVqEp6XZbF9WtsDq0pbeZxzSgsQ6uu+GDSTBdTpKMs/mKk9F/IxbNeDsWdQSyHoLBgYJ4ysRqBGN3p8axsjDCbwImEolgmUQm966mErtFnFW+2gikQZOoWUSRCjLvElDqVYIzVhJNI+B/IVgMz3AOQKc0UPMwFncYKHzYJbdS2xxk2cUuS3myoGoBkCfvtE2IaOF105mc2bjQ+IvedWi2wrQJ71dh3xk+pJgtOIh1ddfCTrhxPqxXu+p68nFWMHxjrYf+YiIUHBsMv7g5Ua0lj36VN8RAkCS6tSYNh/LQmaG7d1mNk4T2kGRyvs9vBqhphpUAxvJZEkVGIUU6yxvE03NrihOhd+2ftxTr7zVK/iWA1rvZb4Dkm8WJs8WpucK6rN1a05otQVRPtO2Js0gMpMImAhBW8ZvjVWeNEevMhhbwPesLt4hSrjCTIdftmlzI6e2t38yidGS6PQeL+3jWXog4nWJSod7R16bbiYdhXDl5Xx76EuRHRZhfTG7zuc8+uHNGo/XMcl0+itpkd41xyV7TnFYQXpgUICznOSCHQC8pIXFM28r7nRRojuGk6lhle/0cz2gdOqjIs+wPwXYz9C//vQOgGVly7ngK6HbwOD5s7VWPDHh6LaEXtWYRbfWDfU8tdPAFVUFHP1/lgdMnZyWtKVFpnvIzpWB6Tb+0TzKyA0SVwd8xV5VMkFzQLWVuaJGmHt0biEivKOs+eYdoxvZg5y/K8GbsvbQLB6KpfgzMyow0M1AYcVsNoU+WryH+HjLFkhSoYfWKDsHMswqgUQ8LjKZtum78UhoFFpGhBN05L9/bDZVQNstjbpvsXg/IkP8Spdz9crThxneA8ETuNjOcKXd3nnJUC/JX5R87E+xq3Vygdx7cwobBp92IPA=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      交钱！
    
    </summary>
    
      <category term="工作" scheme="https://silencejql.gitee.io/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>BBK程序解析</title>
    <link href="https://silencejql.gitee.io/BBK%E7%A8%8B%E5%BA%8F%E8%A7%A3%E6%9E%90.html"/>
    <id>https://silencejql.gitee.io/BBK程序解析.html</id>
    <published>2021-04-27T08:40:16.000Z</published>
    <updated>2021-04-28T01:19:15.035Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center>前面啥也没有<a id="more"></a><h2 id="FreeFormsAlways"><a href="#FreeFormsAlways" class="headerlink" title="FreeFormsAlways"></a>FreeFormsAlways</h2><p>程序入口Main()</p><p>CheckAppHasStart()//判断程序是否已经打开</p><blockquote><p>Initialize()//</p><blockquote><p>BackupStart()//Log备份<br>Environment.GetCommandLineArgs()<br>System.Threading.Mutex(true, sysName, out IsNew)</p></blockquote></blockquote><p>GetStartFile()//获取启动程序文件名<br>SystemIni(OpenFile, ref Inform)//初始化程序并获取主界面</p><blockquote><p>ReadDataXml()读取xml文件</p><blockquote><p>Configs.ReadXml()读取配置文件<br>MyLoadXml(xDoc, GetFullPath(XmlFile))加载xml文件<br>UpdateObjectList()实例化对象列表中的对象<br>GreateProjectList()创建组合列表<br>CheckProjectList()检查<br>BeginExePro(“Always”)//执行Always线程<br>Run(Inform, true)//执行显示窗体</p></blockquote></blockquote><p>ExeProject()//执行组合</p><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;
前面啥也没有
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MQTT</title>
    <link href="https://silencejql.gitee.io/MQTT.html"/>
    <id>https://silencejql.gitee.io/MQTT.html</id>
    <published>2021-03-30T06:56:41.000Z</published>
    <updated>2021-03-30T07:16:35.592Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center>前面啥也没有<a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>MQTT（Message Queuing Telemetry Transport，消息队列遥测传输协议），是一种基于发布/订阅（publish/subscribe）模式的”轻量级”通讯协议，协议构建于TCP/IP协议上<br>MQTT协议有三种身份：发布者、代理、订阅者，发布者和订阅者都为客户端，代理为服务器，同时消息的发布者也可以是订阅者<br>MQTT数据包由：固定头（Fixed header）、可变头（Variable header）、消息体（payload）三部分构成</p><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;
前面啥也没有
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>BEP独立大灯数据接收</title>
    <link href="https://silencejql.gitee.io/BEP%E7%8B%AC%E7%AB%8B%E5%A4%A7%E7%81%AF%E6%95%B0%E6%8D%AE%E6%8E%A5%E6%94%B6.html"/>
    <id>https://silencejql.gitee.io/BEP独立大灯数据接收.html</id>
    <published>2021-03-20T06:40:18.000Z</published>
    <updated>2021-03-20T06:47:51.364Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center><p>上位机软件通过TCP读取独立大灯测试数据，参考武汉日产现场。</p><a id="more"></a><h2 id="BEP大灯配置"><a href="#BEP大灯配置" class="headerlink" title="BEP大灯配置"></a>BEP大灯配置</h2><p>SoftWare Config–NCA/Host Comm Settings中<br>NCA Setting使能Use Results Config File<br>关闭Send HLA Tests To Run</p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>NcaResults.xml<br>hoststring.xml</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;

&lt;p&gt;上位机软件通过TCP读取独立大灯测试数据，参考武汉日产现场。&lt;/p&gt;
    
    </summary>
    
    
      <category term="BEP独立大灯" scheme="https://silencejql.gitee.io/tags/BEP%E7%8B%AC%E7%AB%8B%E5%A4%A7%E7%81%AF/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法说明</title>
    <link href="https://silencejql.gitee.io/Markdown%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E.html"/>
    <id>https://silencejql.gitee.io/Markdown语法说明.html</id>
    <published>2021-01-04T07:39:26.000Z</published>
    <updated>2021-01-04T07:56:12.578Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center>[参考](https://www.appinn.com/markdown/)<a id="more"></a><h2 id="区块元素"><a href="#区块元素" class="headerlink" title="区块元素"></a>区块元素</h2><h3 id="段落和换行"><a href="#段落和换行" class="headerlink" title="段落和换行"></a>段落和换行</h3><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p><p>「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成 ``标签。</p><p>如果你确实想要依赖 Markdown 来插入 ``标签的话，在插入处先按入两个以上的空格然后回车。</p><p>的确，需要多费点事（多加空格）来产生 ，但是简单地「每个换行都转换为」的方法在 Markdown 中并不适合， Markdown 中 email 式的 区块引用 和多段落的 列表 在使用换行来排版的时候，不但更好用，还更方便阅读。</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。</p><p>类 Setext 形式是用底线的形式，利用 = （最高阶标题）和 - （第二阶标题），例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is an H1</span><br><span class="line">=============</span><br><span class="line">​</span><br><span class="line">This is an H2</span><br><span class="line">-------------</span><br></pre></td></tr></table></figure><p>任何数量的 = 和 - 都可以有效果。</p><p>类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 这是 H1</span></span><br><span class="line">​</span><br><span class="line"><span class="section">## 这是 H2</span></span><br><span class="line">​</span><br><span class="line"><span class="section">###### 这是 H6</span></span><br></pre></td></tr></table></figure><p>你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 #，而行尾的 # 数量也不用和开头一样（行首的井字符数量决定标题的阶数）：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 这是 H1 #</span></span><br><span class="line">​</span><br><span class="line"><span class="section">## 这是 H2 ##</span></span><br><span class="line">​</span><br><span class="line"><span class="section">### 这是 H3 ######</span></span><br></pre></td></tr></table></figure><h3 id="区块引用-Blockquotes"><a href="#区块引用-Blockquotes" class="headerlink" title="区块引用 Blockquotes"></a>区块引用 Blockquotes</h3><p>Markdown 标记区块引用是使用类似 email 中用 &gt; 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 &gt; ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">&gt; </span><br><span class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class="line">&gt; id sem consectetuer libero luctus adipiscing.</span><br><span class="line">Markdown 也允许你偷懒只在整个段落的第一行最前面加上 &gt; ：</span><br><span class="line"></span><br><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">​</span><br><span class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class="line">id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is the first level of quoting.</span><br><span class="line">&gt;</span><br><span class="line">&gt; &gt; This is nested blockquote.</span><br><span class="line">&gt;</span><br><span class="line">&gt; Back to the first level.</span><br></pre></td></tr></table></figure><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; ## 这是一个标题。</span><br><span class="line">&gt; </span><br><span class="line">&gt; 1.   这是第一行列表项。</span><br><span class="line">&gt; 2.   这是第二行列表项。</span><br><span class="line">&gt; </span><br><span class="line">&gt; 给出一些例子代码：</span><br><span class="line">&gt; </span><br><span class="line">&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</span><br></pre></td></tr></table></figure><p>任何像样的文本编辑器都能轻松地建立 email 型的引用。例如在 BBEdit 中，你可以选取文字后然后从选单中选择增加引用阶层。</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号、加号或是减号作为列表标记：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   Red</span><br><span class="line">*   Green</span><br><span class="line">*   Blue</span><br></pre></td></tr></table></figure><p>等同于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+   Red</span><br><span class="line">+   Green</span><br><span class="line">+   Blue</span><br></pre></td></tr></table></figure><p>也等同于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-   Red</span><br><span class="line">-   Green</span><br><span class="line">-   Blue</span><br></pre></td></tr></table></figure><p>有序列表则使用数字接着一个英文句点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.  Bird</span><br><span class="line">2.  McHale</span><br><span class="line">3.  Parish</span><br></pre></td></tr></table></figure><p>很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ol&gt;</span><br><span class="line">&lt;li&gt;Bird&lt;/li&gt;</span><br><span class="line">&lt;li&gt;McHale&lt;/li&gt;</span><br><span class="line">&lt;li&gt;Parish&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure><p>如果你的列表标记写成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.  Bird</span><br><span class="line">1.  McHale</span><br><span class="line">1.  Parish</span><br></pre></td></tr></table></figure><p>或甚至是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3. Bird</span><br><span class="line">1. McHale</span><br><span class="line">8. Parish</span><br></pre></td></tr></table></figure><p>你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。</p><p>如果你使用懒惰的写法，建议第一个项目最好还是从 1. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。</p><p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p><p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span><br><span class="line">    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">    viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br><span class="line">    Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>但是如果你懒，那也行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span><br><span class="line">Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br><span class="line">Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>如果列表项目间用空行分开，在输出 HTML 时 Markdown 就会将项目内容用 `` 标签包起来，举例来说：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*   Bird</span><br><span class="line">*   Magic</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;Bird&lt;/li&gt;</span><br><span class="line">&lt;li&gt;Magic&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>但是这个：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   Bird</span><br><span class="line">​</span><br><span class="line">*   Magic</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.  This is a list item with two paragraphs. Lorem ipsum dolor</span><br><span class="line">    sit amet, consectetuer adipiscing elit. Aliquam hendrerit</span><br><span class="line">    mi posuere lectus.</span><br><span class="line">​</span><br><span class="line">    Vestibulum enim wisi, viverra nec, fringilla in, laoreet</span><br><span class="line">    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum</span><br><span class="line">    sit amet velit.</span><br><span class="line"></span><br><span class="line">2.  Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*   This is a list item with two paragraphs.</span><br><span class="line">​</span><br><span class="line">    This is the second paragraph in the list item. You&apos;re</span><br><span class="line">only required to indent the first line. Lorem ipsum dolor</span><br><span class="line">sit amet, consectetuer adipiscing elit.</span><br><span class="line">​</span><br><span class="line">*   Another item in the same list.</span><br></pre></td></tr></table></figure><p>如果要在列表项目内放进引用，那 &gt; 就需要缩进：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*   A list item with a blockquote:</span><br><span class="line">​</span><br><span class="line">    &gt; This is a blockquote</span><br><span class="line">    &gt; inside a list item.</span><br></pre></td></tr></table></figure><p>如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   一列表项包含一个列表区块：</span><br><span class="line">​</span><br><span class="line">        &lt;代码写在这&gt;</span><br></pre></td></tr></table></figure><p>当然，项目列表很可能会不小心产生，像是下面这样的写法：</p><p><code>1986. What a great season.</code></p><p>换句话说，也就是在行首出现数字-句点-空白，要避免这样的状况，你可以在句点前面加上反斜杠。</p><p><code>1986\. What a great season.</code></p><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 和 标签来把代码区块包起来。</p><p>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：</p><p>这是一个普通段落：<br>​<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个代码区块。</span><br></pre></td></tr></table></figure></p><p>Markdown 会转换成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;这是一个普通段落：&lt;/p&gt;</span><br><span class="line">​</span><br><span class="line">&lt;pre&gt;&lt;code&gt;这是一个代码区块。</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Here is an example of AppleScript:</span><br><span class="line">​</span><br><span class="line">    tell application &quot;Foo&quot;</span><br><span class="line">        beep</span><br><span class="line">    end tell</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;</span><br><span class="line">​</span><br><span class="line">&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;</span><br><span class="line">    beep</span><br><span class="line">end tell</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p><p>在代码区块里面， &amp; 、 &lt; 和 &gt; 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">    &amp;copy; 2004 Foo Corporation</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;</span><br><span class="line">    &amp;amp;copy; 2004 Foo Corporation</span><br><span class="line">&amp;lt;/div&amp;gt;</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。</p><p>分隔线<br>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* * *</span><br><span class="line">​</span><br><span class="line">***</span><br><span class="line">​</span><br><span class="line">*****</span><br><span class="line">​</span><br><span class="line">- - -</span><br><span class="line">​</span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure><h2 id="区段元素"><a href="#区段元素" class="headerlink" title="区段元素"></a>区段元素</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。</p><p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p><p>要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This is [an example](http://example.com/ &quot;Title&quot;) inline link.</span><br><span class="line">​</span><br><span class="line">[This link](http://example.net/) has no title attribute.</span><br></pre></td></tr></table></figure><p>会产生：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;</span><br><span class="line">an example&lt;/a&gt; inline link.&lt;/p&gt;</span><br><span class="line">​</span><br><span class="line">&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no</span><br><span class="line">title attribute.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>如果你是要链接到同样主机的资源，你可以使用相对路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">See my [About](/about/) page for details.</span><br></pre></td></tr></table></figure><p>参考式的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is [an example][id] reference-style link.</span><br></pre></td></tr></table></figure><p>你也可以选择性地在两个方括号中间加上一个空格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is [an example] [id] reference-style link.</span><br></pre></td></tr></table></figure><p>接着，在文件的任意处，你可以把这个标记的链接内容定义出来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]: http://example.com/  &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>链接内容定义的形式为：</p><p>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字<br>接着一个冒号<br>接着一个以上的空格或制表符<br>接着链接的网址<br>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着<br>下面这三种链接的定义都是相同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[foo]: http://example.com/  &quot;Optional Title Here&quot;</span><br><span class="line">[foo]: http://example.com/  &apos;Optional Title Here&apos;</span><br><span class="line">[foo]: http://example.com/  (Optional Title Here)</span><br></pre></td></tr></table></figure><p>请注意：有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</p><p>链接网址也可以用方括号包起来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[id]: http://example.com/longish/path/to/resource/here</span><br><span class="line">    &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p><p>链接辨别标签可以有字母、数字、空白和标点符号，但是并不区分大小写，因此下面两个链接是一样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[link text][a]</span><br><span class="line">[link text][A]</span><br></pre></td></tr></table></figure><p>隐式链接标记功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 链接到 google.com，你可以简化成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Google][]</span><br></pre></td></tr></table></figure><p>然后定义链接内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Google]: http://google.com/</span><br></pre></td></tr></table></figure><p>由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Visit [Daring Fireball][] for more information.</span><br></pre></td></tr></table></figure><p>然后接着定义链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Daring Fireball]: http://daringfireball.net/</span><br></pre></td></tr></table></figure><p>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p><p>下面是一个参考式链接的范例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google] [1] than from</span><br><span class="line">[Yahoo] [2] or [MSN] [3].</span><br><span class="line">​</span><br><span class="line">  [1]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [3]: http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p>如果改成用链接名称的方式写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google][] than from</span><br><span class="line">[Yahoo][] or [MSN][].</span><br><span class="line">​</span><br><span class="line">  [google]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p>上面两种写法都会产生下面的 HTML。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;</span><br><span class="line">title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from</span><br><span class="line">&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;</span><br><span class="line">or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)</span><br><span class="line">than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or</span><br><span class="line">[MSN](http://search.msn.com/ &quot;MSN Search&quot;).</span><br></pre></td></tr></table></figure><p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。</p><p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</p><h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><p>Markdown 使用星号（<code>*</code>）和底线（<code>_</code>）作为标记强调字词的符号，被 <code>*</code> 或 <code>_</code> 包围的字词会被转成用 标签包围，用两个<code>*</code>或<code>_</code>包起来的话，则会被转成，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*single asterisks*</span><br><span class="line">​</span><br><span class="line">_single underscores_</span><br><span class="line">​</span><br><span class="line">**double asterisks**</span><br><span class="line">​</span><br><span class="line">__double underscores__</span><br></pre></td></tr></table></figure><p>会转成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;em&gt;single asterisks&lt;/em&gt;</span><br><span class="line">​</span><br><span class="line">&lt;em&gt;single underscores&lt;/em&gt;</span><br><span class="line">​</span><br><span class="line">&lt;strong&gt;double asterisks&lt;/strong&gt;</span><br><span class="line">​</span><br><span class="line">&lt;strong&gt;double underscores&lt;/strong&gt;</span><br></pre></td></tr></table></figure><p>你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。</p><p>强调也可以直接插在文字中间：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">un*frigging*believable</span><br></pre></td></tr></table></figure><p>但是如果你的 <code>\*</code> 和 _ 两边都有空白的话，它们就只会被当成普通的符号。</p><p>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\*this text is surrounded by literal asterisks\*</span><br></pre></td></tr></table></figure><p>代码<br>如果要标记一小段行内代码，你可以用反引号把它包起来（<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">Use the `printf()` function.</span><br></pre></td></tr></table></figure></p><p>会产生：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：</p><p><code>There is a literal backtick (`) here.</code><br>这段语法会产生：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A single backtick in a code span: `` ` ``</span><br><span class="line">​</span><br><span class="line">A backtick-delimited string in a code span: `` `foo` ``</span><br></pre></td></tr></table></figure><p>会产生：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;</span><br><span class="line">​</span><br><span class="line">&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>在代码区段内，&amp; 和方括号都会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please don&apos;t use any `&lt;blink&gt;` tags.</span><br></pre></td></tr></table></figure><p>转为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;Please don&apos;t use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>你也可以这样写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.</span><br></pre></td></tr></table></figure><p>以产生：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encoded</span><br><span class="line">equivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>图片<br>很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。</p><p>Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： 行内式和参考式。</p><p>行内式的图片语法看起来像是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![Alt text](/path/to/img.jpg)</span><br><span class="line">​</span><br><span class="line">![Alt text](/path/to/img.jpg &quot;Optional title&quot;)</span><br></pre></td></tr></table></figure><p>详细叙述如下：</p><p>一个惊叹号 !接着一个方括号，里面放上图片的替代文字<br>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 ‘title’ 文字。<br>参考式的图片语法则长得像这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">![Alt text][id]</span><br><span class="line">「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：</span><br><span class="line"></span><br><span class="line">[id]: url/to/image  &quot;Optional title attribute&quot;</span><br></pre></td></tr></table></figure><p>到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 `` 标签。</p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;http://example.com/&gt;</span><br></pre></td></tr></table></figure><p>Markdown 会转为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;address@example.com&gt;</span><br></pre></td></tr></table></figure><p>Markdown 会转成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;</span><br><span class="line">&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;</span><br><span class="line">&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;</span><br><span class="line">&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>在浏览器里面，这段字串（其实是 <code>[address@example.com](mailto:address@example.com)</code>）会变成一个可以点击的「<a href="mailto:address@example.com" target="_blank" rel="noopener">address@example.com</a>」链接。</p><p>（这种作法虽然可以糊弄不少的机器人，但并不能全部挡下来，不过总比什么都不做好些。不管怎样，公开你的信箱终究会引来广告信件的。）</p><h3 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠"></a>反斜杠</h3><p>Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 `` 标签），你可以在星号的前面加上反斜杠：</p><p><code>\*literal asterisks\*</code><br>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   底线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  括弧</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   惊叹号</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;
[参考](https://www.appinn.com/markdown/)
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>UDP</title>
    <link href="https://silencejql.gitee.io/UDP.html"/>
    <id>https://silencejql.gitee.io/UDP.html</id>
    <published>2020-12-01T02:31:29.000Z</published>
    <updated>2021-01-04T07:37:53.412Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center>前面啥也没有<a id="more"></a><h2 id><a href="#" class="headerlink" title=" "></a> </h2><div><div class="fold_hider"><div class="close hider_title">展开/折叠常用示例</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    UdpClient client = <span class="keyword">new</span> UdpClient(<span class="keyword">new</span> IPEndPoint(IPAddress.Any, <span class="number">0</span>));<span class="comment">//不指定网卡、端口发送</span></span><br><span class="line">    client = <span class="keyword">new</span> UdpClient(<span class="keyword">new</span> IPEndPoint(IPAddress.Parse(<span class="string">"1.1.1.1"</span>), <span class="number">0</span>));<span class="comment">//设置网卡发送</span></span><br><span class="line">    IPEndPoint endpoint = <span class="keyword">new</span> IPEndPoint(IPAddress.Parse(<span class="string">"255.255.255.255"</span>), <span class="number">7788</span>);  </span><br><span class="line">    <span class="keyword">byte</span>[] buf = Encoding.Default.GetBytes(<span class="string">"Hello from UDP broadcast"</span>);  </span><br><span class="line">    Thread t = <span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadStart(RecvThread));  </span><br><span class="line">    t.IsBackground = <span class="literal">true</span>;  </span><br><span class="line">    t.Start();  </span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)  </span><br><span class="line">    &#123;  </span><br><span class="line">        client.Send(buf, buf.Length, endpoint);  </span><br><span class="line">        Thread.Sleep(<span class="number">1000</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">RecvThread</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    UdpClient client = <span class="keyword">new</span> UdpClient(<span class="keyword">new</span> IPEndPoint(IPAddress.Any, <span class="number">7788</span>));  </span><br><span class="line">    IPEndPoint endpoint = <span class="keyword">new</span> IPEndPoint(IPAddress.Any, <span class="number">0</span>);  </span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">byte</span>[] buf = client.Receive(<span class="keyword">ref</span> endpoint);  </span><br><span class="line">        <span class="keyword">string</span> msg = Encoding.Default.GetString(buf);  </span><br><span class="line">        Console.WriteLine(msg);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div><div class="fold_hider"><div class="close hider_title">展开/折叠广播示例</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 发送UDP消息</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="msg"&gt;</span>消息内容<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Send</span>(<span class="params"><span class="keyword">string</span> msg</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    UdpClient udpClient = <span class="keyword">new</span> UdpClient();</span><br><span class="line">    IPEndPoint ipEndPoint = <span class="keyword">new</span> IPEndPoint(IPAddress.Broadcast, <span class="number">10249</span>);</span><br><span class="line">    <span class="comment">// IPAddress.Broadcast 就是 255.255.255.255</span></span><br><span class="line">    <span class="keyword">byte</span>[] buffer = Encoding.UTF8.GetBytes(msg);</span><br><span class="line">    udpClient.Send(buffer, buffer.Length, ipEndPoint);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    UdpClient udpServer = <span class="keyword">new</span> UdpClient(<span class="number">10249</span>);</span><br><span class="line">    IPEndPoint ipEndPoint = <span class="keyword">new</span> IPEndPoint(IPAddress.Any, <span class="number">10249</span>);</span><br><span class="line"></span><br><span class="line">    udpServer.BeginReceive(Received, udpServer);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 异步接收UDP数据</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="iar"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Received</span>(<span class="params">IAsyncResult iar</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">　　udpServer = iar.AsyncState <span class="keyword">as</span> UdpClient;</span><br><span class="line">　　<span class="keyword">byte</span>[] buffer = udpServer.EndReceive(iar, <span class="keyword">ref</span> ipEndPoint);</span><br><span class="line"></span><br><span class="line">　　<span class="comment">//将获取的byte[]数据转换成字符串</span></span><br><span class="line">　　<span class="keyword">string</span> m = Encoding.UTF8.GetString(buffer).Trim();</span><br><span class="line"></span><br><span class="line">　　Console.WriteLine(<span class="string">"Receive:&#123;0&#125;"</span>,m);</span><br><span class="line"></span><br><span class="line">　　<span class="comment">//继续异步接收数据</span></span><br><span class="line">　　udpServer.BeginReceive(Received, udpServer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;
前面啥也没有
    
    </summary>
    
    
      <category term="UDP" scheme="https://silencejql.gitee.io/tags/UDP/"/>
    
  </entry>
  
  <entry>
    <title>C#事件与委托</title>
    <link href="https://silencejql.gitee.io/CSharp%E4%BA%8B%E4%BB%B6%E4%B8%8E%E5%A7%94%E6%89%98.html"/>
    <id>https://silencejql.gitee.io/CSharp事件与委托.html</id>
    <published>2020-11-18T07:31:24.000Z</published>
    <updated>2020-11-18T09:13:06.880Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center>参考HeadFirstC#<a id="more"></a><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><p>当一个事件发生后，不同的事件监视者完成各自的工作</p><p>1、定义产生事件的对象<br>2、定义事件<br>3、事件发生<br>4、不同对象订购(绑定)事件</p><p>5、创建事件执行需要的参数对象</p><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义事件及对象</span></span><br><span class="line">Ball ball = <span class="keyword">new</span> Ball();</span><br><span class="line"><span class="comment">//绑定</span></span><br><span class="line">Fan fan = <span class="keyword">new</span> Fan(ball);<span class="comment">//Fan对Ball的处理，Fan先绑定BallInPlay</span></span><br><span class="line">Pitcher pitcher = <span class="keyword">new</span> Pitcher(ball);<span class="comment">//Pitcher对Ball的处理，Pitcher后绑定BallInPlay</span></span><br><span class="line">BallEventArgs ballEventArgs = <span class="keyword">new</span> BallEventArgs(<span class="number">60</span>,<span class="number">80</span>);</span><br><span class="line"><span class="comment">//事件发生后Fan先响应，Pitcher后响应</span></span><br><span class="line">ball.OnBallInPlay(ballEventArgs)</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、定义产生事件的对象</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Ball</span>&#123;</span><br><span class="line">    <span class="comment">//2、定义事件</span></span><br><span class="line">    <span class="comment">//无事件绑定对象时BallInPlay = null</span></span><br><span class="line">    <span class="comment">//事件执行顺序为事件绑定顺序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> EventHandler BallInPlay;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">OnBallInPlay</span>(<span class="params">BallEventArgs e</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//EventHandler ballInplay = BallInPlay;</span></span><br><span class="line">        <span class="comment">//3、事件发生</span></span><br><span class="line">        <span class="comment">//事件发生后会执行BallInPlay的委托，具体的执行发放为事件监视者所委托的方法</span></span><br><span class="line">        BallInPlay(<span class="keyword">this</span>, e);</span><br><span class="line">        <span class="comment">//if (ballInplay != null)</span></span><br><span class="line">            <span class="comment">//  ballInplay(this,e);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Pitcher</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Pitcher</span>(<span class="params">Ball ball</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//4、不同对象订购(绑定)事件</span></span><br><span class="line">        <span class="comment">//当事件发生后执行ball_BallInPlay1方法</span></span><br><span class="line">        ball.BallInPlay += ball_BallInPlay1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ball_BallInPlay1</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">is</span> BallEventArgs)&#123;</span><br><span class="line">            BallEventArgs ballEventArgs = e <span class="keyword">as</span> BallEventArgs;</span><br><span class="line">            <span class="keyword">if</span> (ballEventArgs.Distance &lt; <span class="number">95</span> &amp;&amp; ballEventArgs.Traj &lt; <span class="number">60</span>)&#123;</span><br><span class="line">                CatchBall();</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">                GameOver();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">CatchBall</span>(<span class="params"></span>)</span>&#123; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GameOver</span>(<span class="params"></span>)</span>&#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Fan</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Fan</span>(<span class="params">Ball ball</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//4、不同对象订购(绑定)事件</span></span><br><span class="line">        <span class="comment">//当事件发生后执行ball_BallInPlay2方法</span></span><br><span class="line">        ball.BallInPlay += <span class="keyword">new</span> EventHandler(ball_BallInPlay2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ball_BallInPlay2</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">is</span> BallEventArgs)&#123;</span><br><span class="line">            BallEventArgs ballEventArgs = e <span class="keyword">as</span> BallEventArgs;</span><br><span class="line">            <span class="keyword">if</span> (ballEventArgs.Distance &gt; <span class="number">400</span>)</span><br><span class="line">                CatchBall();</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                Screm();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">CatchBall</span>(<span class="params"></span>)</span>&#123; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Screm</span>(<span class="params"></span>)</span>&#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//事件执行的参数</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">BallEventArgs</span> : <span class="title">EventArgs</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Traj &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;<span class="comment">//击球角度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Distance &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;<span class="comment">//飞行距离</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BallEventArgs</span>(<span class="params"><span class="keyword">int</span> traj, <span class="keyword">int</span> distance</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.Traj = traj;</span><br><span class="line">        <span class="keyword">this</span>.Distance = distance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="委托事件"><a href="#委托事件" class="headerlink" title="委托事件"></a>委托事件</h2><h3 id="委托"><a href="#委托" class="headerlink" title="委托"></a>委托</h3><p>再讲委托</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">delegate</span> <span class="keyword">string</span> <span class="title">Calculate</span>(<span class="params"><span class="keyword">double</span> x, <span class="keyword">double</span> y</span>)</span>;</span><br><span class="line">Calculate calculateString = <span class="keyword">new</span> Calculate(<span class="keyword">add</span>);</span><br><span class="line"><span class="keyword">string</span> <span class="keyword">add</span> = calculateString(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">calculateString = <span class="keyword">new</span> Calculate(mul);</span><br><span class="line"><span class="keyword">string</span> mul = calculateString(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">add</span>(<span class="params"><span class="keyword">double</span> x, <span class="keyword">double</span> y</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x + y).ToString()</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">mul</span>(<span class="params"><span class="keyword">double</span> x, <span class="keyword">double</span> y</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x * y).ToString()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">delegate</span> <span class="keyword">void</span> <span class="title">BatCallback</span>(<span class="params">BallEventArgs e</span>)</span>;</span><br><span class="line">Ball ball = <span class="keyword">new</span> Ball();</span><br><span class="line"><span class="comment">//创建一个新的Bat对象，使用BatCallback委托将Ball的OnBallInPlay方法引用传给Bat对象</span></span><br><span class="line">Bat bat = ball.GetNewBat();</span><br><span class="line">Fan fan = <span class="keyword">new</span> Fan(ball);</span><br><span class="line">Pitcher pitcher = <span class="keyword">new</span> Pitcher(ball);</span><br><span class="line">BallEventArgs ballEventArgs = <span class="keyword">new</span> BallEventArgs(<span class="number">60</span>,<span class="number">80</span>);</span><br><span class="line">bat.HitTheBall(ballEventArgs);</span><br><span class="line"><span class="keyword">class</span> <span class="title">Ball</span>&#123;</span><br><span class="line">    <span class="comment">//2、定义事件</span></span><br><span class="line">    <span class="comment">//无事件绑定对象时BallInPlay = null</span></span><br><span class="line">    <span class="comment">//事件执行顺序为事件绑定顺序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> EventHandler BallInPlay;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">OnBallInPlay</span>(<span class="params">BallEventArgs e</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//EventHandler ballInplay = BallInPlay;</span></span><br><span class="line">        <span class="comment">//3、事件发生</span></span><br><span class="line">        <span class="comment">//事件发生后会执行BallInPlay的委托，具体的执行发放为事件监视者所委托的方法</span></span><br><span class="line">        BallInPlay(<span class="keyword">this</span>, e);</span><br><span class="line">        <span class="comment">//if (ballInplay != null)</span></span><br><span class="line">            <span class="comment">//  ballInplay(this,e);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Bat <span class="title">GetNewBat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//将事件处理委托到击球事件中</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Bat(<span class="keyword">new</span> BatCallback(OnBallInPlay));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Bat</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> BatCallback hitBallCallback;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Bat</span>(<span class="params">BatCallback callbackDelegate</span>)</span> &#123;</span><br><span class="line">        <span class="comment">//私有化事件发生后的时间处理</span></span><br><span class="line">        <span class="comment">//不使用 += 是为了保证击球手只监视场内的一个Ball</span></span><br><span class="line">        <span class="keyword">this</span>.hitBallCallback = <span class="keyword">new</span> BatCallback(callbackDelegate);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//发生击球事件后，回调Ball类中的OnBallInPlay响应</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HitTheBall</span>(<span class="params">BallEventArgs e</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (hitBallCallback != <span class="literal">null</span>)</span><br><span class="line">            hitBallCallback(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h3 id="回调和事件"><a href="#回调和事件" class="headerlink" title="回调和事件"></a>回调和事件</h3><p>代码上的区别：<br>事件发生后的响应在当前类<br>回调响应方法在其他类</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;
参考HeadFirstC#
    
    </summary>
    
      <category term="C#" scheme="https://silencejql.gitee.io/categories/C/"/>
    
    
      <category term="委托" scheme="https://silencejql.gitee.io/tags/%E5%A7%94%E6%89%98/"/>
    
      <category term="事件" scheme="https://silencejql.gitee.io/tags/%E4%BA%8B%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>BBK检测线通讯相关介绍</title>
    <link href="https://silencejql.gitee.io/BBK%E6%A3%80%E6%B5%8B%E7%BA%BF%E9%80%9A%E8%AE%AF%E7%9B%B8%E5%85%B3%E4%BB%8B%E7%BB%8D.html"/>
    <id>https://silencejql.gitee.io/BBK检测线通讯相关介绍.html</id>
    <published>2020-11-17T05:24:25.000Z</published>
    <updated>2020-11-18T07:31:29.469Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center>前面啥也没有<a id="more"></a><h2 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h2><p>客户端配置<br>GeneralLib.xDvConfigClient.init(GeneralLib.xRemoterClientConfig)<br>服务端配置<br>GeneralLib.GenO.InitRemoterTcpServer()</p><div><div class="fold_hider"><div class="close hider_title">展开/折叠客户生成配置</div></div><div class="fold"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8" standalone="yes"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">xDevice</span> <span class="attr">updateRate</span>=<span class="string">"50"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Item</span> <span class="attr">ip</span>=<span class="string">"10.18.13.50:10240"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">__COUNTER_OUT</span> <span class="attr">value</span>=<span class="string">"None"</span> <span class="attr">WriteEnable</span>=<span class="string">"false"</span> <span class="attr">Reversion</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">__COUNTER_IN</span> <span class="attr">value</span>=<span class="string">"None"</span> <span class="attr">WriteEnable</span>=<span class="string">"false"</span> <span class="attr">Reversion</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Communication_ZTS</span> <span class="attr">value</span>=<span class="string">"CarParam_ZTS"</span> <span class="attr">WriteEnable</span>=<span class="string">"true"</span> <span class="attr">Reversion</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Communication_VIN</span> <span class="attr">value</span>=<span class="string">"CarParam_VIN"</span> <span class="attr">WriteEnable</span>=<span class="string">"true"</span> <span class="attr">Reversion</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DeviceDescribe</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--用于与具有远程功能的平台程序通讯(@开头为PubObject对象,#开头为组合控制),默认端口10240,ip格式:127.0.0.1:10240--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">DeviceDescribe</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Alarms</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">AlarmItem</span> <span class="attr">value</span>=<span class="string">"None"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Alarm</span> <span class="attr">Index</span>=<span class="string">"0"</span> <span class="attr">Name</span>=<span class="string">"告警信息格式模板"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">AlarmItem</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Alarms</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">xDevice</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><p>配置完成后，相当于客户端的Communication_VIN与服务端的CarParam_VIN进行了绑定</p><h2 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h2><p>客户端配置<br>SocketOpraLib.UDPClientOpra.SetDestInfoConfig(ConfigSend)<br>SocketOpraLib.UDPClientOpra.SendTo(“{VIN};{ZTS}”)<br>服务端配置<br>SocketOpraLib.UDPServerOpra.SetLocalInfoConfig(ConfigRecv)</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;
前面啥也没有
    
    </summary>
    
      <category term="工作" scheme="https://silencejql.gitee.io/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>Flask框架</title>
    <link href="https://silencejql.gitee.io/Flask%E6%A1%86%E6%9E%B6.html"/>
    <id>https://silencejql.gitee.io/Flask框架.html</id>
    <published>2020-10-30T07:10:56.000Z</published>
    <updated>2020-11-01T04:37:18.837Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center>前面啥也没有<a id="more"></a><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><div><div class="fold_hider"><div class="close hider_title">展开/折叠目录结构</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">flask-demo/</span><br><span class="line">  ├ run.py           <span class="meta"># 应用启动程序</span></span><br><span class="line">  ├ config.py        <span class="meta"># 环境配置</span></span><br><span class="line">  ├ requirements.txt <span class="meta"># 列出应用程序依赖的所有Python包</span></span><br><span class="line">  ├ tests/           <span class="meta"># 测试代码包</span></span><br><span class="line">  │   ├ __init__.py</span><br><span class="line">  │   └ test_*.py    <span class="meta"># 测试用例</span></span><br><span class="line">  └ myapp/</span><br><span class="line">      ├ admin/       <span class="meta"># 蓝图目录</span></span><br><span class="line">      ├ <span class="keyword">static</span>/</span><br><span class="line">      │   ├ css/     <span class="meta"># css文件目录</span></span><br><span class="line">      │   ├ img/     <span class="meta"># 图片文件目录</span></span><br><span class="line">      │   └ js/      <span class="meta"># js文件目录</span></span><br><span class="line">      ├ templates/   <span class="meta"># 模板文件目录</span></span><br><span class="line">      ├ __init__.py</span><br><span class="line">      ├ forms.py     <span class="meta"># 存放所有表单，如果多，将其变为一个包</span></span><br><span class="line">      ├ models.py    <span class="meta"># 存放所有数据模型，如果多，将其变为一个包</span></span><br><span class="line">      └ views.py     <span class="meta"># 存放所有视图函数，如果多，将其变为一个包</span></span><br></pre></td></tr></table></figure></div></div><p>示例：<br>IconFont网址下载图标</p><div><div class="fold_hider"><div class="close hider_title">展开/折叠目录结构</div></div><div class="fold"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template,request</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/index')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/user/&lt;name&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">welcome</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"welcome %s"</span>%name</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/user/&lt;int:id&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">welcomeid</span><span class="params">(id)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"welcome num %d"</span>%id</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index2</span><span class="params">()</span>:</span></span><br><span class="line">    list = [<span class="string">"l1"</span>,<span class="string">"l2"</span>,<span class="string">"l3"</span>]</span><br><span class="line">    time = datetime.date.today()</span><br><span class="line">    task = &#123;<span class="string">"task"</span>:<span class="string">"clean"</span>,<span class="string">"time"</span>:<span class="string">"3hours"</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"index.html"</span>,var = time,list = list, task = task)</span><br><span class="line"></span><br><span class="line"><span class="comment">#表单提交</span></span><br><span class="line"><span class="meta">@app.route('/register')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"register.html"</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/result',methods=['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">result</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        result = request.form <span class="comment">#表单字典</span></span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">"result.html"</span>,result = result)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>) <span class="comment">#还需要在项目配置中启动Debug</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    welcome.</span><br><span class="line">    Today is &#123;&#123; var &#125;&#125;<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    on duty<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    &#123;% for data in list %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span> &#123;&#123; data &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    task:s<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">            &#123;% for key,value in task.items() %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;key&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"&#123;&#123; url_for('result') &#125;&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>age:  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"age"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>sex:  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"sex"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"submit"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">            &#123;% for key,value in result.items() %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>&#123;&#123;key&#125;&#125;<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    Result</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;
前面啥也没有
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Modbus通讯协议</title>
    <link href="https://silencejql.gitee.io/Modbus%E9%80%9A%E8%AE%AF%E5%8D%8F%E8%AE%AE.html"/>
    <id>https://silencejql.gitee.io/Modbus通讯协议.html</id>
    <published>2020-10-20T04:50:59.000Z</published>
    <updated>2020-10-27T02:14:30.796Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center>前面啥也没有<a id="more"></a><h2 id="Modbus-TCP-数据帧"><a href="#Modbus-TCP-数据帧" class="headerlink" title="Modbus TCP 数据帧"></a>Modbus TCP 数据帧</h2><p>MBAP + PDU<br>MBAP： Modbus Application Protocol Header<br>PDU：Protocol Data Unit<br>MBAP + Function code + Data</p><p>示例：<br>00 01 00 00 00 06 01<br>事务标识2+modbus协议2+数据长度2+Slave站号1</p><p>Function code：<br>0x01：读线圈<br>02：读离散量输入<br>03：读保持寄存器<br>04：读输入寄存器<br>05：写单个线圈<br>06：写单个保持寄存器<br>10：写多个保持寄存器<br>0F：写多个线圈</p><p>报文头部：</p><table><thead><tr><th align="center">字节序号</th><th align="center">含义</th><th align="center">客户端</th><th align="center">服务器</th></tr></thead><tbody><tr><td align="center">BYTE 0 – 1</td><td align="center">传输标志，事务标识符</td><td align="center">由客户端生成</td><td align="center">应答时复制该值</td></tr><tr><td align="center">BYTE 2 – 3</td><td align="center">协议标识，Modbus 协议=0</td><td align="center">由客户端生成</td><td align="center">应答时复制该值</td></tr><tr><td align="center">BYTE 4 ¬-  5</td><td align="center">报文后续数据的字节长度</td><td align="center">由客户端生成</td><td align="center">应答时由服务器重新生成</td></tr><tr><td align="center">BYTE 6</td><td align="center">MODBUS单元标志</td><td align="center">由客户端生成</td><td align="center">应答时复制该值</td></tr></tbody></table><p>Modbus TCP协议功能码报文<br>功能码3 读多个寄存器<br>请求报文格式<br>|字节序号|含义|<br>|:-:|:-:|<br>BYTE 7|功能码=3<br>BYTE 8 - 9|读取数据的寄存器偏移地址<br>BYTE 10 - 11|读取数据的寄存器数量，单位为Word</p><p>读数据成功的响应报文格式<br>|字节序号|含义|<br>|:-:|:-:|<br>BYTE 7|功能码=3<br>BYTE 8 |读取到的数据的字节数<br>BYTE 9- 10|读取到的寄存器1的数据<br>BYTE 11 - 12|读取到的寄存器2的数据<br>….|…</p><p>功能码16 写多个寄存器<br>请求报文格式<br>|字节序号|含义|<br>|:-:|:-:|<br>BYTE 7|功能码=16<br>BYTE 8 - 9|写数据的寄存器偏移地址<br>BYTE 10 - 11|写数据的寄存器数量，单位为Word<br>BYTE 12|写数据的字节数（数据等于写数据的寄存器数量 x 2）<br>BYTE 13 - 14|寄存器1的数据<br>BYTE 15 - 16|寄存器1的数据</p><p>写数据成功的响应报文格式<br>|字节序号|含义|<br>|:-:|:-:|<br>BYTE 7|功能码=16<br>BYTE 8 - 9 |写数据的寄存器偏移地址<br>BYTE 10 - 11|写数据的寄存器数量，单位为WORD</p><p>功能码6 写单个寄存器<br>请求报文格式<br>|字节序号|含义|<br>|:-:|:-:|<br>BYTE 7|功能码=6<br>BYTE 8 - 9|写数据的寄存器偏移地址<br>BYTE 10 - 11|寄存器的数值</p><p>写数据成功的响应报文格式<br>|字节序号|含义|<br>|:-:|:-:|<br>BYTE 7|功能码=6<br>BYTE 8 - 9 |写数据的寄存器偏移地址<br>BYTE 10 - 11|寄存器的数值</p><p>控制 IB IL 24 DO8开关量输出模块请求报文，模块寄存器地址：384，控制数据在最后一个字节；</p><p>0F 01 00 00 00 06 FF 06 01 80 00 0F</p><p>控制DO输出成功响应报文<br>0F 01 00 00 00 06 FF 06 01 80 00 0F</p><p>读取 IB IL 24 DI8开关量输入模块请求报文，模块寄存器地址：0，数据寄存器长度为1；</p><p>0B 01 00 00 00 06 FF 03 00 00 00 01</p><p>读取IB IL 24 DI8开关量输入成功的响应报文，数据在最后一个字节；<br>0B 01 00 00 00 05 FF 03 02 00 XX</p><p>读取 IB IL AI2SF-230模拟量输入模块请求报文，模块寄存器地址：192，数据寄存器长度为2，该模块默认连接0~10V信号；</p><p>0B 02 00 00 00 06 FF 03 00 C0 00 02</p><p>读取数据成功的响应报文，数据在最后4个字节，分别为通道1~2；<br>0B 02 00 00 00 07 FF 03 04 XX XX XX XX</p><h2 id="Kepserver"><a href="#Kepserver" class="headerlink" title="Kepserver"></a>Kepserver</h2><p>Address<br>输出线圈：  000001 ~ 065536<br>输入线圈：  100001 ~ 165536<br>内部寄存器：300001 ~ 365536<br>保持寄存器：400001 ~ 465536</p><p>访问输出线圈：Address：000001<br>访问连续10个输出线圈：Address：000001#10</p><p>访问保持寄存器：Address：400001<br>访问连续10个保持寄存器：Address：400001[10]</p><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;
前面啥也没有
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>BBK故障码处理</title>
    <link href="https://silencejql.gitee.io/BBK%E6%95%85%E9%9A%9C%E7%A0%81%E5%A4%84%E7%90%86.html"/>
    <id>https://silencejql.gitee.io/BBK故障码处理.html</id>
    <published>2020-10-16T03:03:48.000Z</published>
    <updated>2020-10-16T03:14:00.889Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center><p>检测线处理故障码，包括只判断指定故障码和忽略指定故障码</p><a id="more"></a><h2 id="CanCmdOpraLib-CanCmd"><a href="#CanCmdOpraLib-CanCmd" class="headerlink" title="CanCmdOpraLib.CanCmd"></a>CanCmdOpraLib.CanCmd</h2><h3 id="HandleDTC"><a href="#HandleDTC" class="headerlink" title="HandleDTC"></a>HandleDTC</h3><p>该函数参数为忽略的故障码，可以为{0xD1 55 84};{0xD1 55 85}的格式，也可以为U1155-84;U1155-85的格式<br>不设置参数则将所有读出的DTC添加到<strong>useDTClist</strong>中</p><h3 id="CheckDTC"><a href="#CheckDTC" class="headerlink" title="CheckDTC"></a>CheckDTC</h3><p>该函数参数为判断的故障码，判断该故障码是否存在于<strong>useDTClist</strong>中存在返回False，不存在返回True</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>Recv：{0x59 02 AB D1 55 84 2B D1 55 85 2B}<br>HandleDTC({0xD1 55 84})<br>useDTClist为U1155-85 D1 55 85<br>CheckDTC({0xD1 55 84})返回true<br>CheckDTC({0xD1 55 85})返回false</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;

&lt;p&gt;检测线处理故障码，包括只判断指定故障码和忽略指定故障码&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ABS类名与车型对应</title>
    <link href="https://silencejql.gitee.io/ABS%E7%B1%BB%E5%90%8D%E4%B8%8E%E8%BD%A6%E5%9E%8B%E5%AF%B9%E5%BA%94.html"/>
    <id>https://silencejql.gitee.io/ABS类名与车型对应.html</id>
    <published>2020-09-18T11:35:01.000Z</published>
    <updated>2020-09-18T11:50:29.260Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center>前面啥也没有<a id="more"></a><h2 id="SGMW"><a href="#SGMW" class="headerlink" title="SGMW"></a>SGMW</h2><p>ClassName:车型:</p><p>CN200SESP : BOSCH9CANABS<br>CN200ESP : BOSCH9CANABS<br>CN200SABS : BOSCH9CANABS<br>CN200ABS : BOSCH9CANABS<br>CN113ABS : BOSCH9CANABS<br>CN180MABS : BOSCH9CANABS<br>CN180MESP : BOSCH9CANESP<br>CN180SABS : BOSCH9CANABS<br>CN180SESP : BOSCH9CANESP<br>E100ESP : BOSCH9CANABS<br>E100ABS : BOSCH9CANABS<br>E300ESC : BOSCH9CANABS<br>E300ABS : BOSCH9CANABS<br>N300LABSEV: E100ABS<br>CN210ABS : BOSCH9CANABS<br>E50ABS : E100ABS</p><p>GP50ABS : BOSCH9ABSCAN</p><p>CN112ABS : BOSCH9KWPABS<br>CN112 : BOSCH9KWPABS<br>N300LABS : BOSCH9KWPABS<br>N310ABS : BOSCH9KWPABS<br>N350PABS : BOSCH9KWPABS<br>CN100VABS : BOSCH9KWPABS<br>N300MandoABS : BOSCH9KWPABS</p><p>CN115ABS : BOSCH9KWPABS<br>CN115 : BOSCH9KWPABS</p><p>CN180SDBC78ABS : DBC78ABS<br>CN180SDBC78ABS4MBK : DBC78ABS</p><p>CN200DCU : DCU<br>CN200SDCU : DCU</p><p>CN120SESC : MK100ESC<br>CN120SABS : MK100ABS<br>CN120SABSForACU : MK100ABS<br>CN120SESCForACU : MK100ESC<br>CN180CESC : MK100ESC<br>CN180SESCconfi : CN180CESC<br>CN300SESC : CN180SESCconfi<br>CN180C_2ESC : MK100ESC<br>MK100ESCForMBK : ABSBaseForCAN<br>CN180CESCForMBK : MK100ESCForMBK</p><p>CN180CABS : MK78ABS</p><p>N1 : N1ABS</p><h2 id="长春一汽轿车"><a href="#长春一汽轿车" class="headerlink" title="长春一汽轿车"></a>长春一汽轿车</h2><p>J5LADSC : DSCCAN<br>J71DSC : DSCCAN</p><p>D181ESP : BOSCH9CANESP<br>D181ABS : BOSCH9CANABS<br>D009ABS : BOSCH9CANABS<br>D009ESP : BOSCH9CANESP<br>C141ESP : BaseBosch_ESP9<br>C205ESP : C141ESP<br>D090ESP : C141ESP<br>E111ESP : C141ESP</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;
前面啥也没有
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>新增ABS</title>
    <link href="https://silencejql.gitee.io/%E6%96%B0%E5%A2%9EABS.html"/>
    <id>https://silencejql.gitee.io/新增ABS.html</id>
    <published>2020-09-16T06:01:34.000Z</published>
    <updated>2020-09-16T06:46:28.506Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center>前面啥也没有<a id="more"></a><h2 id="准备文件"><a href="#准备文件" class="headerlink" title="准备文件"></a>准备文件</h2><blockquote><p>1、RBABS_xxx.dll 其中包含ABS通讯指令</p></blockquote><h2 id="软件更改"><a href="#软件更改" class="headerlink" title="软件更改"></a>软件更改</h2><p>0、备份程序<br>1、替换BBK\Bin文件夹下的 RBABS_xxx.dll 文件<br>2、新增车型信息<br><img src="%E6%96%B0%E5%A2%9EABS/cxxx.png" alt="车型信息"><br>如图新增该车型相关车型信息，复制其他车型更改即可<br>3、新增ABS标准<br><img src="%E6%96%B0%E5%A2%9EABS/absbz.png" alt="ABS标准"><br>上图为DVT中动态ABS标准，制动台更改静态ABS标准<br>Identity为该ABS的标识<br><strong>ABS类型</strong>内容咨询软件工程师<br>4、新增ZTS<br><img src="%E6%96%B0%E5%A2%9EABS/ztspz.png" alt="ZTS"><br>复制其他车型后更改ZTS<br>更改车型参数<br>更改动态ABS标准<br>5、配置串口<br><img src="%E6%96%B0%E5%A2%9EABS/ckpz.png" alt="串口配置"><br>复制其他CAN或K线配置，更改KeyName为3中的<strong>ABS类型</strong><br>Param1为串口号、Param3为输出LOG的文件名<br>说明：该步骤若未提前更改，测试中会自动创建并使用默认串口号导致通讯失败，依据其他车型的配置更改串口号等即可。</p><p>6、更改Config\ABSValveTestConfig中当前ABS类型文件中的增减压时间等进行优化</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;
前面啥也没有
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>中牟日产打印更改</title>
    <link href="https://silencejql.gitee.io/%E4%B8%AD%E7%89%9F%E6%97%A5%E4%BA%A7%E6%89%93%E5%8D%B0%E6%9B%B4%E6%94%B9.html"/>
    <id>https://silencejql.gitee.io/中牟日产打印更改.html</id>
    <published>2020-08-11T10:58:08.000Z</published>
    <updated>2020-08-11T11:05:27.103Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="读取Excel保存数据库"><a href="#读取Excel保存数据库" class="headerlink" title="读取Excel保存数据库"></a>读取Excel保存数据库</h2><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReadAndSaveCarInfoFromExcel</span>(<span class="params"><span class="keyword">string</span> vin</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//string serverConnString = "$Npgsql$Database=LocalDB;Host=127.0.0.1;Port=5432;Username=postgres;Password=123";</span></span><br><span class="line">        <span class="keyword">string</span> sql = <span class="keyword">string</span>.Format(<span class="string">"select * from [OBD检查表] where [VIN]='&#123;0&#125;' order by [测试时间] desc"</span>, vin);</span><br><span class="line">        DbDataAdapter adap = BConnString.CreateDataAdapter(sql, serverConnString);</span><br><span class="line">        DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line">        adap.Fill(dt);</span><br><span class="line">        DataRow dr = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (dt.Rows.Count &gt; <span class="number">0</span>)</span><br><span class="line">            dr = dt.Rows[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">string</span> VIDCode = dr[<span class="string">"VID"</span>].ToString();</span><br><span class="line">        <span class="comment">// string vid = "1111111111111   SDFVDFSD----    SDAVV6515151  AFDFASFSA  ASDFS  S  20200707     SDFSF      111255544    "</span></span><br><span class="line">        Regex re = <span class="keyword">new</span> Regex(<span class="string">@"(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+)\s*"</span>);</span><br><span class="line">        Match match = re.Match(VIDCode);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">string</span> CarEI = match.Groups[<span class="number">2</span>].Value;</span><br><span class="line">        <span class="keyword">string</span> EngineNo = match.Groups[<span class="number">9</span>].Value;</span><br><span class="line">        <span class="keyword">if</span> (EngineNo.Length == <span class="number">0</span> || EngineNo == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            re = <span class="keyword">new</span> Regex(<span class="string">@"(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+)\s*"</span>);</span><br><span class="line">            match = re.Match(VIDCode);</span><br><span class="line">            EngineNo = match.Groups[<span class="number">8</span>].Value;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (EngineNo.Length &lt; <span class="number">4</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            re = <span class="keyword">new</span> Regex(<span class="string">@"(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+?)\s+(\S+)\s*"</span>);</span><br><span class="line">            match = re.Match(VIDCode);</span><br><span class="line">            EngineNo = match.Groups[<span class="number">10</span>].Value;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//1909889    TYBGLCFDP0DXA---A  L1234567891234567  1H5GPRCOP Y23A         S  202008154                    M9T                     M1014785             </span></span><br><span class="line">        <span class="keyword">string</span> carType = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">string</span> productEnterprise = <span class="string">""</span>;</span><br><span class="line">        GetCarInfoByEI(CarEI, <span class="keyword">ref</span> carType, <span class="keyword">ref</span> productEnterprise);</span><br><span class="line">        <span class="keyword">string</span> sqlCarInfo = <span class="keyword">string</span>.Format(<span class="string">"select * from [OBD车型表] where [VIN]='&#123;0&#125;' order by [ID] desc"</span>, vin);</span><br><span class="line">        DbDataAdapter adapCarInfo = BConnString.CreateDataAdapter(sqlCarInfo, serverConnString);</span><br><span class="line">        DataTable dtCarInfo = <span class="keyword">new</span> DataTable();</span><br><span class="line">        adapCarInfo.Fill(dtCarInfo);</span><br><span class="line">        DataRow drCarInfo = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (dtCarInfo.Rows.Count &gt; <span class="number">0</span>)</span><br><span class="line">            drCarInfo = dtCarInfo.Rows[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            drCarInfo = dtCarInfo.Rows.Add();</span><br><span class="line">        drCarInfo[<span class="string">"VIN"</span>] = vin;</span><br><span class="line">        drCarInfo[<span class="string">"发动机号"</span>] = EngineNo;</span><br><span class="line">        drCarInfo[<span class="string">"Cartype车辆型号"</span>] = carType;</span><br><span class="line">        drCarInfo[<span class="string">"车辆生产企业"</span>] = productEnterprise;</span><br><span class="line">        drCarInfo[<span class="string">"更新时间"</span>] = DateTime.Now;</span><br><span class="line">        adapCarInfo.Update(dtCarInfo);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (ExcelException ex)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(ex.Message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetCarInfoByEI</span>(<span class="params"><span class="keyword">string</span> EI, <span class="keyword">ref</span> <span class="keyword">string</span> CarType, <span class="keyword">ref</span> <span class="keyword">string</span> ProductEnterprise</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// connect Excel</span></span><br><span class="line">    <span class="comment">//string excelPath = @"D:\工作\现场工作文件整理\中牟日产\EI-车辆型号.xlsx";</span></span><br><span class="line">    <span class="keyword">string</span> strConn = <span class="keyword">string</span>.Format(<span class="string">"Provider=Microsoft.ACE.OLEDB.12.0;Data Source =&#123;0&#125;; Extended Properties = 'Excel 12.0; HDR=Yes; IMEX=0'"</span>, excelPath);</span><br><span class="line">    DataSet ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">    OleDbConnection conn = <span class="keyword">new</span> OleDbConnection(strConn);</span><br><span class="line">    <span class="keyword">string</span> sql = <span class="keyword">string</span>.Format(<span class="string">"select * from [Sheet1$] where [Code18/EI] like '%&#123;0&#125;%'"</span>, EI);</span><br><span class="line">    OleDbDataAdapter oada = <span class="keyword">new</span> OleDbDataAdapter(sql, conn);</span><br><span class="line">    oada.Fill(ds);</span><br><span class="line">    DataRow dr = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (ds.Tables[<span class="number">0</span>].Rows.Count &gt; <span class="number">0</span>)</span><br><span class="line">        dr = ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">"EI车辆型号Excel中没有当前车型，请检查"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    CarType = dr[<span class="string">"Cartype/车辆型号"</span>].ToString();</span><br><span class="line">    ProductEnterprise = dr[<span class="string">"生产企业"</span>].ToString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h2 id=&quot;读取Excel保存数据库&quot;&gt;&lt;a href=&quot;#读取Excel保存数据库&quot; class=&quot;headerlink&quot; title=&quot;读取Excel保存数据库&quot;&gt;&lt;/a&gt;读取Excel保存数据库&lt;/h2&gt;&lt;div&gt;&lt;div clas
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Selenium WebDriver</title>
    <link href="https://silencejql.gitee.io/Selenium%20WebDriver.html"/>
    <id>https://silencejql.gitee.io/Selenium WebDriver.html</id>
    <published>2020-08-05T03:53:10.000Z</published>
    <updated>2020-08-05T09:47:21.013Z</updated>
    
    <content type="html"><![CDATA[<p>Selenium WebDriver 笔记</p><a id="more"></a><h2 id="Selenium"><a href="#Selenium" class="headerlink" title="Selenium"></a>Selenium</h2><h3 id="查找-UI-元素（web-元素）"><a href="#查找-UI-元素（web-元素）" class="headerlink" title="查找 UI 元素（web 元素）"></a>查找 UI 元素（web 元素）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="coolestWidgetEvah"&gt;...&lt;/div&gt;</span><br><span class="line">WebElement element = driver.findElement(By.id(<span class="string">"coolestWidgetEvah"</span>));</span><br><span class="line"></span><br><span class="line">&lt;div class="cheese"&gt;&lt;span&gt;Cheddar&lt;/span&gt;&lt;/div&gt;&lt;div class="cheese"&gt;&lt;span&gt;Gouda&lt;/span&gt;&lt;/div&gt;</span><br><span class="line">List&lt;WebElement&gt; cheeses = driver.findElements(By.className(<span class="string">"cheese"</span>));</span><br><span class="line"></span><br><span class="line">&lt;iframe src="..."&gt;&lt;/iframe&gt;</span><br><span class="line">WebElement frame = driver.findElement(By.tagName(<span class="string">"iframe"</span>));</span><br><span class="line"></span><br><span class="line">&lt;input name=<span class="string">"cheese"</span> type=<span class="string">"text"</span>/&gt;</span><br><span class="line">WebElement cheese = driver.findElement(By.name(<span class="string">"cheese"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//By Link Text</span></span><br><span class="line">&lt;a href="http://www.google.com/search?q=cheese"&gt;cheese&lt;/a&gt;&gt;</span><br><span class="line">WebElement cheese = driver.findElement(By.linkText(<span class="string">"cheese"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//By Partial Link Text</span></span><br><span class="line">&lt;a href="http://www.google.com/search?q=cheese"&gt;search for cheese&lt;/a&gt;&gt;</span><br><span class="line">WebElement cheese = driver.findElement(By.partialLinkText(<span class="string">"cheese"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// By CSS</span></span><br><span class="line">&lt;div id="food"&gt;&lt;span class="dairy"&gt;milk&lt;/span&gt;&lt;span class="dairy aged"&gt;cheese&lt;/span&gt;&lt;/div&gt;</span><br><span class="line">WebElement cheese = driver.findElement(By.cssSelector(<span class="string">"#food span.dairy.aged"</span>));</span><br></pre></td></tr></table></figure><h3 id="用户输入-填充表单"><a href="#用户输入-填充表单" class="headerlink" title="用户输入 - 填充表单"></a>用户输入 - 填充表单</h3><p>WebDriver 有一个叫 “Select” 的类，这个类提供了很多有用的方法用于 select 元素进行交互。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Select select = <span class="keyword">new</span> Select(driver.findElement(By.tagName(<span class="string">"select"</span>)));</span><br><span class="line">select.deselectAll();</span><br><span class="line">select.selectByVisibleText(<span class="string">"Edam"</span>);</span><br></pre></td></tr></table></figure><p>上述代码取消页面上第一个 select 元素的所有 option 的选中状态，然后选中字面值为 “Edam” 的 option。</p><p>如果你已经完成表单填充，你可能希望提交它，你只要找到 “submit” 按钮然后点击它即可。</p><p><code>driver.findElement(By.id(&quot;submit&quot;)).click();</code><br>或者，你可以调用 WebDriver 为每个元素提供的 “submit” 方法。如果你对一个 form 元素调用该方法，WebDriver 将调用这个 form 的 submit 方法。如果这个元素不是一个 form，将抛出一个异常。<br><code>element.submit();</code></p><h2 id="常用类与方法"><a href="#常用类与方法" class="headerlink" title="常用类与方法"></a>常用类与方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver   <span class="comment"># 驱动浏览器</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains   <span class="comment"># 鼠标的相关操作，比如滑动验证</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By   <span class="comment"># 选择器，以什么方式选择标签元素</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys   <span class="comment"># 键盘相关</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC  <span class="comment"># 各种判断，一般跟等待事件连用，比如说等待某个元素加载出来</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait  <span class="comment"># 等待事件，可以与EC连用</span></span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">wait = WebDriverWait(browser, <span class="number">10</span>)</span><br><span class="line">browser.get(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line">browser.maximize_window()  <span class="comment"># 窗口最大化</span></span><br><span class="line">print(browser.current_url)   <span class="comment"># 获取当前页URL</span></span><br><span class="line">print(browser.title)   <span class="comment"># 获取页面的title</span></span><br><span class="line">print(browser.name)  <span class="comment"># 获取driver对象：chrome</span></span><br><span class="line">print(browser.current_window_handle)  <span class="comment"># 获取当前窗口</span></span><br><span class="line">print(browser.get_cookies())   <span class="comment"># 获取cookies</span></span><br><span class="line">print(browser.page_source)   <span class="comment"># 获取当前页面内容</span></span><br><span class="line">browser.back()  <span class="comment"># 后退</span></span><br><span class="line">browser.forward()  <span class="comment"># 前进</span></span><br><span class="line">browser.refresh()    <span class="comment"># 刷新</span></span><br><span class="line">browser.save_screenshot(<span class="string">'error.png'</span>)   <span class="comment"># 保存截图</span></span><br><span class="line">browser.close()   <span class="comment"># 关闭当前窗口</span></span><br><span class="line">browser.quit()   <span class="comment"># 退出浏览器驱动，关闭所有关联窗口</span></span><br></pre></td></tr></table></figure><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver   <span class="comment"># 驱动浏览器</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait  <span class="comment"># 等待事件</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">wait = WebDriverWait(browser, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">browser.get(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line">browser.find_element_by_id(<span class="string">'su'</span>)  <span class="comment"># id选择器</span></span><br><span class="line">browser.find_element_by_class_name(<span class="string">'xx'</span>)  <span class="comment"># 类选择器，1个</span></span><br><span class="line">browser.find_elements_by_class_name(<span class="string">'xx'</span>)  <span class="comment"># 类选择器，多个</span></span><br><span class="line">browser.find_element_by_link_text(<span class="string">'xxx'</span>)  <span class="comment"># 链接文本选择器</span></span><br><span class="line">browser.find_element_by_xpath(<span class="string">'xxxx'</span>)  <span class="comment"># xpath选择器</span></span><br><span class="line">browser.find_element_by_tag_name(<span class="string">'h1'</span>)  <span class="comment"># 标签选择器，获取1个</span></span><br><span class="line">browser.find_elements_by_tag_name(<span class="string">'h1'</span>)  <span class="comment"># 标签选择器，获取多个</span></span><br><span class="line">browser.find_element_by_css_selector(<span class="string">'xxx'</span>)  <span class="comment"># 样式选择器</span></span><br></pre></td></tr></table></figure><h3 id="find-element-by-xpath"><a href="#find-element-by-xpath" class="headerlink" title="find_element_by_xpath"></a>find_element_by_xpath</h3><p>测试网页的HTML代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"div1-img1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">src</span>=<span class="string">"http://www.sogou.com/images/logo/new/sogou.png"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">href</span>=<span class="string">"http://www.sogou.com"</span>&gt;</span>sogou image<span class="tag">&lt;/<span class="name">img</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"div1input"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.sogou.com"</span>&gt;</span>搜狗搜索<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"查询"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"div2-img2"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">src</span>=<span class="string">"http://www.baidu.com/img/bdlogo.png"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>baidu image<span class="tag">&lt;/<span class="name">img</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"div2input"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>百度搜索<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"查询"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、绝对路径</span></span><br><span class="line">element = driver.find_element_by_xpath(<span class="string">'/html/body/div/input[@value="查询"]'</span>)</span><br><span class="line"><span class="comment"># 上述xpath定位表达式从html dom树的根节点（html节点）开始逐层查找，最后定位到“查询”按钮节点。路径表达式“/”表示跟节点。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、相对路径</span></span><br><span class="line">element = driver.find_element_by_xpath(<span class="string">'//input[@value='</span>查询<span class="string">']'</span>)</span><br><span class="line"><span class="comment"># 上述xpath定位表达式中//表示从匹配选择的当前节点开始选择文档中的节点，而不考虑特面的位置。input[@value="查询"]表示定位value值为“查询”两个字的input页面元素。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、索引号定位元素</span></span><br><span class="line">element=driver.find_element_by_xpath(<span class="string">"//input[1]"</span>)</span><br><span class="line"><span class="comment"># 索引号定位方式是根据该页面元素在页面中相同标签名之间出现的索引位置来进行定位。上述xpath定位表达式表示查找页面中第二个出现的input元素，即被测试页面上的“查询”按钮。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4、使用页面元素的属性值定位元素</span></span><br><span class="line">img = driver.find_element_by_xpath(<span class="string">"//input[@alt='div1-img1' and @href='http://www.sogou.com']"</span>)</span><br><span class="line"><span class="comment"># 表达式使用了相对路径再结合元素拥有的特定属性方法进行定位，定位元素img的属性是“alt”，值为“div1-img1”，使用@符号指明后面接的是属性，并同属性及属性值一起写到元素后的方括号中。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5、模糊属性值定位元素</span></span><br><span class="line">elements=driver.find_elements_by_xpath(<span class="string">"//img[starts-with(@alt,"</span>div1<span class="string">")]"</span>)</span><br><span class="line"><span class="comment"># 查找属性alt的属性值以div1关键字开始的页面元素</span></span><br><span class="line">elements=driver.find_elements_by_xpath(<span class="string">"//img[contains(@alt,"</span>img<span class="string">")]"</span>)</span><br><span class="line"><span class="comment"># 查找alt属性的属性值包含img关键字的页面元素，只要包含即可，无需考虑位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 6、使用xpath轴定位元素</span></span><br><span class="line">img = driver.find_element_by_xpath(<span class="string">"//img[@alt='div2-img2']/parent::div"</span>)</span><br><span class="line"><span class="comment"># 查找到属性alt的属性值为div2-img2的img元素，并基于该img元素的位置找到它上一级的div页面元素</span></span><br><span class="line"></span><br><span class="line">img = driver.find_element_by_xpath(<span class="string">"//div[@id='div1']/child::img"</span>)</span><br><span class="line"><span class="comment"># 查找到ID属性值为div1的div元素，并基于div的位置找到它下层节点中的img页面元素</span></span><br><span class="line"></span><br><span class="line">//img[@alt=<span class="string">'div2-img2'</span>]/ancestor::div</span><br><span class="line"><span class="comment"># 查找到属性alt的属性值为div2-img2的img元素，并基于该img元素的位置找到它上级的div元素</span></span><br><span class="line"></span><br><span class="line">//div[@name=<span class="string">'div2'</span>]/descendant::img</span><br><span class="line"><span class="comment"># 查找到属性name的属性值为div2的div元素，并基于该元素的位置找到它下级所有节点中的img页面元素</span></span><br><span class="line"></span><br><span class="line">//div[@id=<span class="string">'div1'</span>]/following::img</span><br><span class="line"><span class="comment"># 查找到ID属性值为div1的div页面元素，并基于div的位置找到它后面节点中的img页面元素</span></span><br><span class="line"></span><br><span class="line">//a[@href=<span class="string">'http://www.sogou.com'</span>]/following-sibling::input</span><br><span class="line"><span class="comment"># 查找到链接地址为http：//www.sogou.com的链接页面元素a，并基于链接的位置找到它后续兄弟节点中的input页面元素</span></span><br><span class="line"></span><br><span class="line">//img[@alt=<span class="string">'div2-img2'</span>]/preceding::div</span><br><span class="line"><span class="comment"># 查找到属性alt的属性值为div2-img2的图片页面元素img，并基于图片的位置找到它前面节点中的div页面元素</span></span><br><span class="line"></span><br><span class="line">//input[@value=<span class="string">'查询'</span>]/preceding-sibling::a[<span class="number">1</span>]</span><br><span class="line"><span class="comment"># 查找到value属性值为“查询”的输入框页面元素，并基于该输入框的位置找到他前面同级节点中的第一个链接页面元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 有时候我们会再轴后面加一个星号*， 便是通配符，如：//input[@value="查询"]/preceding::*，它表示查找属性value的值为“查询”的输入框input元素前面所有的同级元素，但不包括input元素本身</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 7、页面元素的文本定位元素</span></span><br><span class="line"><span class="comment"># 通过text()函数可以定位到元素文本包含某些关键内容的页面元素</span></span><br><span class="line">sogou_a=driver.find_element_by_xpath(<span class="string">'//a[text()="搜狗搜索"]'</span>)</span><br><span class="line">sogou_a=driver.find_element_by_xpath(<span class="string">'//a[.="搜狗搜索"]'</span>)</span><br><span class="line"><span class="comment"># 查找文本内容为“搜狗搜索”的链接页面元素，使用的是精准匹配方式，也就是说文本内容必须完全匹配，不能多一个字也不能少一个字。第二个xpath语句中使用了以个点. 这里的点等价于text()，都指代的是当前节点的文本内容</span></span><br><span class="line"></span><br><span class="line">baidu_a=driver.find_element_by_xpath(<span class="string">'//a[contains(.,"百度")]'</span>)</span><br><span class="line">baidu_a=driver.find_element_by_xpath(<span class="string">'//a[contains(text(),'</span>百度<span class="string">')]'</span>)</span><br><span class="line"><span class="comment"># 查找文本内容包含“百度”关键字的链接页面元素，使用的是模糊匹配方式，即可以根据部分文本关键字进行匹配</span></span><br><span class="line"></span><br><span class="line">div=driver.find_element_by_xpath(<span class="string">'//a[contains(text(),"百度")]/preceding::div'</span>)</span><br><span class="line">div=driver.find_element_by_xpath(<span class="string">'//a[contains(. , "百度")]/..'</span>)</span><br><span class="line"><span class="comment"># 查找文本内容包含“百度”关键字的链接页面元素a的上层父元素div，6最后使用了两个点。。，它表示选取当前节点的父节点，等价于preceding::div。</span></span><br></pre></td></tr></table></figure><h2 id="执行JavaScript"><a href="#执行JavaScript" class="headerlink" title="执行JavaScript"></a>执行JavaScript</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver  <span class="comment"># 驱动浏览器</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">browser.get(<span class="string">'https://www.zhihu.com/explore'</span>)</span><br><span class="line">browser.execute_script(<span class="string">'alert("xxoo")'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Selenium WebDriver 笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="爬虫" scheme="https://silencejql.gitee.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Python" scheme="https://silencejql.gitee.io/tags/Python/"/>
    
      <category term="Web" scheme="https://silencejql.gitee.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>刷网课随记</title>
    <link href="https://silencejql.gitee.io/%E5%88%B7%E7%BD%91%E8%AF%BE%E9%9A%8F%E8%AE%B0.html"/>
    <id>https://silencejql.gitee.io/刷网课随记.html</id>
    <published>2020-08-03T03:31:08.000Z</published>
    <updated>2020-08-05T09:48:13.449Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center><a id="more"></a><h2 id="视频播放参数"><a href="#视频播放参数" class="headerlink" title="视频播放参数"></a>视频播放参数</h2><h3 id="倍速播放"><a href="#倍速播放" class="headerlink" title="倍速播放"></a>倍速播放</h3><p><code>document.querySelector(&#39;video&#39;).playbackRate = 4.0</code></p><h4 id="爬虫执行脚本"><a href="#爬虫执行脚本" class="headerlink" title="爬虫执行脚本"></a>爬虫执行脚本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">js = <span class="string">"document.querySelector('video').playbackRate = 4.0"</span></span><br><span class="line">driver.execute_script(js)</span><br></pre></td></tr></table></figure><h2 id="下载视频课程"><a href="#下载视频课程" class="headerlink" title="下载视频课程"></a>下载视频课程</h2><h3 id="模拟登录"><a href="#模拟登录" class="headerlink" title="模拟登录"></a>模拟登录</h3><h4 id="Webdriver"><a href="#Webdriver" class="headerlink" title="Webdriver"></a>Webdriver</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">option = webdriver.ChromeOptions()</span><br><span class="line">driver = webdriver.Chrome(chrome_options=option)</span><br><span class="line">driver.get(<span class="string">"https://www.bjjnts.cn/login"</span>)</span><br><span class="line">driver.find_element_by_name(<span class="string">"username"</span>).send_keys(<span class="string">"uesrname"</span>) <span class="comment">#元素赋值模拟输入</span></span><br><span class="line">driver.find_element_by_name(<span class="string">"password"</span>).send_keys(<span class="string">"password"</span>)</span><br><span class="line">driver.find_element_by_xpath(<span class="string">"//button[@class='login_btn' and @type='submit']"</span>).click() <span class="comment">#登录按钮点击事件</span></span><br><span class="line">driver.get(url)</span><br><span class="line"><span class="keyword">return</span>  driver.page_source</span><br></pre></td></tr></table></figure><h4 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h4><p>通过抓包拿到cookie，再将cookie放到header中请求即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">driver.find_element_by_id(<span class="string">'user'</span>).send_keys(<span class="string">'用户账号'</span>)</span><br><span class="line">driver.find_element_by_id(<span class="string">'pass'</span>).send_keys(<span class="string">'用户密码'</span>)</span><br><span class="line">driver.find_element_by_xpath(<span class="string">'//*[@id="submit"]'</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">cookie = driver.get_cookies()</span><br><span class="line">cookiea = [item[<span class="string">"name"</span>] + <span class="string">"="</span> + item[<span class="string">"value"</span>] <span class="keyword">for</span> item <span class="keyword">in</span> cookie]</span><br><span class="line">cookiestr = <span class="string">'; '</span>.join(item <span class="keyword">for</span> item <span class="keyword">in</span> cookiea)</span><br><span class="line">driver.close() <span class="comment">#获取到登录cookie,就可以关闭窗口了</span></span><br><span class="line"><span class="keyword">return</span> cookiestr</span><br><span class="line"></span><br><span class="line"><span class="comment"># join说明</span></span><br><span class="line">str = <span class="string">"-"</span>;</span><br><span class="line">seq = (<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>); <span class="comment"># 字符串序列</span></span><br><span class="line"><span class="keyword">print</span> str.join( seq );</span><br><span class="line">输出: a-b-c</span><br></pre></td></tr></table></figure><div><div class="fold_hider"><div class="close hider_title">展开/折叠源码</div></div><div class="fold"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> RequestException</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetPageHtml</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        option = webdriver.ChromeOptions()</span><br><span class="line">        driver = webdriver.Chrome(chrome_options=option)</span><br><span class="line">        driver.get(<span class="string">"https://www.bjjnts.cn/login"</span>)</span><br><span class="line">        txt = driver.page_source</span><br><span class="line">        <span class="comment"># 设置默认编码为 utf-8</span></span><br><span class="line">        driver.find_element_by_name(<span class="string">"username"</span>).send_keys(<span class="string">"370831199309165413"</span>)</span><br><span class="line">        driver.find_element_by_name(<span class="string">"password"</span>).send_keys(<span class="string">"bj123465"</span>)</span><br><span class="line">        driver.find_element_by_xpath(<span class="string">"//button[@class='login_btn' and @type='submit']"</span>).click()</span><br><span class="line">        header = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36'</span>,<span class="string">'Referer'</span>:url&#125;</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        driver.get(url)</span><br><span class="line">        <span class="keyword">return</span>  driver.page_source</span><br><span class="line">        <span class="comment">#res = requests.get(url,headers = header)</span></span><br><span class="line">        <span class="comment">#if res.status_code == 200:</span></span><br><span class="line">            <span class="comment">#return res.text</span></span><br><span class="line">        <span class="comment">#return None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ParseHtml</span><span class="params">(html)</span>:</span></span><br><span class="line">    pattern = re.compile(<span class="string">'&lt;video src="(.*?)"\sposter='</span>,re.S)</span><br><span class="line">    items = re.search(pattern,html)</span><br><span class="line">    print(items.group(<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span>  items.group(<span class="number">1</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ParseVideoHtml</span><span class="params">(html, name)</span>:</span></span><br><span class="line">    root = <span class="string">"D://Downloads//"</span></span><br><span class="line">    path = root + name + <span class="string">".mp4"</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(root):</span><br><span class="line">            os.mkdir(root)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">            r = requests.get(html)</span><br><span class="line">            <span class="keyword">with</span> open(path, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(r.content)</span><br><span class="line">                f.close()</span><br><span class="line">                print(<span class="string">"文件保存成功"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"文件已存在"</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"爬取失败"</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_config</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">""""读取配置"""</span></span><br><span class="line">    path = os.getcwd()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">        os.mkdir(path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(<span class="string">"config.json"</span>):  <span class="comment"># 无文件时创建</span></span><br><span class="line">         <span class="keyword">with</span> open(<span class="string">"config.json"</span>, mode=<span class="string">"w"</span>, encoding=<span class="string">"utf-8"</span>) <span class="keyword">as</span> jsonfile:</span><br><span class="line">             jsonfile.write(json.dump(&#123;<span class="string">'url'</span>:<span class="string">'https://www.bjjnts.cn/lessonStudy/202/4268'</span>&#125;),indent=<span class="number">4</span>)</span><br><span class="line">         jsonfile.close()</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"config.json"</span>) <span class="keyword">as</span> json_file:</span><br><span class="line">        config = json.load(json_file)</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#html = "https://bjjnts-bd.xuetangx.com/4233125536dfb27e-10.mp4?auth_key=1596034097-0-0-f7f5072dec07ec43c1110ade3a8d412d"</span></span><br><span class="line">    <span class="comment">#ParseVideoHtml(html)</span></span><br><span class="line">    <span class="comment">#https://www.bjjnts.cn/login</span></span><br><span class="line">    config = read_config()</span><br><span class="line">    <span class="comment">#html = "https://www.bjjnts.cn/lessonStudy/202/4268"</span></span><br><span class="line">    html = config[<span class="string">"url"</span>]</span><br><span class="line">    print(html)</span><br><span class="line">    url = <span class="string">"https://www.bjjnts.cn/login"</span></span><br><span class="line">    option = webdriver.ChromeOptions()</span><br><span class="line">    driver = webdriver.Chrome(chrome_options=option)</span><br><span class="line">    driver.get(url)</span><br><span class="line">    txt = driver.page_source</span><br><span class="line">    <span class="comment"># 设置默认编码为 utf-8</span></span><br><span class="line">    driver.find_element_by_name(<span class="string">"username"</span>).send_keys(<span class="string">"370831199309165413"</span>)</span><br><span class="line">    driver.find_element_by_name(<span class="string">"password"</span>).send_keys(<span class="string">"bj123465"</span>)</span><br><span class="line">    driver.find_element_by_xpath(<span class="string">"//button[@class='login_btn' and @type='submit']"</span>).click()</span><br><span class="line">    header = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36'</span>,<span class="string">'Referer'</span>:url&#125;</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    driver.get(html)</span><br><span class="line"></span><br><span class="line">    videoNames = []</span><br><span class="line">    bsObj = BeautifulSoup(driver.page_source.replace(<span class="string">'&amp;nbsp;'</span>, <span class="string">' '</span>), <span class="string">"lxml"</span>)</span><br><span class="line">    VideoList = bsObj.findAll(class_=<span class="string">"course_study_menubox"</span>)</span><br><span class="line">    <span class="comment">##print(VideoList)</span></span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> video <span class="keyword">in</span> VideoList:</span><br><span class="line">        videoname = video.find(<span class="string">"h4"</span>,class_=<span class="string">"course_study_menutitle"</span>).get_text()</span><br><span class="line">        <span class="comment">##driver.get(html)</span></span><br><span class="line">        videoHtml = ParseHtml(driver.page_source)</span><br><span class="line">        <span class="comment">#th = Thread()</span></span><br><span class="line">        ParseVideoHtml(videoHtml, videoname)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        driver.find_element_by_xpath(<span class="string">"//a[@class='change_chapter lesson-"</span> + str(i) + <span class="string">"']"</span>).find_element_by_xpath(<span class="string">'..'</span>).click()</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        print(str(i))</span><br><span class="line">        <span class="comment">#videoNames.append(video.find("h4",class_="course_study_menutitle").get_text())</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#print(videoNames)</span></span><br><span class="line">    <span class="comment">#print(html)</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://silencejql.gitee.io/tags/python/"/>
    
      <category term="爬虫" scheme="https://silencejql.gitee.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio Code配置记录</title>
    <link href="https://silencejql.gitee.io/Visual%20Studio%20Code%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95.html"/>
    <id>https://silencejql.gitee.io/Visual Studio Code配置记录.html</id>
    <published>2020-07-28T07:39:55.000Z</published>
    <updated>2020-07-28T07:46:55.762Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center>前面啥也没有<a id="more"></a><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>已安装插件：</p><blockquote><p>Bracket Pair Colorizer <br>Chinese (Simplified) Language <br>compareit <br>Dracula Official <br>Git History <br>GitLens <br>Markdownlint <br>Markdown All in One <br>open in browser <br>Python <br>C# <br>Vetur</p></blockquote><h2 id="Python安装第三方库"><a href="#Python安装第三方库" class="headerlink" title="Python安装第三方库"></a>Python安装第三方库</h2><p>进入Python安装路径下的Scripts，执行 .\pip install requests<br>如果在安装时报错：<br>UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xd7 in position 9: ordinal not in range(128)<br>修改位于Python的安装路径下的Lib\mimetypes.py文件,在import下添加如下几行代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> sys.getdefaultencoding() != <span class="string">'gbk'</span>:</span><br><span class="line">    reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'gbk'</span>)</span><br></pre></td></tr></table></figure><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;
前面啥也没有
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>GAE AppID</title>
    <link href="https://silencejql.gitee.io/GAE%20AppID.html"/>
    <id>https://silencejql.gitee.io/GAE AppID.html</id>
    <published>2020-07-16T02:55:23.000Z</published>
    <updated>2020-07-16T02:56:13.810Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center>GAEProxy AppID<a id="more"></a><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">testpro<span class="number">-199603</span>|mytestpro<span class="number">-233908</span>|justinxxnet01|xxnet<span class="number">-1</span>|xxnet<span class="number">-2</span>|xxnet<span class="number">-3</span>|xxnet<span class="number">-4</span>|xxnet<span class="number">-5</span>|xxnet<span class="number">-6</span>|xxnet<span class="number">-7</span>|xxnet<span class="number">-8</span>|xxnet<span class="number">-9</span>|xxnet<span class="number">-10</span>|xxnet<span class="number">-11</span>|xxnet<span class="number">-12</span>|xxnet<span class="number">-13</span>|xxnet<span class="number">-14</span>|xxnet<span class="number">-15</span>|xxnet<span class="number">-16</span>|xxnet<span class="number">-17</span>|xxnet<span class="number">-18</span>|xxnet<span class="number">-19</span>|xxnet<span class="number">-20</span>|xxnet<span class="number">-21</span>|xxnet<span class="number">-22</span>|xxnet<span class="number">-23</span>|xxnet<span class="number">-24</span>|xxnet<span class="number">-25</span>|xxnet<span class="number">-26</span>|xxnet<span class="number">-27</span>|xxnet<span class="number">-28</span>|xxnet<span class="number">-29</span>|xxnet<span class="number">-30</span>|xxnet<span class="number">-31</span>|xxnet<span class="number">-32</span>|xxnet<span class="number">-33</span>|xxnet<span class="number">-34</span>|xxnet<span class="number">-35</span>|xxnet<span class="number">-36</span>|xxnet<span class="number">-37</span>|xxnet<span class="number">-38</span>|xxnet<span class="number">-39</span>|xxnet<span class="number">-40</span>|xxnet<span class="number">-41</span>|xxnet<span class="number">-42</span>|xxnet<span class="number">-43</span>|xxnet<span class="number">-44</span>|xxnet<span class="number">-45</span>|xxnet<span class="number">-46</span>|xxnet<span class="number">-47</span>|xxnet<span class="number">-48</span>|xxnet<span class="number">-49</span>|xxnet<span class="number">-50</span>|xxnet<span class="number">-51</span>|xxnet<span class="number">-52</span>|xxnet<span class="number">-53</span>|xxnet<span class="number">-54</span>|xxnet<span class="number">-55</span>|xxnet<span class="number">-56</span>|xxnet<span class="number">-57</span>|xxnet<span class="number">-58</span>|xxnet<span class="number">-59</span>|xxnet<span class="number">-60</span>|xxnet<span class="number">-61</span>|xxnet<span class="number">-62</span>|xxnet<span class="number">-63</span>|xxnet<span class="number">-64</span>|xxnet<span class="number">-65</span>|xxnet<span class="number">-66</span>|xxnet<span class="number">-67</span>|xxnet<span class="number">-68</span>|xxnet<span class="number">-69</span>|xxnet<span class="number">-70</span>|xxnet<span class="number">-71</span>|xxnet<span class="number">-72</span>|xxnet<span class="number">-72</span>|xxnet<span class="number">-73</span>|xxnet<span class="number">-74</span>|xxnet<span class="number">-75</span>|xxnet<span class="number">-76</span>|xxnet<span class="number">-77</span>|xxnet<span class="number">-78</span>|xxnet<span class="number">-79</span>|xxnet<span class="number">-80</span>|xxnet<span class="number">-81</span>|xxnet<span class="number">-82</span>|xxnet<span class="number">-83</span>|xxnet<span class="number">-84</span>|xxnet<span class="number">-85</span>|xxnet<span class="number">-86</span>|xxnet<span class="number">-87</span>|xxnet<span class="number">-88</span>|xxnet<span class="number">-89</span>|xxnet<span class="number">-90</span>|xxnet<span class="number">-91</span>|xxnet<span class="number">-92</span>|xxnet<span class="number">-93</span>|xxnet<span class="number">-94</span>|xxnet<span class="number">-95</span>|xxnet<span class="number">-96</span>|xxnet<span class="number">-97</span>|xxnet<span class="number">-98</span>|xxnet<span class="number">-99</span>|xxnet<span class="number">-100</span>|xxnet<span class="number">-101</span>|xxnet<span class="number">-102</span>|xxnet<span class="number">-103</span>|xxnet<span class="number">-104</span>|xxnet<span class="number">-105</span>|xxnet<span class="number">-106</span>|xxnet<span class="number">-107</span>|xxnet<span class="number">-108</span>|xxnet<span class="number">-109</span>|xxnet<span class="number">-110</span>|xxnet<span class="number">-111</span>|xxnet<span class="number">-112</span>|xxnet<span class="number">-113</span>|xxnet<span class="number">-114</span>|xxnet<span class="number">-115</span>|xxnet<span class="number">-116</span>|xxnet<span class="number">-117</span>|xxnet<span class="number">-118</span>|xxnet<span class="number">-119</span>|xxnet<span class="number">-120</span>|xxnet<span class="number">-121</span>|xxnet<span class="number">-122</span>|xxnet<span class="number">-123</span>|xxnet<span class="number">-124</span>|xxnet<span class="number">-125</span>|xxnet<span class="number">-126</span>|xxnet<span class="number">-127</span>|xxnet<span class="number">-128</span>|xxnet<span class="number">-129</span>|xxnet<span class="number">-130</span>|xxnet<span class="number">-131</span>|xxnet<span class="number">-132</span>|xxnet<span class="number">-133</span>|xxnet<span class="number">-134</span>|xxnet<span class="number">-135</span>|xxnet<span class="number">-136</span>|xxnet<span class="number">-137</span>|xxnet<span class="number">-138</span>|xxnet<span class="number">-139</span>|xxnet<span class="number">-140</span>|xxnet<span class="number">-141</span>|xxnet<span class="number">-142</span>|xxnet<span class="number">-143</span>|xxnet<span class="number">-144</span>|xxnet<span class="number">-145</span>|xxnet<span class="number">-146</span>|xxnet<span class="number">-147</span>|xxnet<span class="number">-148</span>|xxnet<span class="number">-149</span>|xxnet<span class="number">-150</span>|xxnet<span class="number">-151</span>|xxnet<span class="number">-152</span>|xxnet<span class="number">-153</span>|xxnet<span class="number">-154</span>|xxnet<span class="number">-155</span>|xxnet<span class="number">-156</span>|xxnet<span class="number">-157</span>|xxnet<span class="number">-158</span>|xxnet<span class="number">-159</span>|celtic-bazaar<span class="number">-122813</span>|chrome--<span class="number">-1231</span>|chrome-<span class="number">-1231</span>|chrome<span class="number">-06</span>|chrome<span class="number">-07</span>|chrome<span class="number">-08</span>|chrome<span class="number">-09</span>|chrome<span class="number">-10</span>|chrome<span class="number">-11</span>|chrome<span class="number">-12</span>|chrome<span class="number">-1231</span>|chrome<span class="number">-1231</span><span class="number">-1231</span>|cool-continuity<span class="number">-122814</span>|coral-muse<span class="number">-122814</span>|curious-memory<span class="number">-122814</span>|dospytang11|dospytang12|dospytang13|feisty-current<span class="number">-122813</span>|glassy-vial<span class="number">-122813</span>|groovy-patrol<span class="number">-122814</span>|jingtao<span class="number">-001</span>|practical-album<span class="number">-122814</span>|proud-storm<span class="number">-122813</span>|sound-invention<span class="number">-122813</span>|starlit-cocoa<span class="number">-122814</span>|third-circle<span class="number">-122813</span>|wyslmt11|wyslmt12|xx-net-agent|xxnet-<span class="number">-1229</span>|xxnet<span class="number">-1017</span>|xxnet<span class="number">-1018</span>|xxnet<span class="number">-1019</span>|xxnet<span class="number">-1021</span>|xxnet<span class="number">-1022</span>|xxnet<span class="number">-1023</span>|xxnet<span class="number">-1024</span>|xxnet<span class="number">-1025</span>|xxnet<span class="number">-1026</span>|xxnet<span class="number">-1027</span>|xxnet<span class="number">-1028</span>|xxnet<span class="number">-1029</span>|xxnet<span class="number">-103</span><span class="number">-1188</span>|xxnet<span class="number">-1030</span>|xxnet<span class="number">-1031</span>|xxnet<span class="number">-1032</span><span class="number">-1188</span>|xxnet<span class="number">-1033</span>|xxnet<span class="number">-1034</span>|xxnet<span class="number">-1035</span>|xxnet<span class="number">-1037</span>|xxnet<span class="number">-1053</span>|xxnet<span class="number">-1054</span>|xxnet<span class="number">-200</span><span class="number">-1199</span>|xxnet<span class="number">-201</span><span class="number">-1199</span>|xxnet<span class="number">-202</span><span class="number">-1199</span>|xxnet<span class="number">-203</span><span class="number">-1199</span>|xxnet<span class="number">-204</span><span class="number">-1199</span>|xxnet<span class="number">-205</span><span class="number">-1199</span>|xxnet<span class="number">-206</span><span class="number">-1199</span>|xxnet<span class="number">-207</span><span class="number">-1199</span>|xxnet-cntchen|xxnet-evachen|xxnet-fgfw|xxnet-fgfw<span class="number">-1</span>|xxnet-fgfw<span class="number">-2</span>|xxnet-lennon|xxnet-xlx01|xxnet-xlx02|xxnet-xlx03|xxnet-xlx04|xxnet-xlx05|xxnet-xlx06|xxnet-xlx07|xxnet-xlx08|xxnet-xlx09|xxnet-xlx10|xxnet-xlx11|xxnet-xlx12|chrome26<span class="number">-1100</span>|chrome27<span class="number">-1100</span>|chrome28<span class="number">-1100</span>|chrome29<span class="number">-1100</span>|chrome30<span class="number">-1100</span>|xxnet-foshan2|xxnet-foshan3|xxnet-foshan4|xxnet-foshan5|xxnet-foshan6|chrome7<span class="number">-1234</span>|chrome8<span class="number">-1234</span>|chrome10<span class="number">-1209</span>|chrome11<span class="number">-1209</span>|chrome12<span class="number">-1209</span>|chrome2<span class="number">-1209</span>|alpine-air<span class="number">-123504</span>|caramel-theory<span class="number">-123504</span>|compact-life<span class="number">-123504</span>|clean-yew<span class="number">-123504</span>|cobalt-sector<span class="number">-123504</span>|eternal-outlook<span class="number">-123504</span>|flash-moonlight<span class="number">-123504</span>|omega-terrain<span class="number">-123504</span>|premium-weft<span class="number">-123504</span>|starlit-ship<span class="number">-123504</span>|saaas<span class="number">-1235</span>|x-micron<span class="number">-123504</span>|chrome6<span class="number">-1234</span>|chrome5<span class="number">-1234</span>|chrome4<span class="number">-1234</span>|chrome3<span class="number">-1234</span>|chrome2<span class="number">-1234</span>|chrome1<span class="number">-1234</span>|chrome0<span class="number">-1234</span>|chrome-<span class="number">-1234</span>|chrome--<span class="number">-1234</span>|chrome<span class="number">-1234</span>|chrome6<span class="number">-1209</span>|chrome4<span class="number">-1209</span>|chrome3<span class="number">-1209</span>|universal-stone<span class="number">-123514</span>|stoked-dominion<span class="number">-123514</span>|unique-ellipse<span class="number">-123514</span>|trans-gate<span class="number">-123514</span>|innate-summit<span class="number">-123514</span>|able-involution<span class="number">-123514</span>|helpful-ally<span class="number">-123514</span>|river-karma<span class="number">-123514</span>|future-synapse<span class="number">-123514</span>|booming-alchemy<span class="number">-123514</span>|storied-myth<span class="number">-123514</span>|folkloric-stone<span class="number">-123514</span>|cryptic-lattice<span class="number">-123514</span>|dulcet-bucksaw<span class="number">-123514</span>|airy-machine<span class="number">-123514</span>|e-lexicon<span class="number">-123514</span>|seventh-history<span class="number">-123514</span>|upbeat-voice<span class="number">-123514</span>|stately-math<span class="number">-123514</span>|lucid-sweep<span class="number">-123514</span>|nice-azimuth<span class="number">-123514</span>|spry-equator<span class="number">-123515</span>|neural-tome<span class="number">-123515</span>|famous-charge<span class="number">-123515</span>|elated-practice<span class="number">-123515</span>|unique-antonym<span class="number">-123515</span>|sharp-quest<span class="number">-123515</span>|manifest-altar<span class="number">-123515</span>|steel-citizen<span class="number">-123515</span>|fourth-walker<span class="number">-123515</span>|subtle-sublime<span class="number">-123515</span>|galvanized-<span class="keyword">case</span><span class="number">-123515</span>|xxnet-izual1|xxnet-izual2|xxnet-izual3|xxnet-izual4|xxnet-izual5|chrome11<span class="number">-1239</span>|chrome10<span class="number">-1239</span>|chrome9<span class="number">-1239</span>|chrome8<span class="number">-1239</span>|chrome7<span class="number">-1239</span>|chrome6<span class="number">-1239</span>|chrome5<span class="number">-1239</span>|chrome4<span class="number">-1239</span>|chrome3<span class="number">-1239</span>|chrome2<span class="number">-1239</span>|chrome0<span class="number">-1239</span>|xx-net008<span class="number">-1197</span>|tangtdjia|xxnet-kittycheny1|xxnet-kittycheny2|xxnet-kittycheny3|xxnet-kittycheny4|xxnet-kittycheny5|xxnet-kittycheny6|xxnet-sdcff1|xxnet-sdcff2|xxnet-sdcff3|xxnet-sdcff4|xxnet-sdcff5|xxnet-sdcff6|xxnet-sdcff7|xxnet-sdcff8|xxnet-sdcff9|xxnet-sdcff10|xxnet-sdcff11|xxnet-sdcff12|rosy-dialect<span class="number">-124115</span>|xxnet-sdcf8<span class="number">-1241</span>|xxnet-sdcf1|xxnet-sdcf2|xxnet-sdcf3|xxnet-sdcf4|xxnet-sdcf5|xxnet-sdcf6|xxnet-sdcf7|xxnet-sdcf8|xxnet-sdcf9|xxnet-sdcf10</span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;
GAEProxy AppID
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SQL Server存储过程</title>
    <link href="https://silencejql.gitee.io/SQL%20Server%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B.html"/>
    <id>https://silencejql.gitee.io/SQL Server存储过程.html</id>
    <published>2020-07-12T05:48:33.000Z</published>
    <updated>2020-07-12T06:53:43.344Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center>前面啥也没有<a id="more"></a><h2 id="查询赋值"><a href="#查询赋值" class="headerlink" title="查询赋值"></a>查询赋值</h2><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> [EOLData]</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">/****** Object:  StoredProcedure [dbo].[UpDateHLAResult]    Script Date: 07/12/2020 13:45:44 ******/</span></span><br><span class="line"><span class="keyword">SET</span> ANSI_NULLS <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">SET</span> QUOTED_IDENTIFIER <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="comment">-- =============================================</span></span><br><span class="line"><span class="comment">-- Author:  &lt;Author,,Name&gt;</span></span><br><span class="line"><span class="comment">-- Create date: &lt;Create Date,,&gt;</span></span><br><span class="line"><span class="comment">-- Description: &lt;Description,,&gt;</span></span><br><span class="line"><span class="comment">-- =============================================</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">PROCEDURE</span> [dbo].[UpDateHLAResult]</span><br><span class="line">(</span><br><span class="line">@VIN <span class="built_in">varchar</span>(<span class="number">30</span>),</span><br><span class="line">@ZTS <span class="built_in">varchar</span>(<span class="number">30</span>),</span><br><span class="line">@LLOffset <span class="built_in">FLOAT</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="comment">-- SET NOCOUNT ON added to prevent extra result sets from</span></span><br><span class="line"><span class="comment">-- interfering with SELECT statements.</span></span><br><span class="line"><span class="keyword">SET</span> NOCOUNT <span class="keyword">ON</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> @sem <span class="built_in">varchar</span>(<span class="number">30</span>) = <span class="string">''''</span></span><br><span class="line"><span class="comment">-- 声明变量</span></span><br><span class="line"><span class="keyword">DECLARE</span> @LHB <span class="built_in">FLOAT</span></span><br><span class="line"><span class="comment">-- 判断是否存在数据</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">EXISTS</span>(<span class="keyword">select</span> [左远光灯高] <span class="keyword">from</span> [dbo].[车型配置] <span class="keyword">where</span> [ZTS]=@ZTS)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="comment">-- 查询赋值</span></span><br><span class="line">    <span class="keyword">select</span> @LHB = [左远光灯高] <span class="keyword">from</span> [dbo].[车型配置] <span class="keyword">where</span> [ZTS]=@ZTS</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">select</span> @LHB = [左远光灯高] <span class="keyword">from</span> [dbo].[<span class="number">64</span>字节车型配置] <span class="keyword">where</span> [ZTS]=@ZTS</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="comment">-- 赋值</span></span><br><span class="line"><span class="keyword">SET</span> @LHB = @LHB - @LHOffset</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    exec(</span><br><span class="line">    <span class="string">'UPDATE [dbo].[灯光表] SET '</span></span><br><span class="line">    +<span class="string">'[左远光灯高] = '</span>+@sem+ @LHB +@sem</span><br><span class="line">    +<span class="string">'WHERE [VIN] = '</span>+@sem+ @VIN +@sem</span><br><span class="line">    )</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;
前面啥也没有
    
    </summary>
    
      <category term="SQLServer" scheme="https://silencejql.gitee.io/categories/SQLServer/"/>
    
    
  </entry>
  
  <entry>
    <title>HttpWeb</title>
    <link href="https://silencejql.gitee.io/HttpWeb.html"/>
    <id>https://silencejql.gitee.io/HttpWeb.html</id>
    <published>2020-06-24T03:31:01.000Z</published>
    <updated>2020-07-10T06:35:40.388Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center><a id="more"></a><h2 id="HttpWebRequest"><a href="#HttpWebRequest" class="headerlink" title="HttpWebRequest"></a>HttpWebRequest</h2><p>命名空间： System.Net，这是.NET创建者最初开发用于使用HTTP请求的标准类<br>使用HttpWebRequest可以让开发者控制请求/响应流程的各个方面，如 timeouts, cookies, headers, protocols<br>另一个好处是HttpWebRequest类不会阻塞UI线程,例如，当从响应很慢的API服务器下载大文件时，您的应用程序的UI不会停止响应<br>HttpWebRequest通常和WebResponse一起使用，一个发送请求，一个获取数据<br>HttpWebRquest更为底层一些，能够对整个访问过程有个直观的认识，但同时也更加复杂一些</p><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠属性</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">Accept <span class="comment">//获取或设置 Accept HTTP 标头的值。</span></span><br><span class="line">Address <span class="comment">//获取实际响应请求的 Internet 资源的统一资源标识符 (URI)。</span></span><br><span class="line">AllowAutoRedirect <span class="comment">//获取或设置一个值，该值指示请求是否应跟随重定向响应。</span></span><br><span class="line">AllowReadStreamBuffering <span class="comment">//获取或设置一个值，该值指示是否对从 Internet 资源接收的数据进行缓冲处理。</span></span><br><span class="line">AllowWriteStreamBuffering <span class="comment">//获取或设置一个值，该值指示是否对发送到 Internet 资源的数据进行缓冲处理。</span></span><br><span class="line">AuthenticationLevel <span class="comment">//获取或设置用于此请求的身份验证和模拟的级别。(继承自 WebRequest)</span></span><br><span class="line">AutomaticDecompression <span class="comment">//获取或设置所使用的解压缩类型。</span></span><br><span class="line">CachePolicy <span class="comment">//获取或设置此请求的缓存策略。(继承自 WebRequest)</span></span><br><span class="line">ClientCertificates <span class="comment">//获取或设置与此请求关联的安全证书集合。</span></span><br><span class="line">Connection <span class="comment">//获取或设置 Connection HTTP 标头的值。</span></span><br><span class="line">ConnectionGroupName <span class="comment">//获取或设置请求的连接组的名称。</span></span><br><span class="line">ContentLength <span class="comment">//获取或设置 Content-length HTTP 标头。</span></span><br><span class="line">ContentType <span class="comment">//获取或设置 Content-type HTTP 标头的值。</span></span><br><span class="line">ContinueDelegate <span class="comment">//获取或设置当从 Internet 资源接收到 HTTP 100-continue 响应时调用的委托方法。</span></span><br><span class="line">ContinueTimeout <span class="comment">//获取或设置在接收到来自服务器的 100-Continue 之前要等待的超时（以毫秒为单位）。</span></span><br><span class="line">CookieContainer <span class="comment">//获取或设置与请求关联的 Cookie。</span></span><br><span class="line">CreatorInstance <span class="comment">//当在子类中重写时，获取从 IWebRequestCreate 类派生的工厂对象，该类用于创建为生成对指定 URI 的请求而实例化的 WebRequest。(继承自 WebRequest)</span></span><br><span class="line">Credentials <span class="comment">//获取或设置请求的身份验证信息。</span></span><br><span class="line">Date <span class="comment">//获取或设置要在 HTTP 请求中使用的 Date HTTP 标头值。</span></span><br><span class="line">DefaultCachePolicy <span class="comment">//获取或设置此请求的默认缓存策略。</span></span><br><span class="line">DefaultMaximumErrorResponseLength <span class="comment">//获取或设置 HTTP 错误响应的默认最大长度。</span></span><br><span class="line">DefaultMaximumResponseHeadersLength <span class="comment">//获取或设置 MaximumResponseHeadersLength 属性的默认值。</span></span><br><span class="line">Expect <span class="comment">//获取或设置 Expect HTTP 标头的值。</span></span><br><span class="line">HaveResponse <span class="comment">//获取一个值，该值指示是否收到了来自 Internet 资源的响应。</span></span><br><span class="line">Headers <span class="comment">//指定构成 HTTP 标头的名称/值对的集合。</span></span><br><span class="line">Host <span class="comment">//获取或设置要在 HTTP 请求中独立于请求 URI 使用的 Host 标头值。</span></span><br><span class="line">IfModifiedSince <span class="comment">//获取或设置 If-Modified-Since HTTP 标头的值。</span></span><br><span class="line">ImpersonationLevel <span class="comment">//获取或设置当前请求的模拟级别。(继承自 WebRequest)</span></span><br><span class="line">KeepAlive <span class="comment">//获取或设置一个值，该值指示是否与 Internet 资源建立持续型连接。</span></span><br><span class="line">MaximumAutomaticRedirections <span class="comment">//获取或设置请求将跟随的重定向的最大数目。</span></span><br><span class="line">MaximumResponseHeadersLength <span class="comment">//获取或设置响应标头允许的最大长度。</span></span><br><span class="line">MediaType <span class="comment">//获取或设置请求的媒体类型。</span></span><br><span class="line">Method <span class="comment">//获取或设置请求的方法。</span></span><br><span class="line">Pipelined <span class="comment">//获取或设置一个值，该值指示是否通过管线将请求传输到 Internet 资源。</span></span><br><span class="line">PreAuthenticate <span class="comment">//获取或设置一个值，该值指示是否随请求发送一个 Authorization 标头。</span></span><br><span class="line">ProtocolVersion <span class="comment">//获取或设置用于请求的 HTTP 版本。</span></span><br><span class="line">Proxy <span class="comment">//获取或设置请求的代理信息。</span></span><br><span class="line">ReadWriteTimeout <span class="comment">//获取或设置写入或读取流时的超时（以毫秒为单位）。</span></span><br><span class="line">Referer <span class="comment">//获取或设置 Referer HTTP 标头的值。</span></span><br><span class="line">RequestUri <span class="comment">//获取请求的原始统一资源标识符 (URI)。</span></span><br><span class="line">SendChunked <span class="comment">//获取或设置一个值，该值指示是否将数据分段发送到 Internet 资源。</span></span><br><span class="line">ServerCertificateValidationCallback <span class="comment">//获取或设置用于验证服务器证书的回调函数。</span></span><br><span class="line">ServicePoint <span class="comment">//获取用于请求的服务点。</span></span><br><span class="line">SupportsCookieContainer <span class="comment">//获取指示请求是否为 CookieContainer 提供支持的值。</span></span><br><span class="line">Timeout <span class="comment">//获取或设置 GetResponse() 和 GetRequestStream() 方法的超时值（以毫秒为单位）。</span></span><br><span class="line">TransferEncoding <span class="comment">//获取或设置 Transfer-encoding HTTP 标头的值。</span></span><br><span class="line">UnsafeAuthenticatedConnectionSharing <span class="comment">//获取或设置一个值，该值指示是否允许经过高速 NTLM 身份验证的连接共享。</span></span><br><span class="line">UseDefaultCredentials <span class="comment">//获取或设置一个 Boolean 值，该值控制是否随请求一起发送默认凭据。</span></span><br><span class="line">UserAgent <span class="comment">//获取或设置 User-agent HTTP 标头的值。</span></span><br></pre></td></tr></table></figure></div></div><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠方法</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Abort() <span class="comment">//取消向 Internet 资源发出的请求。</span></span><br><span class="line">AddRange(Int32) <span class="comment">//向请求添加从请求数据的开始处或结束处的特定范围的字节范围标头。</span></span><br><span class="line">AddRange(Int32, Int32) <span class="comment">//向请求添加指定范围的字节范围标头。</span></span><br><span class="line">AddRange(Int64) <span class="comment">//向请求添加从请求数据的开始处或结束处的特定范围的字节范围标头。</span></span><br><span class="line">AddRange(Int64, Int64) <span class="comment">//向请求添加指定范围的字节范围标头。</span></span><br><span class="line">AddRange(String, Int32) <span class="comment">//向请求添加从请求数据的开始处或结束处计算的特定范围的 Range 标头。</span></span><br><span class="line">AddRange(String, Int32, Int32) <span class="comment">//向请求添加指定范围的范围标头。</span></span><br><span class="line">AddRange(String, Int64) <span class="comment">//向请求添加从请求数据的开始处或结束处计算的特定范围的 Range 标头。</span></span><br><span class="line">AddRange(String, Int64, Int64) <span class="comment">//向请求添加指定范围的范围标头。</span></span><br><span class="line">BeginGetRequestStream(AsyncCallback, Object) <span class="comment">//开始对用于写入数据的 Stream 对象执行异步请求。</span></span><br><span class="line">BeginGetResponse(AsyncCallback, Object) <span class="comment">//开始对 Internet 资源的异步请求。</span></span><br><span class="line">CreateObjRef(Type) <span class="comment">//创建一个对象，该对象包含生成用于与远程对象进行通信的代理所需的全部相关信息。(继承自 MarshalByRefObject)</span></span><br><span class="line">EndGetRequestStream(IAsyncResult) <span class="comment">//结束对用来写入数据的 Stream 对象的异步请求。</span></span><br><span class="line">EndGetRequestStream(IAsyncResult, TransportContext) <span class="comment">//结束对用于写入数据的 Stream 对象的异步请求，并输出与该流关联的 TransportContext。</span></span><br><span class="line">EndGetResponse(IAsyncResult) <span class="comment">//结束对 Internet 资源的异步请求。</span></span><br><span class="line">Equals(Object) <span class="comment">//确定指定的对象是否等于当前对象。(继承自 Object)</span></span><br><span class="line">GetHashCode() <span class="comment">//作为默认哈希函数。(继承自 Object)</span></span><br><span class="line">GetLifetimeService() <span class="comment">//检索控制此实例的生存期策略的当前生存期服务对象。(继承自 MarshalByRefObject)</span></span><br><span class="line">GetObjectData(SerializationInfo, StreamingContext) <span class="comment">//使用序列化目标对象时所需的数据填充 SerializationInfo。</span></span><br><span class="line">GetRequestStream() <span class="comment">//获取用于写入请求数据的 Stream 对象。</span></span><br><span class="line">GetRequestStream(TransportContext) <span class="comment">//获取用于写入请求数据的 Stream 对象，并输出与流关联的 TransportContext。</span></span><br><span class="line">GetRequestStreamAsync()<span class="comment">//当在子类中被重写时，将用于写入数据的 Stream 作为异步操作返回到 Internet 资源。(继承自 WebRequest)</span></span><br><span class="line">GetResponse()<span class="comment">//返回来自 Internet 资源的响应。</span></span><br><span class="line">GetResponseAsync()<span class="comment">//当在子代类中被重写时，将作为异步操作返回对 Internet 请求的响应。(继承自 WebRequest)</span></span><br><span class="line">GetType()<span class="comment">//获取当前实例的 Type。(继承自 Object)</span></span><br><span class="line">InitializeLifetimeService()<span class="comment">//获取生存期服务对象来控制此实例的生存期策略。(继承自 MarshalByRefObject)</span></span><br><span class="line">MemberwiseClone()<span class="comment">//创建当前 Object 的浅表副本。(继承自 Object)</span></span><br><span class="line">MemberwiseClone(Boolean)<span class="comment">//创建当前 MarshalByRefObject 对象的浅表副本。(继承自 MarshalByRefObject)</span></span><br><span class="line">ToString()<span class="comment">//返回表示当前对象的字符串。(继承自 Object)</span></span><br></pre></td></tr></table></figure></div></div><h3 id="Post-amp-Get"><a href="#Post-amp-Get" class="headerlink" title="Post&amp;Get"></a>Post&amp;Get</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//POST方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">HttpPost</span>(<span class="params"><span class="keyword">string</span> Url, <span class="keyword">string</span> postDataStr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(Url);</span><br><span class="line">    request.Method = <span class="string">"POST"</span>;</span><br><span class="line">    request.ContentType = <span class="string">"application/x-www-form-urlencoded"</span>;</span><br><span class="line">    Encoding encoding = Encoding.UTF8;</span><br><span class="line">    <span class="keyword">byte</span>[] postData = encoding.GetBytes(postDataStr);</span><br><span class="line">    request.ContentLength = postData.Length;</span><br><span class="line">    Stream myRequestStream = request.GetRequestStream();</span><br><span class="line">    myRequestStream.Write(postData, <span class="number">0</span>, postData.Length);</span><br><span class="line">    myRequestStream.Close();</span><br><span class="line"></span><br><span class="line">    HttpWebResponse response = (HttpWebResponse)request.GetResponse();</span><br><span class="line">    Stream myResponseStream = response.GetResponseStream();</span><br><span class="line">    StreamReader myStreamReader = <span class="keyword">new</span> StreamReader(myResponseStream, encoding);</span><br><span class="line">    <span class="keyword">string</span> retString = myStreamReader.ReadToEnd();</span><br><span class="line">    myStreamReader.Close();</span><br><span class="line">    myResponseStream.Close();</span><br><span class="line">    <span class="keyword">if</span> (response != <span class="literal">null</span>)</span><br><span class="line">        response.Close();</span><br><span class="line">    <span class="keyword">if</span> (request != <span class="literal">null</span>)</span><br><span class="line">        request.Abort();</span><br><span class="line">    <span class="keyword">return</span> retString;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">Post</span>(<span class="params"><span class="keyword">string</span> Url, <span class="keyword">string</span> Data, <span class="keyword">string</span> Referer</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(Url);</span><br><span class="line">    request.Method = <span class="string">"POST"</span>;</span><br><span class="line">    request.Referer = Referer;</span><br><span class="line">    <span class="keyword">byte</span>[] bytes = Encoding.UTF8.GetBytes(Data);</span><br><span class="line">    request.ContentType = <span class="string">"application/x-www-form-urlencoded"</span>;</span><br><span class="line">    request.ContentLength = bytes.Length;</span><br><span class="line">    Stream myResponseStream = request.GetRequestStream();</span><br><span class="line">    myResponseStream.Write(bytes, <span class="number">0</span>, bytes.Length);</span><br><span class="line"></span><br><span class="line">    HttpWebResponse response = (HttpWebResponse)request.GetResponse();</span><br><span class="line">    StreamReader myStreamReader = <span class="keyword">new</span> StreamReader(response.GetResponseStream(), Encoding.UTF8);</span><br><span class="line">    <span class="keyword">string</span> retString = myStreamReader.ReadToEnd();</span><br><span class="line"></span><br><span class="line">    myStreamReader.Close();</span><br><span class="line">    myResponseStream.Close();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (response != <span class="literal">null</span>)</span><br><span class="line">        response.Close();</span><br><span class="line">    <span class="keyword">if</span> (request != <span class="literal">null</span>)</span><br><span class="line">        request.Abort();</span><br><span class="line">    <span class="keyword">return</span> retString;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//GET方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">HttpGet</span>(<span class="params"><span class="keyword">string</span> Url, <span class="keyword">string</span> postDataStr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(Url + (postDataStr == <span class="string">""</span> ? <span class="string">""</span> : <span class="string">"?"</span>) + postDataStr);</span><br><span class="line">    request.Proxy = <span class="literal">null</span>;</span><br><span class="line">    request.KeepAlive = <span class="literal">false</span>;</span><br><span class="line">    request.Method = <span class="string">"GET"</span>;</span><br><span class="line">    <span class="comment">//request.ContentType = "text/html;charset=UTF-8";</span></span><br><span class="line">    request.ContentType = <span class="string">"application/json; charset=UTF-8"</span>;</span><br><span class="line"></span><br><span class="line">    HttpWebResponse response = (HttpWebResponse)request.GetResponse();</span><br><span class="line">    Stream myResponseStream = response.GetResponseStream();</span><br><span class="line">    <span class="comment">//StreamReader myStreamReader = new StreamReader(myResponseStream, Encoding.GetEncoding("utf-8"));</span></span><br><span class="line">    StreamReader myStreamReader = <span class="keyword">new</span> StreamReader(myResponseStream, Encoding.UTF8);</span><br><span class="line">    <span class="keyword">string</span> retString = myStreamReader.ReadToEnd();</span><br><span class="line"></span><br><span class="line">    myStreamReader.Close();</span><br><span class="line">    myResponseStream.Close();</span><br><span class="line">    <span class="keyword">if</span> (response != <span class="literal">null</span>)</span><br><span class="line">        response.Close();</span><br><span class="line">    <span class="keyword">if</span> (request != <span class="literal">null</span>)</span><br><span class="line">        request.Abort();</span><br><span class="line">    <span class="keyword">return</span> retString;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="HttpClient"><a href="#HttpClient" class="headerlink" title="HttpClient"></a>HttpClient</h2><p>HttpClient是.NET4.5引入的一个HTTP客户端库，其命名空间为 System.Net.Http ，.NET 4.5之前我们可能使用WebClient和HttpWebRequest来达到相同目的<br>HttpClient利用了最新的面向任务模式，使得处理异步请求非常容易<br>它适合用于多次请求操作，一般设置好默认头部后，可以进行重复多次的请求，基本上用一个实例可以提交任何的HTTP请求<br>HttpClient有预热机制，第一次进行访问时比较慢，所以不应该用到HttpClient就new一个出来，应该使用单例或其他方式获取HttpClient的实例</p><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠构造函数</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HttpClient() <span class="comment">//使用释放此实例时释放的 HttpClientHandler 初始化 HttpClient 类的新实例。</span></span><br><span class="line">HttpClient(HttpMessageHandler) <span class="comment">//使用指定的处理程序初始化 HttpClient 类的新实例。 处理程序在释放此实例时被释放。</span></span><br><span class="line">HttpClient(HttpMessageHandler, Boolean) <span class="comment">//使用提供的处理程序初始化 HttpClient 类的新实例，并指定在释放此实例时是否应释放该处理程序。</span></span><br></pre></td></tr></table></figure></div></div><h3 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠属性</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">BaseAddress<span class="comment">//获取或设置用于发送请求的 Internet 资源的统一资源标识符 (URI) 的基址。</span></span><br><span class="line">DefaultProxy<span class="comment">//获取或设置全局 HTTP 代理。</span></span><br><span class="line">DefaultRequestHeaders<span class="comment">//获取应与每个请求一起发送的标头。</span></span><br><span class="line">DefaultRequestVersion<span class="comment">//获取或设置对此 HttpClient 实例发出的后续请求使用的默认 HTTP 版本。</span></span><br><span class="line">MaxResponseContentBufferSize<span class="comment">//获取或设置要在读取响应内容时缓冲的最大字节数。</span></span><br><span class="line">Timeout<span class="comment">//获取或设置请求超时前等待的时间跨度。</span></span><br></pre></td></tr></table></figure></div></div><h3 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠方法</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">CancelPendingRequests()<span class="comment">//取消该实例上的所有挂起的请求。</span></span><br><span class="line">DeleteAsync(String)<span class="comment">//以异步操作将 DELETE 请求发送给指定 URI。</span></span><br><span class="line">DeleteAsync(String, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 DELETE 请求到指定的 URI。</span></span><br><span class="line">DeleteAsync(Uri)<span class="comment">//以异步操作将 DELETE 请求发送给指定 URI。</span></span><br><span class="line">DeleteAsync(Uri, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 DELETE 请求到指定的 URI。</span></span><br><span class="line">Dispose()<span class="comment">//释放由 HttpMessageInvoker 使用的非托管资源和托管资源。(继承自 HttpMessageInvoker)</span></span><br><span class="line">Dispose(Boolean)<span class="comment">//释放由 HttpClient 使用的非托管资源，并可根据需要释放托管资源。</span></span><br><span class="line">Equals(Object)<span class="comment">//确定指定的对象是否等于当前对象。(继承自 Object)</span></span><br><span class="line">GetAsync(String)<span class="comment">//以异步操作将 GET 请求发送给指定 URI。</span></span><br><span class="line">GetAsync(String, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 GET 请求到指定的 URI。</span></span><br><span class="line">GetAsync(String, HttpCompletionOption)<span class="comment">//用以异步操作的 HTTP 完成选项发送 GET 请求到指定的 URI。</span></span><br><span class="line">GetAsync(String, HttpCompletionOption, CancellationToken)<span class="comment">//用以异步操作的 HTTP 完成选项和取消标记发送 GET 请求到指定的 URI。</span></span><br><span class="line">GetAsync(Uri)<span class="comment">//以异步操作将 GET 请求发送给指定 URI。</span></span><br><span class="line">GetAsync(Uri, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 GET 请求到指定的 URI。</span></span><br><span class="line">GetAsync(Uri, HttpCompletionOption)<span class="comment">//用以异步操作的 HTTP 完成选项发送 GET 请求到指定的 URI。</span></span><br><span class="line">GetAsync(Uri, HttpCompletionOption, CancellationToken)<span class="comment">//用以异步操作的 HTTP 完成选项和取消标记发送 GET 请求到指定的 URI。</span></span><br><span class="line">GetByteArrayAsync(String)<span class="comment">//将 GET 请求发送到指定 URI 并在异步操作中以字节数组的形式返回响应正文。</span></span><br><span class="line">GetByteArrayAsync(Uri)<span class="comment">//将 GET 请求发送到指定 URI 并在异步操作中以字节数组的形式返回响应正文。</span></span><br><span class="line">GetHashCode()<span class="comment">//作为默认哈希函数。(继承自 Object)</span></span><br><span class="line">GetStreamAsync(String)<span class="comment">//将 GET 请求发送到指定 URI 并在异步操作中以流的形式返回响应正文。</span></span><br><span class="line">GetStreamAsync(Uri)<span class="comment">//将 GET 请求发送到指定 URI 并在异步操作中以流的形式返回响应正文。</span></span><br><span class="line">GetStringAsync(String)<span class="comment">//将 GET 请求发送到指定 URI 并在异步操作中以字符串的形式返回响应正文。</span></span><br><span class="line">GetStringAsync(Uri)<span class="comment">//将 GET 请求发送到指定 URI 并在异步操作中以字符串的形式返回响应正文。</span></span><br><span class="line">GetType()<span class="comment">//获取当前实例的 Type。(继承自 Object)</span></span><br><span class="line">MemberwiseClone()<span class="comment">//创建当前 Object 的浅表副本。(继承自 Object)</span></span><br><span class="line">PatchAsync(String, HttpContent)<span class="comment">//以异步操作方式将 PATCH 请求发送到指定为字符串的 URI。</span></span><br><span class="line">PatchAsync(String, HttpContent, CancellationToken)<span class="comment">//以异步操作方式将带有取消令牌的 PATCH 请求发送到表示为字符串的 URI。</span></span><br><span class="line">PatchAsync(Uri, HttpContent)<span class="comment">//以异步操作方式发送 PATCH 请求。</span></span><br><span class="line">PatchAsync(Uri, HttpContent, CancellationToken)<span class="comment">//以异步操作方式发送带有取消令牌的 PATCH 请求。</span></span><br><span class="line">PostAsync(String, HttpContent)<span class="comment">//以异步操作将 POST 请求发送给指定 URI。</span></span><br><span class="line">PostAsync(String, HttpContent, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 POST 请求。</span></span><br><span class="line">PostAsync(Uri, HttpContent)<span class="comment">//以异步操作将 POST 请求发送给指定 URI。</span></span><br><span class="line">PostAsync(Uri, HttpContent, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 POST 请求。</span></span><br><span class="line">PutAsync(String, HttpContent)<span class="comment">//以异步操作将 PUT 请求发送给指定 URI。</span></span><br><span class="line">PutAsync(String, HttpContent, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 PUT 请求。</span></span><br><span class="line">PutAsync(Uri, HttpContent)<span class="comment">//以异步操作将 PUT 请求发送给指定 URI。</span></span><br><span class="line">PutAsync(Uri, HttpContent, CancellationToken)<span class="comment">//用以异步操作的取消标记发送 PUT 请求。</span></span><br><span class="line">SendAsync(HttpRequestMessage)<span class="comment">//以异步操作发送 HTTP 请求。</span></span><br><span class="line">SendAsync(HttpRequestMessage, CancellationToken)<span class="comment">//以异步操作发送 HTTP 请求。</span></span><br><span class="line">SendAsync(HttpRequestMessage, HttpCompletionOption)<span class="comment">//以异步操作发送 HTTP 请求。</span></span><br><span class="line">SendAsync(HttpRequestMessage, HttpCompletionOption, CancellationToken)<span class="comment">//以异步操作发送 HTTP 请求。</span></span><br><span class="line">ToString()<span class="comment">//返回表示当前对象的字符串。(继承自 Object)</span></span><br></pre></td></tr></table></figure></div></div><h3 id="单例模式（Singleton-Pattern）"><a href="#单例模式（Singleton-Pattern）" class="headerlink" title="单例模式（Singleton Pattern）"></a>单例模式（Singleton Pattern）</h3><p>这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式</p><h3 id="懒汉模式"><a href="#懒汉模式" class="headerlink" title="懒汉模式"></a>懒汉模式</h3><p>默认不会实例化，什么时候用什么时候new</p><h3 id="饿汉模式"><a href="#饿汉模式" class="headerlink" title="饿汉模式"></a>饿汉模式</h3><p>类初始化时,会立即加载该对象，线程天生安全,调用效率高</p><h3 id="双检锁-双重校验锁（DCL，即-double-checked-locking）"><a href="#双检锁-双重校验锁（DCL，即-double-checked-locking）" class="headerlink" title="双检锁/双重校验锁（DCL，即 double-checked locking）"></a>双检锁/双重校验锁（DCL，即 double-checked locking）</h3><p>这种方式采用双锁机制，安全且在多线程情况下能保持高性能</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><div><div class="fold_hider"><div class="close hider_title">展开/折叠示例</div></div><div class="fold"><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HttpClientHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="keyword">object</span> LockObj = <span class="keyword">new</span> <span class="keyword">object</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HttpClient client = <span class="literal">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HttpClientHelper</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        GetInstance();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HttpClient <span class="title">GetInstance</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (client == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">lock</span> (LockObj)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (client == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;<span class="keyword">string</span>&gt; <span class="title">PostAsync</span>(<span class="params"><span class="keyword">string</span> url, <span class="keyword">string</span> strJson</span>)<span class="comment">//post异步请求方法</span></span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            HttpContent content = <span class="keyword">new</span> StringContent(strJson);</span><br><span class="line">            content.Headers.ContentType = <span class="keyword">new</span> System.Net.Http.Headers.MediaTypeHeaderValue(<span class="string">"application/json"</span>);</span><br><span class="line">            <span class="comment">//由HttpClient发出异步Post请求</span></span><br><span class="line">            HttpResponseMessage res = <span class="keyword">await</span> client.PostAsync(url, content);</span><br><span class="line">            <span class="keyword">if</span> (res.StatusCode == System.Net.HttpStatusCode.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span> str = res.Content.ReadAsStringAsync().Result;</span><br><span class="line">                <span class="keyword">return</span> str;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">Post</span>(<span class="params"><span class="keyword">string</span> url, <span class="keyword">string</span> strJson</span>)<span class="comment">//post同步请求方法</span></span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">           <span class="comment">// private static HttpClient client = new HttpClient();</span></span><br><span class="line">           <span class="comment">//client.DefaultRequestHeaders.Accept.TryParseAdd("application/json");</span></span><br><span class="line">            HttpContent content = <span class="keyword">new</span> StringContent(strJson);</span><br><span class="line">            content.Headers.ContentType = <span class="keyword">new</span> System.Net.Http.Headers.MediaTypeHeaderValue(<span class="string">"application/json"</span>);</span><br><span class="line">            <span class="comment">//client.DefaultRequestHeaders.Connection.Add("keep-alive");</span></span><br><span class="line">            <span class="comment">//由HttpClient发出Post请求</span></span><br><span class="line">            Task&lt;HttpResponseMessage&gt; res = client.PostAsync(url, content);</span><br><span class="line">            <span class="keyword">if</span> (res.Result.StatusCode == System.Net.HttpStatusCode.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span> str = res.Result.Content.ReadAsStringAsync().Result;</span><br><span class="line">                <span class="keyword">return</span> str;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">Get</span>(<span class="params"><span class="keyword">string</span> url</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">           <span class="comment">// private static HttpClient client = new HttpClient();</span></span><br><span class="line">           <span class="comment">//client.DefaultRequestHeaders.Accept.TryParseAdd("application/json");</span></span><br><span class="line">            <span class="keyword">var</span> responseString = client.GetStringAsync(url);</span><br><span class="line">            <span class="keyword">return</span> responseString.Result;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;写在前面&lt;/center&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
