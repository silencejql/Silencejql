<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Silencejql</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://silencejql.coding.me/"/>
  <updated>2019-08-06T03:52:47.324Z</updated>
  <id>http://silencejql.coding.me/</id>
  
  <author>
    <name>Justin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>现场问题整理</title>
    <link href="http://silencejql.coding.me/2019/08/06/%E7%8E%B0%E5%9C%BA%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86/"/>
    <id>http://silencejql.coding.me/2019/08/06/现场问题整理/</id>
    <published>2019-08-06T03:31:16.000Z</published>
    <updated>2019-08-06T03:52:47.324Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Enter password to read！" />    <label for="pass">Enter password to read！</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      整理现场遇到的各种问题
    
    </summary>
    
      <category term="工作" scheme="http://silencejql.coding.me/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="现场问题" scheme="http://silencejql.coding.me/tags/%E7%8E%B0%E5%9C%BA%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>现场软件备份路径</title>
    <link href="http://silencejql.coding.me/2019/08/06/%E7%8E%B0%E5%9C%BA%E8%BD%AF%E4%BB%B6%E5%A4%87%E4%BB%BD%E8%B7%AF%E5%BE%84/"/>
    <id>http://silencejql.coding.me/2019/08/06/现场软件备份路径/</id>
    <published>2019-08-06T02:54:24.000Z</published>
    <updated>2019-08-06T03:26:45.047Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Enter password to read！" />    <label for="pass">Enter password to read！</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      现场软件备份在网盘中的路径
    
    </summary>
    
      <category term="工作" scheme="http://silencejql.coding.me/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="现场软件备份" scheme="http://silencejql.coding.me/tags/%E7%8E%B0%E5%9C%BA%E8%BD%AF%E4%BB%B6%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
  <entry>
    <title>Postgresql数据导入导出</title>
    <link href="http://silencejql.coding.me/2019/07/30/Postgresql%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/"/>
    <id>http://silencejql.coding.me/2019/07/30/Postgresql数据导入导出/</id>
    <published>2019-07-30T00:32:28.000Z</published>
    <updated>2019-08-06T03:33:04.165Z</updated>
    
    <content type="html"><![CDATA[<h2 id="测试软件导出、Postgresql导入"><a href="#测试软件导出、Postgresql导入" class="headerlink" title="测试软件导出、Postgresql导入"></a>测试软件导出、Postgresql导入</h2><h3 id="测试软件导出"><a href="#测试软件导出" class="headerlink" title="测试软件导出"></a>测试软件导出</h3><blockquote><p>连接数据库设置完筛选条件后点击导出到Excel重命名为：表名.csv</p></blockquote><h3 id="测试软件导入"><a href="#测试软件导入" class="headerlink" title="测试软件导入"></a>测试软件导入</h3><blockquote><p>1、打开导出表添加新的数据后，删除第一行表头以及第一列序号<br>2、删除原数据库已有行后保存<br>3、打开Postgres找到相应表右键导入<br>4、文件名选择csv文件路径、格式选csv、字符编码可选<br>5、点击导入即可</p><blockquote><p>如果主键为自增序列执行6、7<br>6、将相应表的序列创建脚本后删除<br>7、更改脚本中的START大于新增数据的主键ID后执行脚本</p></blockquote></blockquote><h2 id="SQL-shell-psql-导入"><a href="#SQL-shell-psql-导入" class="headerlink" title="SQL shell(psql)导入"></a>SQL shell(psql)导入</h2><blockquote><p>1、将excel处理好后，另存为csv（Comma Delimited）<br>2、运行SQL shell(psql) 并登录<br>3、运行’COPY mytable FROM ‘/myfile.csv’  WITH CSV  HEADER</p></blockquote><h2 id="SQL-shell-psql-导出"><a href="#SQL-shell-psql-导出" class="headerlink" title="SQL shell(psql)导出"></a>SQL shell(psql)导出</h2><blockquote><p>COPY (select * from mytable) to ‘/myfile.csv’ with csv header;</p></blockquote>]]></content>
    
    <summary type="html">
    
      Postgresql数据的导入导出
    
    </summary>
    
      <category term="数据库" scheme="http://silencejql.coding.me/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Postgresql" scheme="http://silencejql.coding.me/tags/Postgresql/"/>
    
  </entry>
  
  <entry>
    <title>无处安放的矫情</title>
    <link href="http://silencejql.coding.me/2019/07/22/%E6%97%A0%E5%A4%84%E5%AE%89%E6%94%BE%E7%9A%84%E7%9F%AB%E6%83%85/"/>
    <id>http://silencejql.coding.me/2019/07/22/无处安放的矫情/</id>
    <published>2019-07-22T06:38:12.000Z</published>
    <updated>2019-07-22T06:39:30.503Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Enter password to read！" />    <label for="pass">Enter password to read！</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+oei2UrNl5P5KkJPEIBY0wiQqvoAM1T5g=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      交钱！
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>C# XML</title>
    <link href="http://silencejql.coding.me/2019/07/11/C-XML/"/>
    <id>http://silencejql.coding.me/2019/07/11/C-XML/</id>
    <published>2019-07-11T04:56:29.000Z</published>
    <updated>2019-07-11T05:25:16.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="XML创建、读取配置"><a href="#XML创建、读取配置" class="headerlink" title="XML创建、读取配置"></a>XML创建、读取配置</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">WirteConfig</span>(<span class="params"><span class="keyword">string</span> FileName, <span class="keyword">string</span> KeyName, <span class="keyword">string</span> Value</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> FilePath = OnlyOneStartUp.UseConfigPath;</span><br><span class="line">        <span class="keyword">string</span> AllFileName = FilePath + <span class="string">"\\"</span> + FileName + <span class="string">".xml"</span>;</span><br><span class="line">        <span class="keyword">if</span> (!Directory.Exists(FilePath))</span><br><span class="line">            Directory.CreateDirectory(FilePath);</span><br><span class="line"></span><br><span class="line">        DataSet ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">        <span class="keyword">if</span> (File.Exists(AllFileName))</span><br><span class="line">            ds.ReadXml(AllFileName);</span><br><span class="line">        <span class="keyword">if</span> (ds.Tables.Count &lt; <span class="number">1</span>)</span><br><span class="line">            ds.Tables.Add();</span><br><span class="line">        <span class="keyword">if</span> (ds.Tables[<span class="number">0</span>].Rows.Count &lt; <span class="number">1</span>)</span><br><span class="line">            ds.Tables[<span class="number">0</span>].Rows.Add();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!ds.Tables[<span class="number">0</span>].Columns.Contains(KeyName))</span><br><span class="line">            ds.Tables[<span class="number">0</span>].Columns.Add(KeyName);</span><br><span class="line">        ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][KeyName] = Value;</span><br><span class="line"></span><br><span class="line">        ds.WriteXml(AllFileName);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> sError = <span class="keyword">string</span>.Format(<span class="string">"写入配置信息Error:&#123;0&#125;"</span>, e.Message);</span><br><span class="line">        ErrorOut(MethodInfo.GetCurrentMethod().Name, sError);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 读出配置文件</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="FileName"&gt;</span>配置文件名称<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="KeyName"&gt;</span>键名<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Value"&gt;</span>返回的值<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">ReadConfig</span>(<span class="params"><span class="keyword">string</span> FileName, <span class="keyword">string</span> KeyName, <span class="keyword">ref</span> <span class="keyword">string</span> Value</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> FilePath = OnlyOneStartUp.UseConfigPath;</span><br><span class="line">        <span class="keyword">string</span> AllFileName = FilePath + <span class="string">"\\"</span> + FileName + <span class="string">".xml"</span>;</span><br><span class="line">        <span class="keyword">if</span> (!Directory.Exists(FilePath))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        DataSet ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">        <span class="keyword">if</span> (File.Exists(AllFileName))</span><br><span class="line">            ds.ReadXml(AllFileName);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (ds.Tables.Count &lt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (ds.Tables[<span class="number">0</span>].Rows.Count &lt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!ds.Tables[<span class="number">0</span>].Columns.Contains(KeyName))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        Value = Convert.ToString(ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][KeyName]);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> sError = <span class="keyword">string</span>.Format(<span class="string">"读取配置信息Error:&#123;0&#125;"</span>, e.Message);</span><br><span class="line">        ErrorOut(MethodInfo.GetCurrentMethod().Name, sError);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ReadConfigEx</span>(<span class="params"><span class="keyword">string</span> FileName, <span class="keyword">string</span> KeyName, <span class="keyword">ref</span> <span class="keyword">string</span> Value</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!ReadConfig(FileName, KeyName, <span class="keyword">ref</span> Value))</span><br><span class="line">        WirteConfig(FileName, KeyName, Value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      C#对XML的操作
    
    </summary>
    
      <category term="C#" scheme="http://silencejql.coding.me/categories/C/"/>
    
      <category term="XML" scheme="http://silencejql.coding.me/categories/C/XML/"/>
    
    
      <category term="XML" scheme="http://silencejql.coding.me/tags/XML/"/>
    
  </entry>
  
  <entry>
    <title>数据转换</title>
    <link href="http://silencejql.coding.me/2019/07/11/%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2/"/>
    <id>http://silencejql.coding.me/2019/07/11/数据转换/</id>
    <published>2019-07-11T03:13:39.000Z</published>
    <updated>2019-07-11T04:52:07.175Z</updated>
    
    <content type="html"><![CDATA[<h2 id="IEEE-to-Double、Char、int"><a href="#IEEE-to-Double、Char、int" class="headerlink" title="IEEE to Double、Char、int"></a>IEEE to Double、Char、int</h2><h3 id="在线转换工具"><a href="#在线转换工具" class="headerlink" title="在线转换工具"></a>在线转换工具</h3><p><a href="http://www.binaryconvert.com" target="_blank" rel="noopener">http://www.binaryconvert.com</a></p><h3 id="C-IEEE-to-Single"><a href="#C-IEEE-to-Single" class="headerlink" title="C# IEEE to Single"></a>C# IEEE to Single</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Single <span class="title">IEEE2Single</span>(<span class="params"><span class="keyword">byte</span>[] b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        Array.Reverse(b);</span><br><span class="line">        Single d = BitConverter.ToSingle(b, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> (Single)Math.Round(d, <span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (System.Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">byte</span>[] <span class="title">SingleToIEEE</span>(<span class="params">Single d</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[]&#123;&#125;;</span><br><span class="line">        b = BitConverter.GetBytes(d);</span><br><span class="line">        Array.Reverse(b);</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (System.Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">byte</span>[] &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3CA97E13-&gt;0.02069</p><h2 id="格式转换"><a href="#格式转换" class="headerlink" title="格式转换"></a>格式转换</h2><h3 id="Double-to-Hex"><a href="#Double-to-Hex" class="headerlink" title="Double to Hex"></a>Double to Hex</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> Height_LF = (<span class="keyword">int</span>)Convert.ToDouble(XmlFO.ListObject[<span class="string">"WBH_LF"</span>].xValue);</span><br><span class="line">Height_RR *= <span class="number">4</span>;</span><br><span class="line"><span class="keyword">string</span> s = <span class="keyword">string</span>.Empty;</span><br><span class="line">s = s + ((<span class="keyword">byte</span>)(Height_LF &gt;&gt; <span class="number">8</span>)).ToString(<span class="string">"x2"</span>)+ <span class="string">" "</span>;</span><br><span class="line">s = s + ((<span class="keyword">byte</span>)(Height_LF)).ToString(<span class="string">"x2"</span>) + <span class="string">" "</span>;</span><br></pre></td></tr></table></figure><p>2700-&gt;0a 8c</p><h3 id="Byte-to-uint"><a href="#Byte-to-uint" class="headerlink" title="Byte to uint"></a>Byte to uint</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uint</span> <span class="title">BytesToUint</span>(<span class="params"><span class="keyword">byte</span>[] bys</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">uint</span> ReVal = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">foreach</span> (<span class="keyword">byte</span> b <span class="keyword">in</span> bys)</span><br><span class="line">  &#123;</span><br><span class="line">      ReVal &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">      ReVal += b;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ReVal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">byte</span>[] <span class="title">UintToBytes</span>(<span class="params"><span class="keyword">uint</span> UnVal, <span class="keyword">int</span> Count</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">byte</span>[] ReVal = <span class="keyword">new</span> <span class="keyword">byte</span>[Count];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Count; i++)</span><br><span class="line">  &#123;</span><br><span class="line">      ReVal[Count - i - <span class="number">1</span>] = (<span class="keyword">byte</span>)(UnVal &gt;&gt; (i * <span class="number">8</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ReVal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Int-to-Byte"><a href="#Int-to-Byte" class="headerlink" title="Int to Byte"></a>Int to Byte</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">ToByte</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">string</span>[] SepPara;</span><br><span class="line">      <span class="keyword">if</span> (!XmlFO.SepParams(sPara, <span class="number">2</span>, <span class="keyword">out</span> SepPara))</span><br><span class="line">          <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">      xBytes tmpbyte = (xBytes)XmlFO.GetCheckSpecTypeObject(SepPara[<span class="number">0</span>], <span class="keyword">typeof</span>(xBytes));</span><br><span class="line">      <span class="keyword">if</span> (tmpbyte == <span class="literal">null</span>)</span><br><span class="line">          <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> Count = Convert.ToInt32(SepPara[<span class="number">1</span>]);</span><br><span class="line">      <span class="keyword">if</span> (Count &gt; <span class="number">4</span>) Count = <span class="number">4</span>;</span><br><span class="line">      <span class="keyword">if</span> (Count &lt; <span class="number">1</span>) Count = <span class="number">1</span>;</span><br><span class="line">      Byte[] TmpByte = <span class="keyword">new</span> <span class="keyword">byte</span>[Count];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Count; i++)</span><br><span class="line">      &#123;</span><br><span class="line">          TmpByte[i] = (<span class="keyword">byte</span>)((iValue &gt;&gt; ((Count - i - <span class="number">1</span>) * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      tmpbyte.Bytes = TmpByte;</span><br><span class="line">      <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> (Exception e)</span><br><span class="line">  &#123;</span><br><span class="line">      xErrorOutException(e);</span><br><span class="line">      <span class="keyword">return</span> xState.xError;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Byte"><a href="#Byte" class="headerlink" title="Byte"></a>Byte</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">byte</span>[] <span class="title">xHexToBytes</span>(<span class="params"><span class="keyword">string</span> InStr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!InStr.StartsWith(<span class="string">"0x"</span>))</span><br><span class="line">        <span class="keyword">return</span> System.Text.Encoding.GetEncoding(cPage).GetBytes(InStr);</span><br><span class="line">    InStr = InStr.Substring(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">string</span> NSpaceStr = InStr.Replace(<span class="string">" "</span>, <span class="keyword">string</span>.Empty);</span><br><span class="line"></span><br><span class="line">    List&lt;<span class="keyword">byte</span>&gt; ReByte = <span class="keyword">new</span> List&lt;<span class="keyword">byte</span>&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NSpaceStr.Length / <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ReByte.Add(Convert.ToByte(NSpaceStr.Substring(i * <span class="number">2</span>, <span class="number">2</span>), <span class="number">16</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ReByte.ToArray();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">byte</span>[] <span class="title">StringAnaToBytes</span>(<span class="params"><span class="keyword">string</span> StrAna</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List&lt;<span class="keyword">byte</span>&gt; ReByte = <span class="keyword">new</span> List&lt;<span class="keyword">byte</span>&gt;();</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span>[] strs = StrAna.Split(<span class="string">'&#123;'</span>, <span class="string">'&#125;'</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; strs.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">                ReByte.AddRange(System.Text.Encoding.GetEncoding(cPage).GetBytes(strs[i]));</span><br><span class="line">            <span class="keyword">else</span> ReByte.AddRange(xHexToBytes(strs[i]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> xError = <span class="keyword">string</span>.Format(<span class="string">"字符串转换到BYTE失败Error:&#123;0&#125; 字串：&#123;1&#125;"</span>, e.Message, StrAna);</span><br><span class="line">        xErrorOut(MethodInfo.GetCurrentMethod().Name, xError);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ReByte.ToArray();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">PackBytes</span>(<span class="params"><span class="keyword">byte</span>[] ArrByte</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">string</span> ReStr = <span class="string">"&#123;0x"</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">byte</span> b <span class="keyword">in</span> ArrByte)</span><br><span class="line">    &#123;</span><br><span class="line">        ReStr += b.ToString(<span class="string">"X2"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ReStr += <span class="string">"&#125;"</span>;</span><br><span class="line">    <span class="keyword">return</span> ReStr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> cPage = Encoding.Default.CodePage;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">byte</span>[] <span class="title">StringToBytes</span>(<span class="params"><span class="keyword">string</span> InValue</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">string</span> str = XmlFO.StringAnalysis(InValue);</span><br><span class="line">    <span class="keyword">return</span> StringAnaToBytes(str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">BytesToString</span>(<span class="params"><span class="keyword">byte</span>[] InBytes</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> System.Text.Encoding.GetEncoding(cPage).GetString(Bytes);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">ToString</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        XmlFO.ListObject[sPara].xValue = BytesToString(Bytes);</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">ToInt</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        xInt TmpInt = (xInt)XmlFO.GetCheckSpecTypeObject(sPara, <span class="keyword">typeof</span>(xInt));</span><br><span class="line">        <span class="keyword">if</span> (TmpInt == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> Count = Bytes.Length;</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Count &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp = (<span class="keyword">sbyte</span>)Bytes[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span> (Count &gt; <span class="number">4</span>) Count = <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">                NumTmp += Bytes[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        TmpInt.iValue = NumTmp;</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">ToInt_MinusSign</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        xInt TmpInt = (xInt)XmlFO.GetCheckSpecTypeObject(sPara, <span class="keyword">typeof</span>(xInt));</span><br><span class="line">        <span class="keyword">if</span> (TmpInt == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> Count = Bytes.Length;</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Count &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp = (Bytes[<span class="number">0</span>] &amp; <span class="number">0x7F</span>);</span><br><span class="line">            <span class="keyword">if</span> (Count &gt; <span class="number">4</span>) Count = <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">                NumTmp += Bytes[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (Bytes[<span class="number">0</span>] &gt; <span class="number">0x7F</span>)</span><br><span class="line">                NumTmp = -NumTmp;</span><br><span class="line">        &#125;</span><br><span class="line">        TmpInt.iValue = NumTmp;</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">ToInt_Uint</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        xInt TmpInt = (xInt)XmlFO.GetCheckSpecTypeObject(sPara, <span class="keyword">typeof</span>(xInt));</span><br><span class="line">        <span class="keyword">if</span> (TmpInt == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> Count = Bytes.Length;</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Count &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp = Bytes[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span> (Count &gt; <span class="number">4</span>) Count = <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">                NumTmp += Bytes[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        TmpInt.iValue = NumTmp;</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">CopyFrom</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        xBytes TmpByte = (xBytes)XmlFO.GetCheckSpecTypeObject(sPara, <span class="keyword">typeof</span>(xBytes));</span><br><span class="line">        <span class="keyword">if</span> (TmpByte == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (TmpByte.cPage != cPage)</span><br><span class="line">            Bytes = Encoding.Convert(Encoding.GetEncoding(TmpByte.cPage), Encoding.GetEncoding(cPage), TmpByte.Bytes);</span><br><span class="line">        <span class="keyword">else</span> Bytes = TmpByte.Bytes.ToArray();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">SubByteFrom</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span>[] SepPara;</span><br><span class="line">        <span class="keyword">if</span> (!XmlFO.SepParams(sPara, <span class="number">3</span>, <span class="keyword">out</span> SepPara))</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        List&lt;Byte&gt; tmpByte = <span class="keyword">new</span> List&lt;<span class="keyword">byte</span>&gt;();</span><br><span class="line">        tmpByte.AddRange(StringToBytes(SepPara[<span class="number">0</span>]));</span><br><span class="line">        <span class="keyword">if</span> (tmpByte.Count &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> start = Convert.ToInt32(SepPara[<span class="number">1</span>]);<span class="comment">//start 0</span></span><br><span class="line">            <span class="keyword">int</span> leng = Convert.ToInt32(SepPara[<span class="number">2</span>]);</span><br><span class="line">            <span class="keyword">if</span> (start &gt;= tmpByte.Count)</span><br><span class="line">                start = tmpByte.Count - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> ((start + leng) &gt; tmpByte.Count)</span><br><span class="line">                leng = tmpByte.Count - start;</span><br><span class="line">            Bytes = tmpByte.GetRange(start, leng).ToArray();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> Bytes = tmpByte.ToArray();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">IsEqual</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span>[] SepPara;</span><br><span class="line">        <span class="keyword">if</span> (!XmlFO.SepParams(sPara, <span class="number">2</span>, <span class="keyword">out</span> SepPara))</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] tmpByte = StringToBytes(SepPara[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">int</span> start = Convert.ToInt32(SepPara[<span class="number">1</span>]);<span class="comment">//start 0</span></span><br><span class="line">        <span class="keyword">if</span> ((start + tmpByte.Length) &gt; Bytes.Length)</span><br><span class="line">            <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tmpByte.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (tmpByte[i] != Bytes[start + i])</span><br><span class="line">                <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">CheckBit</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span>[] SepPara;</span><br><span class="line">        <span class="keyword">if</span> (!XmlFO.SepParams(sPara, <span class="number">2</span>, <span class="keyword">out</span> SepPara))</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> byteNo = Convert.ToInt32(SepPara[<span class="number">0</span>]);<span class="comment">//start 0</span></span><br><span class="line">        <span class="keyword">int</span> bitNo = Convert.ToInt32(SepPara[<span class="number">1</span>]);<span class="comment">//start 7---0</span></span><br><span class="line">        <span class="keyword">if</span> (bitNo &gt; <span class="number">7</span>) bitNo = <span class="number">7</span>;</span><br><span class="line">        <span class="keyword">if</span> (bitNo &lt; <span class="number">0</span>) bitNo = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> Num = (Bytes[byteNo] &lt;&lt; (<span class="number">7</span> - bitNo)) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        Num = (Num &gt;&gt; <span class="number">7</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        <span class="keyword">if</span> (Num == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">UseDefaultCodePage</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cPage = Encoding.Default.CodePage;</span><br><span class="line">    <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">UseUTF8CodePage</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cPage = Encoding.UTF8.CodePage;</span><br><span class="line">    <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">UseUnicodeCodePage</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cPage = Encoding.Unicode.CodePage;</span><br><span class="line">    <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转换</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_String_ASCII</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, Bytes.Length);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = Encoding.ASCII.GetString(Bytes, Sep.iStart, Sep.iCount);</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_String_BCD</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, Bytes.Length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">string</span> strTmp = <span class="keyword">string</span>.Empty;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = Sep.iStart; (i &lt; Bytes.Length) &amp;&amp; (i &lt; (Sep.iStart + Sep.iCount)); i++)</span><br><span class="line">            strTmp += Bytes[i].ToString(<span class="string">"X2"</span>);</span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = strTmp;</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_Double</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = Sep.iStart; (i &lt; Bytes.Length) &amp;&amp; (i &lt; (Sep.iStart + Sep.iCount)); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            NumTmp += Bytes[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> DoubTmp = (NumTmp * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = DoubTmp.ToString();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_Double_Bit</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">double</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Sep.iCount &gt; <span class="number">4</span>)</span><br><span class="line">            NumTmp = BitConverter.ToDouble(Bytes, Sep.iStart);</span><br><span class="line">        <span class="keyword">else</span> NumTmp = BitConverter.ToSingle(Bytes, Sep.iStart);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> DoubTmp = (NumTmp * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = DoubTmp.ToString();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_Double_Minus</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> NumTmp = (Bytes[<span class="number">0</span>] &amp; <span class="number">0x7F</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = (Sep.iStart + <span class="number">1</span>); (i &lt; Bytes.Length) &amp;&amp; (i &lt; (Sep.iStart + Sep.iCount)); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            NumTmp += Bytes[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Bytes[<span class="number">0</span>] &gt; <span class="number">0x7F</span>)</span><br><span class="line">            NumTmp = -NumTmp;</span><br><span class="line">        <span class="keyword">double</span> DoubTmp = (NumTmp * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = DoubTmp.ToString();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_Int</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = Sep.iStart; (i &lt; Bytes.Length) &amp;&amp; (i &lt; (Sep.iStart + Sep.iCount)); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            NumTmp += Bytes[i];</span><br><span class="line">        &#125;</span><br><span class="line">        NumTmp = (<span class="keyword">int</span>)(NumTmp * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = NumTmp.ToString();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_Int_Bit</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Sep.iCount &gt; <span class="number">4</span>)</span><br><span class="line">            NumTmp = (<span class="keyword">int</span>)BitConverter.ToInt64(Bytes, Sep.iStart);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Sep.iCount &gt; <span class="number">2</span>)</span><br><span class="line">            NumTmp = (<span class="keyword">int</span>)BitConverter.ToInt32(Bytes, Sep.iStart);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Sep.iCount &gt; <span class="number">1</span>)</span><br><span class="line">            NumTmp = (<span class="keyword">int</span>)BitConverter.ToInt16(Bytes, Sep.iStart);</span><br><span class="line">        <span class="keyword">else</span> NumTmp = Bytes[Sep.iStart];</span><br><span class="line"></span><br><span class="line">        NumTmp = (<span class="keyword">int</span>)(NumTmp * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = NumTmp.ToString();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Append_Double</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">4</span>);</span><br><span class="line">        <span class="keyword">int</span> iTmp = (<span class="keyword">int</span>)(Convert.ToDouble(XmlFO.ListObject[Sep.sName].xValue) * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        List&lt;Byte&gt; ListTmp = <span class="keyword">new</span> List&lt;<span class="keyword">byte</span>&gt;();</span><br><span class="line">        ListTmp.AddRange(Bytes);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Sep.iCount; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ListTmp.Add((<span class="keyword">byte</span>)((iTmp &gt;&gt; ((Sep.iCount - i - <span class="number">1</span>) * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Bytes = ListTmp.ToArray();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      常用进制、格式转换方法
    
    </summary>
    
      <category term="数据转换" scheme="http://silencejql.coding.me/categories/%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2/"/>
    
      <category term="IEEE" scheme="http://silencejql.coding.me/categories/%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2/IEEE/"/>
    
    
      <category term="C#" scheme="http://silencejql.coding.me/tags/C/"/>
    
      <category term="IEEE" scheme="http://silencejql.coding.me/tags/IEEE/"/>
    
      <category term="Hex" scheme="http://silencejql.coding.me/tags/Hex/"/>
    
      <category term="Double" scheme="http://silencejql.coding.me/tags/Double/"/>
    
      <category term="Byte" scheme="http://silencejql.coding.me/tags/Byte/"/>
    
      <category term="int" scheme="http://silencejql.coding.me/tags/int/"/>
    
      <category term="String" scheme="http://silencejql.coding.me/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>RGB颜色</title>
    <link href="http://silencejql.coding.me/2019/07/05/RGB%E9%A2%9C%E8%89%B2/"/>
    <id>http://silencejql.coding.me/2019/07/05/RGB颜色/</id>
    <published>2019-07-05T06:20:25.000Z</published>
    <updated>2019-07-05T06:59:33.748Z</updated>
    
    <content type="html"><![CDATA[<p><img src="RGB1.png" alt><br><img src="RGB2.png" alt><br><img src="RGB3.png" alt></p>]]></content>
    
    <summary type="html">
    
      RGB颜色对照表
    
    </summary>
    
      <category term="RGB" scheme="http://silencejql.coding.me/categories/RGB/"/>
    
    
      <category term="RGB颜色表" scheme="http://silencejql.coding.me/tags/RGB%E9%A2%9C%E8%89%B2%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>css常用属性</title>
    <link href="http://silencejql.coding.me/2019/07/05/css%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7/"/>
    <id>http://silencejql.coding.me/2019/07/05/css常用属性/</id>
    <published>2019-07-05T05:54:12.000Z</published>
    <updated>2019-07-05T06:15:54.434Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文本设置"><a href="#文本设置" class="headerlink" title="文本设置"></a>文本设置</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">font: italic bold 36px 宋体; //顺序不可变</span><br><span class="line"><span class="selector-tag">font-wight</span>: 100<span class="selector-tag">-900</span>、<span class="selector-tag">bold</span>（加粗）</span><br><span class="line">font-size: 10px; // 12px(12像素)、50%、larger、small</span><br><span class="line"><span class="selector-tag">font-style</span>: <span class="selector-tag">initial</span>（初始）、<span class="selector-tag">italic</span>（斜体字）、<span class="selector-tag">normal</span>（默认）、<span class="selector-tag">oblique</span>（倾斜）</span><br><span class="line">font-family: "微软雅黑" // 宋体</span><br><span class="line">text-align: center; //横向排列  left、right 和 center</span><br><span class="line">line-height: 200px; //文本行高 通俗的讲，文字高度加上文字上下的空白区域的高度 50%:基于字体大小的百分比</span><br><span class="line">vertical-align:-4px; //设置元素内容的垂直对齐方式 ,只对行内元素有效，对块级元素无效</span><br><span class="line">text-indent: 150px; //首行缩进</span><br><span class="line">letter-spacing: 10px; //字母间隙</span><br><span class="line">word-spacing: 20px; //单词间隙</span><br><span class="line">text-transform: capitalize; //单词大写</span><br></pre></td></tr></table></figure><h2 id="背景属性"><a href="#背景属性" class="headerlink" title="背景属性"></a>背景属性</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">background-color: cornflowerblue; //背景颜色</span><br><span class="line">background-image: url('1.jpg'); //背景图片</span><br><span class="line">background-repeat: no-repeat/repeat-x/repeat=t; //(默认铺满，不重复，x重复，y重复)</span><br><span class="line">background-size:600px 250px //大小</span><br><span class="line">background-position: right top（20px 20px）;//(横向：left center right)(纵向：top center bottom) //简写：</span><br><span class="line">&lt;body style="background: 20px 20px no-repeat #ff4 url('1.jpg')"&gt;</span><br><span class="line">&lt;div style="width: 300px;height: 300px;background: 20px 20px no-repeat #ff4 url('1.jpg')"&gt;</span><br></pre></td></tr></table></figure><h3 id="颜色属性"><a href="#颜色属性" class="headerlink" title="颜色属性"></a>颜色属性</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style="color:blueviolet"&gt;ppppp&lt;/div&gt; //颜色少</span><br><span class="line">&lt;div style="color:#ffee33"&gt;ppppp&lt;/div&gt;  //百度颜色代码可以查询更多</span><br><span class="line">&lt;div style="color:rgb(255,0,0)"&gt;ppppp&lt;/div&gt; //三原色 红绿蓝256级</span><br><span class="line">&lt;div style="color:rgba(255,0,0,0.5)"&gt;ppppp&lt;/div&gt; //比上一个 加了一个透明度</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      常用的css属性介绍
    
    </summary>
    
      <category term="css" scheme="http://silencejql.coding.me/categories/css/"/>
    
    
      <category term="css属性" scheme="http://silencejql.coding.me/tags/css%E5%B1%9E%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>泛型的特点</title>
    <link href="http://silencejql.coding.me/2019/07/05/%E6%B3%9B%E5%9E%8B%E7%9A%84%E7%89%B9%E7%82%B9/"/>
    <id>http://silencejql.coding.me/2019/07/05/泛型的特点/</id>
    <published>2019-07-05T05:36:31.000Z</published>
    <updated>2019-07-05T06:16:20.240Z</updated>
    
    <content type="html"><![CDATA[<h4 id="泛型的主要特性"><a href="#泛型的主要特性" class="headerlink" title="泛型的主要特性"></a>泛型的主要特性</h4><p>泛型类型的一些重要特征使它们相比传统的非泛型类型具有如下的显著特征：</p><blockquote><p>类型安全<br>性能<br>二进制代码复用</p></blockquote><h5 id="类型安全"><a href="#类型安全" class="headerlink" title="类型安全"></a>类型安全</h5><p>泛型最重要的特征之一是类型安全性。对于非泛型ArrayList类，如果使用对象类型，则可以向集合中添加任何类型，这些类型有时会导致严重的问题。下面的示例显示向ArrayList类型的集合添加一个整数、字符串和对象；</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ArrayList obj = <span class="keyword">new</span> ArrayList();  </span><br><span class="line">obj.Add(<span class="number">50</span>);  </span><br><span class="line">obj.Add(<span class="string">"Dog"</span>);  </span><br><span class="line">obj.Add(<span class="keyword">new</span> TestClass());</span><br></pre></td></tr></table></figure><p>现在，如果使用整数对象来使用foreach语句进行遍历的话，当编译器接受到代码，但是因为集合中的所有元素都不是整数，所以会导致运行时异常；</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(<span class="keyword">int</span> i <span class="keyword">in</span> obj)  </span><br><span class="line">&#123;  </span><br><span class="line">    Console.WriteLine(i);    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编程的经验法则是应该尽早检测到错误。对于泛型类Test，泛型类型T定义允许哪些类型。通过使用Test的定义，只能向集合添加整型类型的数据。这时候当Add()方法具有以下无效参数的时候编译器将不编译代码；</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Test&lt;<span class="keyword">int</span>&gt; obj = <span class="keyword">new</span> Test&lt;<span class="keyword">int</span>&gt;();  </span><br><span class="line">obj.Add(<span class="number">50</span>);  </span><br><span class="line">obj.Add(<span class="string">"Dog"</span>);            <span class="comment">//编译错误</span></span><br><span class="line">obj.Add(<span class="keyword">new</span> TestClass());  <span class="comment">//编译错误</span></span><br></pre></td></tr></table></figure><h5 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h5><p>在下面的示例中，ArrayList类存储对象，并且定义了Add()方法来存储一些整型参数。因此，整数类型被装箱。当使用foreach语句读取ArrayList中的值时，将发生拆箱。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ArrayList  obj = <span class="keyword">new</span> ArrayList();   </span><br><span class="line">obj.Add(<span class="number">50</span>);    <span class="comment">//装箱- 值类型转换成引用类型</span></span><br><span class="line"><span class="keyword">int</span> x= (<span class="keyword">int</span>)obj[<span class="number">0</span>]; <span class="comment">//拆箱</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">int</span> i <span class="keyword">in</span> obj)  </span><br><span class="line">&#123;  </span><br><span class="line">   Console.WriteLine(i);   <span class="comment">// 拆箱</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：泛型比其他集合（如ArrayList）更快。</p><p>代替使用对象类型，TestClass类的泛型类型被定义为int，因此在从编译器动态生成的类中将使用int类型。所以将不会发生装箱和拆箱，如下所示；</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TestClass&lt;<span class="keyword">int</span>&gt; obj = <span class="keyword">new</span> TestClass&lt;<span class="keyword">int</span>&gt;();  </span><br><span class="line">obj.Add(<span class="number">50</span>);    <span class="comment">//没有装箱</span></span><br><span class="line"><span class="keyword">int</span> x= obj[<span class="number">0</span>]; <span class="comment">// 没有拆箱</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">int</span> i <span class="keyword">in</span> obj)  </span><br><span class="line">&#123;  </span><br><span class="line">   Console.WriteLine(i);   <span class="comment">//没有拆箱</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="二进制代码复用"><a href="#二进制代码复用" class="headerlink" title="二进制代码复用"></a>二进制代码复用</h5><p>泛型类型提供了一种源代码保护机制。泛型类可以定义一次，并且可以使用许多不同类型来进行实例化。泛型可以在一种CLR支持的语言中定义，并可以被另一种.NET语言使用。以下TestClass 使用int和string类型进行实例化：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TestClass&lt;<span class="keyword">int</span>&gt; obj = <span class="keyword">new</span> TestClass&lt;<span class="keyword">int</span>&gt;();  </span><br><span class="line">obj.Add(<span class="number">50</span>);  </span><br><span class="line"></span><br><span class="line">TestClass&lt;<span class="keyword">string</span>&gt; obj1 = <span class="keyword">new</span> TestClass&lt;<span class="keyword">string</span>&gt;();  </span><br><span class="line">Obj1.Add(<span class="string">"hello"</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      泛型特性介绍
    
    </summary>
    
      <category term="C#" scheme="http://silencejql.coding.me/categories/C/"/>
    
    
      <category term="泛型" scheme="http://silencejql.coding.me/tags/%E6%B3%9B%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>C# 常识</title>
    <link href="http://silencejql.coding.me/2019/07/05/C-%E5%B8%B8%E8%AF%86/"/>
    <id>http://silencejql.coding.me/2019/07/05/C-常识/</id>
    <published>2019-07-05T02:59:00.000Z</published>
    <updated>2019-07-08T01:44:00.585Z</updated>
    
    <content type="html"><![CDATA[<p>记录写bug过程中遇到的一些疑问</p><a id="more"></a><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>值类型存储在堆栈上，引用类型存储在堆上。<br>C#类为引用类型，结构为值类型。<br>从值类型转化为引用类型称为装箱，如果方法需要把一个对象作为参数，而且传送一个值类型，装箱操作会自动进行；装箱的值类型可以使用拆箱操作转换为值类型，在拆箱时，<strong>需要使用类型转换运算符</strong>。</p><h2 id="装箱和拆箱"><a href="#装箱和拆箱" class="headerlink" title="装箱和拆箱"></a>装箱和拆箱</h2><p>装箱是一种通过将变量存储到System.Object中来显式地将值类型转换为引用类型的机制。当您装入值时，CLR会将新对象分配到堆中，并将值类型的值复制到该实例中。例如：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">20</span>;  </span><br><span class="line"><span class="keyword">object</span> b = a; <span class="comment">//装箱</span></span><br></pre></td></tr></table></figure><p>相反的操作是拆箱，它是将引用类型转换回值类型的过程。此过程验证接收数据类型是否与装箱类型一致;<br><code>int c = (int)b; // 拆箱</code></p><h2 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h2><blockquote><p>特征：</p><blockquote><p>类型安全<br>性能<br>二进制代码复用</p></blockquote></blockquote><p>详见： <a href="/2019/07/05/泛型的特点/" title="泛型的特点">泛型的特点</a></p><h3 id="为什么不用object代替泛型"><a href="#为什么不用object代替泛型" class="headerlink" title="为什么不用object代替泛型"></a>为什么不用object代替泛型</h3><p>由于Object为所有类型的基类，所以可以处理任何数据类型的数据，但是其中存在这拆箱和装箱，如果数据太多会影响到程序的性能。<br>在使用泛型的时候程序会在编译阶段根据我们提供的类型生成相应的二进制代码，无须进行装箱和拆箱操作。</p><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><h3 id="为什么要用接口"><a href="#为什么要用接口" class="headerlink" title="为什么要用接口"></a>为什么要用接口</h3><p>接口一般由上层人员发起，下层人员实现。<br>写接口并不是为了扩展，而是为了扩展以后的模块仍然跟项目模块保持高度一致，为了扩展后的规范化。</p><h3 id="实例化接口对象"><a href="#实例化接口对象" class="headerlink" title="实例化接口对象"></a>实例化接口对象</h3><h4 id="接口回调"><a href="#接口回调" class="headerlink" title="接口回调"></a>接口回调</h4><p>接口不仅可以声明对象，而且可以把对象实例化，还可以当做参数被传入。<br>即继承中的向上转型，父类 FL=new 子类()，只不过这里的父类就是interface接口。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title">Itemp</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="function"><span class="keyword">double</span> <span class="title">plus</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">num</span> : <span class="title">Itemp</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">double</span> aa, bb;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">num</span>(<span class="params"><span class="keyword">double</span> a, <span class="keyword">double</span> b</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">    <span class="keyword">this</span>.bb = b;</span><br><span class="line">    <span class="keyword">this</span>.aa = a;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">plus</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">    <span class="keyword">return</span> (aa + bb);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Itemp tm = <span class="literal">null</span>;<span class="comment">//声明接口对象引用</span></span><br><span class="line">  tm = <span class="keyword">new</span> num(<span class="number">1</span>, <span class="number">2</span>);<span class="comment">//接口回调(向上转型)</span></span><br><span class="line">  Console.WriteLine(tm.plus());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类型参数约束"><a href="#类型参数约束" class="headerlink" title="类型参数约束"></a>类型参数约束</h2><p>&emsp;&emsp;在定义泛型类时，可以对客户端代码能够在实例化类时用于类型参数的类型种类施加限制。如果客户端代码尝试使用某个约束所不允许的类型来实例化类，则会产生编译时错误。这些限制称为约束。<br>类型参数约束.NET支持的类型参数约束有以下五种：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">where</span> T : <span class="keyword">struct</span>  类型参数必须是值类型；可以指定除 Nullable 以外的任何值类型</span><br><span class="line">where T : class   类型参数必须是引用类型；这一点也适用于任何类、接口、委托或数组类型</span><br><span class="line"><span class="keyword">where</span> T : <span class="keyword">new</span>()   类型参数必须具有无参数的公共构造函数。当与其他约束一起使用时，<span class="keyword">new</span>() 约束必须最后指定</span><br><span class="line"><span class="keyword">where</span> T : NameOfBaseClass   类型参数必须是指定的基类或派生自指定的基类</span><br><span class="line"><span class="keyword">where</span> T : NameOfInterface   类型参数必须是指定的接口或实现指定的接口。可以指定多个接口约束。约束接口也可以是泛型的</span><br><span class="line"><span class="keyword">where</span> T : U    为 T 提供的类型参数必须是为 U 提供的参数或派生自为 U 提供的参数</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录写bug过程中遇到的一些疑问&lt;/p&gt;
    
    </summary>
    
      <category term="C#" scheme="http://silencejql.coding.me/categories/C/"/>
    
    
      <category term="C#" scheme="http://silencejql.coding.me/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C# Static</title>
    <link href="http://silencejql.coding.me/2019/07/05/C-Static/"/>
    <id>http://silencejql.coding.me/2019/07/05/C-Static/</id>
    <published>2019-07-05T02:59:00.000Z</published>
    <updated>2019-07-05T04:28:04.406Z</updated>
    
    <content type="html"><![CDATA[<p>静态方法只能访问类的静态成员，不能访问类的非静态成员；<br>非静态方法可以访问类的静态成员，也可以访问类的非静态成员；<br>静态方法不能使用实例来调用，只能使用类名来调用。</p><a id="more"></a><h4 id="static"><a href="#static" class="headerlink" title="static"></a>static</h4><h5 id="静态全局变量"><a href="#静态全局变量" class="headerlink" title="静态全局变量"></a>静态全局变量</h5><blockquote><p>特点：</p><blockquote><p>1、该变量在全局数据区分配内存。<br>2、初始化：如果不显式初始化，那么将被隐式初始化为0。</p></blockquote></blockquote><h5 id="静态局部变量"><a href="#静态局部变量" class="headerlink" title="静态局部变量"></a>静态局部变量</h5><blockquote><p>特点：</p><blockquote><p>1、该变量在全局数据区分配内存。<br>2、初始化：如果不显式初始化，那么将被隐式初始化为0。<br>3、<strong>它始终驻留在全局数据区，直到程序运行结束。但其作用域为局部作用域，当定义它的函数或语句块结束时，其作用域随之结束。</strong></p></blockquote></blockquote><h5 id="静态数据成员"><a href="#静态数据成员" class="headerlink" title="静态数据成员"></a>静态数据成员</h5><blockquote><p>内存分配：在程序的全局数据区分配。<br>初始化和定义：</p><blockquote><p>1、静态数据成员定义时要分配空间，所以不能在类声明中定义。<br>2、为了避免在多个使用该类的源文件中，对其重复定义，所以，不能在类的头文件中定义。<br>3、静态数据成员因为程序一开始运行就必需存在，所以其初始化的最佳位置在类的内部实现。</p></blockquote></blockquote><blockquote><p>特点</p><blockquote><p>对相于 public,protected,private 关键字的影响它和普通数据成员一样，因为其空间在全局数据区分配，属于所有本类的对象共享，所以，它不属于特定的类对象，在没产生类对象时其作用域就可见，即在没有产生类的实例时，我们就可以操作它。</p></blockquote></blockquote><blockquote><p>访问形式</p><blockquote><p>类对象名.静态数据成员名</p></blockquote></blockquote><p>静态数据成员，主要用在类的所有实例都拥有的属性上。比如，对于一个存款类，帐号相对于每个实例都是不同的，但每个实例的利息是相同的。所以，应该把利息设为存款类的静态数据成员。这有两个好处，第一，不管定义多少个存款类对象，利息数据成员都共享分配在全局区的内存，所以节省存贮空间。第二，一旦利息需要改变时，只要改变一次，则所有存款类对象的利息全改变过来了，因为它们实际上是共用一个东西。</p><h5 id="静态成员函数"><a href="#静态成员函数" class="headerlink" title="静态成员函数"></a>静态成员函数</h5><blockquote><p>特点：</p><blockquote><p>1、静态成员函数与类相联系，不与类的对象相联系。<br>2、静态成员函数不能访问非静态数据成员。原因很简单，非静态数据成员属于特定的类实例。</p></blockquote></blockquote><blockquote><p>作用：</p><blockquote><p>主要用于对静态数据成员的操作。</p></blockquote></blockquote><blockquote><p>调用形式：</p><blockquote><p>类对象名.静态成员函数名（）</p></blockquote></blockquote><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><p>静态方法只能访问类的静态成员，不能访问类的非静态成员；<br>非静态方法可以访问类的静态成员，也可以访问类的非静态成员；<br>静态方法不能使用实例来调用，只能使用类名来调用。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> i = getNum();</span><br><span class="line"><span class="keyword">int</span> j = getNum();</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getNum</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">"i=&#123;0&#125;"</span>,i);</span><br><span class="line">    Console.WriteLine(<span class="string">"j=&#123;0&#125;"</span>, <span class="keyword">new</span> class1().j);</span><br><span class="line">    Console.Read();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析：<code>Console.WriteLine(&quot;i={0}&quot;,i);</code>这里<code>i</code>是<code>static</code>变量，而且类<code>class1</code>是第一次被引用，要先为<code>class1</code>里面所有的<code>static</code>变量分配内存。尽管现在有超线程技术，但是指令在逻辑还是一条一条的按顺序执行的，所以先为<code>static int i</code>分配内存，并且在该内存中保持<code>int</code>的缺省值<code>0</code>，接着再为<code>static</code> <code>int num</code> 变量分配内存，值当然也为<code>0</code>。</p><p>然后执行第二步，为变量赋值：先为<code>static int i</code>变量赋值，<code>i＝getNum()</code>，看getNum里面的代码，就是<code>return num</code>，这个时候<code>num</code>的值是<code>0</code>，于是<code>i</code>就为<code>0</code>了。然后对变量<code>num</code>赋值，<code>num＝1；</code>这行代码执行后，<code>num</code>就为<code>1</code>了。</p><h5 id="static的优点是什么？为什么要使用static-变量或函数？？"><a href="#static的优点是什么？为什么要使用static-变量或函数？？" class="headerlink" title="static的优点是什么？为什么要使用static 变量或函数？？"></a>static的优点是什么？为什么要使用static 变量或函数？？</h5><p>有一些频繁使用的东西，如果你每次使用都重新<code>new</code>一下，那么这个开销可能会很高，如果使用<code>static</code>，一直放在内存中，那么想用就直接用，而不需要重新<code>new</code>一块空间初始化数据。那么<code>static</code>就是为了实现一个系统的缓存作用的，其生命周期直到应用程序退出结束。</p><p>静态成员包括静态字段和静态属性，静态成员和类相关联，不依赖于对象而存在，只能由类访问，而不能由对象访问；</p><p>静态成员属于类所有，无认创建多少实例对象，静态成员在内存中只有一份；实例成员属于类的实例所有，每创建一个实例对象，实例成员都会在内存中分配一块内存区域。<br>所以静态成员一般用于存放共享的数据段，如数据库连接字符串等。</p><p>一个类如果只包含静态成员和静态方法，则该类可以定义为静态类，给类加上<code>static</code>修饰符；</p><h5 id="静态方法和非静态方法："><a href="#静态方法和非静态方法：" class="headerlink" title="静态方法和非静态方法："></a>静态方法和非静态方法：</h5><p>一、性能上：静态方法和实例方法差别不大。所有方法，不管是静态方法还是实例方法，都是在JIT加载类时分配内存，不同的是静态方法以类名引用，而实例方法对对象实例引用。创建实例时，不会再为类的方法分配内存，所有的实例对象共用一个类的方法代码。因此静态方法和实例方法的调用，在性能上的差别微乎其微。</p><p>二、静态方法只能由类访问；实例方法只能由对象访问。</p><blockquote><p>优点：</p><blockquote><p>1、静态变量在类载入时，就装入内存<br>2、使用时不用 New 就意味的不必 创建类中 所有对象，就可以调用 某个方法</p></blockquote></blockquote><blockquote><p>缺点：</p><blockquote><p>垃圾回收机制 不能 回收 静态变量，静态类变量 会常驻内存</p></blockquote></blockquote><h5 id="c-中静态类的优缺点"><a href="#c-中静态类的优缺点" class="headerlink" title="c#中静态类的优缺点"></a>c#中静态类的优缺点</h5><blockquote><p>缺点：</p><blockquote><p>1、整个类型在程序运行期间只加载一次。 这样是对于那些经常使用的类型来说的，那就不用每次使用前都先加载。效率高些。但是对那些不常用的类型来说。<br>2、如果是静态类型，那就要一直占用相当的内存；一直到程序停止。或者应用程序域被卸载。所以应该只对那些常用的类型定义成静态类型。</p></blockquote></blockquote><blockquote><p>优点：</p><blockquote><p>1、它们仅包含静态成员。<br>2、它们不能被实例化。<br>3、它们是密封的。<br>4、它们不能包含实例构造函数（C# 编程指南）。</p></blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;静态方法只能访问类的静态成员，不能访问类的非静态成员；&lt;br&gt;非静态方法可以访问类的静态成员，也可以访问类的非静态成员；&lt;br&gt;静态方法不能使用实例来调用，只能使用类名来调用。&lt;/p&gt;
    
    </summary>
    
      <category term="C#" scheme="http://silencejql.coding.me/categories/C/"/>
    
    
      <category term="static" scheme="http://silencejql.coding.me/tags/static/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客部署到Coding和github</title>
    <link href="http://silencejql.coding.me/2019/07/04/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0Coding%E5%92%8Cgithub/"/>
    <id>http://silencejql.coding.me/2019/07/04/Hexo博客部署到Coding和github/</id>
    <published>2019-07-04T06:48:17.000Z</published>
    <updated>2019-07-04T08:57:22.027Z</updated>
    
    <content type="html"><![CDATA[<h3 id="部署到Github和Coding"><a href="#部署到Github和Coding" class="headerlink" title="部署到Github和Coding"></a>部署到Github和Coding</h3><h4 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h4><blockquote><p>Github：<br>新建Repository：name.github.io</p></blockquote><blockquote><p>Coding：<br>新建Repository：name.coding.me</p></blockquote><h4 id="添加SSH-key"><a href="#添加SSH-key" class="headerlink" title="添加SSH key"></a>添加SSH key</h4><p>若无SSHkey</p><blockquote><p>ssh-keygen -t rsa -C “your e-mail”<br>Enter passphrase (empty for no passphrase):&lt;输入加密串&gt;<br>Enter same passphrase again:&lt;再次输入加密串&gt;</p></blockquote><p>打开生成的id_rsa.pub文件并复制其中的内容添加到Github或Coding项目中然后在git中执行</p><blockquote><p>Github：<br>    ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a></p></blockquote><blockquote><p>Coding：<br>    ssh -T <a href="mailto:git@git.coding.net" target="_blank" rel="noopener">git@git.coding.net</a> //coding<br>    ssh -T <a href="mailto:git@git.dev.tencent.com" target="_blank" rel="noopener">git@git.dev.tencent.com</a> //腾讯云</p></blockquote><p>添加到腾讯云后需要开启Pages服务才可通过name.coding.me登录</p><h4 id="更改博客配置文件"><a href="#更改博客配置文件" class="headerlink" title="更改博客配置文件"></a>更改博客配置文件</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository:</span><br><span class="line">    github: git@github.com:silencejql/silencejql.github.io.git</span><br><span class="line">    coding: git@git.dev.tencent.com:silencejql/silencejql.coding.me.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>不同格式相应作出调整即可</p><h4 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h4><p><a href="http://name.coding.me" target="_blank" rel="noopener">http://name.coding.me</a> 在google chrome中打开可能会默认https，修复方式为:</p><blockquote><p>地址栏中输入 chrome://net-internals/#hsts<br>在 Delete domain security policies 中输入项目的域名，并 Delete 删除<br>可以在 Query domain 测试是否删除成功</p></blockquote><p>这里如果还是不行， 请清除浏览器缓存！</p>]]></content>
    
    <summary type="html">
    
      将Hexo部署或迁移到Github或Coding
    
    </summary>
    
      <category term="Hexo" scheme="http://silencejql.coding.me/categories/Hexo/"/>
    
    
      <category term="Coding" scheme="http://silencejql.coding.me/tags/Coding/"/>
    
      <category term="github" scheme="http://silencejql.coding.me/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>托管DLL与非托管DLL</title>
    <link href="http://silencejql.coding.me/2019/07/03/%E6%89%98%E7%AE%A1DLL%E4%B8%8E%E9%9D%9E%E6%89%98%E7%AE%A1DLL/"/>
    <id>http://silencejql.coding.me/2019/07/03/托管DLL与非托管DLL/</id>
    <published>2019-07-03T01:03:34.000Z</published>
    <updated>2019-07-03T02:42:08.068Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;托管DLL和非托管DLL的区别：狭义解释讲，托管DLL就在Dotnet环境生成的DLL文件；非托管DLL不是在Dotnet环境生成的DLL文件。<br>&emsp;&emsp;托管DLL文件，可以在Dotnet环境通过 “添加引用” 的方式，直接把托管DLL文件添加到项目中，然后通过 Using DLL命名空间，来调用相应的DLL对象；非托管DLL文件，在Dotnet环境应用时，通过DllImport 调用。</p><a id="more"></a><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>&emsp;&emsp;托管dll虽然符合windows的PE格式规范，但是代码是以IL的形式保存在.Text 区的，而不是机器码，CLR会在运行时JIT编译成机器码再交给操作系统执行，这也就为什么托管代码称之为”托管”的意义。<br>&emsp;&emsp;所以，要想注入托管dll，首先需要在目标进程中启动CLR，然后让CLR来加载managed dll。<br>&emsp;&emsp;托管DLL，指完全由.NET托管代码实现的DLL，完全依赖于 .NET 平台的 CLR 运行。托管DLL，受.NET CLR管控，支持内存自动回收等的，对于.NET平台是安全DLL<br>&emsp;&emsp;非托管DLL，是指完全或者部分 不是用.NET代码实现，不依赖于.NET平台即可运行，例如 COM方式 的DLL，不支持自动回收内存，对于.NET平台而言，也是非安全可控的。</p><hr><p>&emsp;&emsp;正常编程所用的高级语言，是无法被计算机识别的。需要先将高级语言翻译为机器语言，才能被机器理解和运行。<br>在标准C/C++中，编译过程是这样的：<br><img src="Ccompile.jpg" alt><br>&emsp;&emsp;源代码首先经过预处理器，对头文件以及宏进行解析，然后经过编译器，生成汇编代码，接着，经过汇编，生成机器指令，最后将所有文件连接起来。这种编译方式的优点在于，最终直接生成了机器码，可以直接被计算机识别和运行，无需任何中间运行环境，但缺点也在于，由于不同平台能够识别的机器码不同，因此程序的跨平台能力较差。<br>&emsp;&emsp;而在Java语言中，源代码并没有被直接翻译成机器码，而是编译成了一种中间代码（字节码Bytecode）。因此，运行Java程序需要一个额外的JRE（Java Runtime Enviromental）运行环境，在JRE中存在着JVM（Java Virtual Mechinal，Java虚拟机），在程序运行的时候，会将中间代码进一步解释为机器码，并在机器上运行。<br>&emsp;&emsp;使用中间代码的好处在于，程序的跨平台性比较好，一次编译，可以在不同的设备上运行。<br>&emsp;&emsp;托管/非托管是微软的.net framework中特有的概念，其中，非托管代码也叫本地（native）代码。与Java中的机制类似，也是先将源代码编译成中间代码（MSIL，Microsoft Intermediate Language），然后再由.net中的CLR将中间代码编译成机器代码。<br>&emsp;&emsp;而C#与Java的区别在于，Java是先编译后解释，C#是两次编译。</p><hr><h3 id="调用DLL中的非托管函数一般方法"><a href="#调用DLL中的非托管函数一般方法" class="headerlink" title="调用DLL中的非托管函数一般方法"></a>调用DLL中的非托管函数一般方法</h3><p>首先，应该在C#语言源程序中声明外部方法，其基本形式是：<br>    [DLLImport(“DLL文件”)]<br>修饰符 extern 返回变量类型 方法名称 （参数列表）<br>其中：</p><blockquote><p>DLL文件：包含定义外部方法的库文件。<br>修饰符： 访问修饰符，除了abstract以外在声明方法时可以使用的修饰符。<br>返回变量类型：在DLL文件中你需调用方法的返回变量类型。<br>方法名称：在DLL文件中你需调用方法的名称。<br>参数列表：在DLL文件中你需调用方法的列表。</p></blockquote><p>注意：需要在程序声明中使用System.Runtime.InteropServices命名空间。<br>DllImport只能放置在方法声明上。<br>DLL文件必须位于程序当前目录或系统定义的查询路径中（即：系统环境变量中Path所设置的路径）。<br><font color="#FF0000"><strong>返回变量类型、方法名称、参数列表一定要与DLL文件中的定义相一致。</strong></font><br>若要使用其它函数名，可以使用EntryPoint属性设置，如：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">DllImport(<span class="meta-string">"user32.dll"</span>, EntryPoint=<span class="meta-string">"MessageBoxA"</span>)</span>]</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">MsgBox</span>(<span class="params"><span class="keyword">int</span> hWnd, <span class="keyword">string</span> msg, <span class="keyword">string</span> caption, <span class="keyword">int</span> type</span>)</span>;</span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImportAttribute(<span class="meta-string">"CN210S_CSM_LV1.dll"</span>, EntryPoint = <span class="meta-string">"uds_calc_key"</span>, CharSet = CharSet.Ansi)</span>]</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">uds_calc_key_ldw</span>(<span class="params"><span class="keyword">string</span> seed, StringBuilder key</span>)</span>;</span><br></pre></td></tr></table></figure><p>其它可选的 DllImportAttribute 属性：</p><blockquote><p>CharSet： 指示用在入口点中的字符集，如：CharSet=CharSet.Ansi；<br>SetLastError： 指示方法是否保留 Win32”上一错误”，如：SetLastError=true；<br>ExactSpelling： 指示 EntryPoint 是否必须与指示的入口点的拼写完全匹配，如：ExactSpelling=false；<br>PreserveSig： 指示方法的签名应当被保留还是被转换， 如：PreserveSig=true；<br>CallingConvention： 指示入口点的调用约定， 如：CallingConvention=CallingConvention.Winapi；</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;托管DLL和非托管DLL的区别：狭义解释讲，托管DLL就在Dotnet环境生成的DLL文件；非托管DLL不是在Dotnet环境生成的DLL文件。&lt;br&gt;&amp;emsp;&amp;emsp;托管DLL文件，可以在Dotnet环境通过 “添加引用” 的方式，直接把托管DLL文件添加到项目中，然后通过 Using DLL命名空间，来调用相应的DLL对象；非托管DLL文件，在Dotnet环境应用时，通过DllImport 调用。&lt;/p&gt;
    
    </summary>
    
      <category term="C#基础" scheme="http://silencejql.coding.me/categories/C-%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="C#" scheme="http://silencejql.coding.me/tags/C/"/>
    
      <category term="托管DLL" scheme="http://silencejql.coding.me/tags/%E6%89%98%E7%AE%A1DLL/"/>
    
  </entry>
  
  <entry>
    <title>委托-匿名-Lambda表达式</title>
    <link href="http://silencejql.coding.me/2019/06/26/%E5%A7%94%E6%89%98-%E5%8C%BF%E5%90%8D-Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://silencejql.coding.me/2019/06/26/委托-匿名-Lambda表达式/</id>
    <published>2019-06-26T07:05:21.000Z</published>
    <updated>2019-06-26T07:51:50.273Z</updated>
    
    <content type="html"><![CDATA[<h3 id="委托"><a href="#委托" class="headerlink" title="委托"></a>委托</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">delegate</span> <span class="keyword">int</span> <span class="title">calculator</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">int</span> y</span>)</span>; <span class="comment">//委托类型</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    calculator <span class="keyword">add</span> = <span class="keyword">new</span> calculator(Addition);</span><br><span class="line">    <span class="keyword">int</span> AddResult = <span class="keyword">add</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    Console.Write(AddResult);</span><br><span class="line"></span><br><span class="line">    calculator dec = <span class="keyword">new</span> calculator(Subtraction);</span><br><span class="line">    <span class="keyword">int</span> SubResult = dec(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">    Console.write(SubResult);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 加法</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="x"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="y"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>x+y<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Addition</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">int</span> y</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 减法</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="x"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="y"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>x-y<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Subtraction</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">int</span> y</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x - y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="匿名方法"><a href="#匿名方法" class="headerlink" title="匿名方法"></a>匿名方法</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">delegate</span> <span class="keyword">int</span> <span class="title">calculator</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">int</span> y</span>)</span>; <span class="comment">//委托</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   calculator <span class="keyword">add</span> = <span class="keyword">delegate</span>(<span class="keyword">int</span> num1,<span class="keyword">int</span> num2)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">return</span> num1 + num2;</span><br><span class="line">   &#125;;</span><br><span class="line">   calculator dec = <span class="keyword">delegate</span>(<span class="keyword">int</span> num1,<span class="keyword">int</span> num2)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">return</span> num1 - num2;</span><br><span class="line">   &#125;;</span><br><span class="line">   <span class="keyword">int</span> AddResult = dec(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">   <span class="keyword">int</span> SubResult = dec(<span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">   Console.Write(AddResult);</span><br><span class="line">   Console.Write(SubResult);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">delegate</span> <span class="keyword">bool</span> <span class="title">MyBol</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">int</span> y</span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">delegate</span> <span class="keyword">bool</span> <span class="title">MyBol_2</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">string</span> y</span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">delegate</span> <span class="keyword">int</span> <span class="title">calculator</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">int</span> y</span>)</span>; <span class="comment">//委托类型</span></span><br><span class="line"><span class="function"><span class="keyword">delegate</span> <span class="keyword">void</span> <span class="title">VS</span>(<span class="params"></span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MyBol Bol = (x, y) =&gt; x == y;</span><br><span class="line">    MyBol_2 Bol_2 = (x, s) =&gt; s.Length &gt; x;</span><br><span class="line">    calculator C = (X, Y) =&gt; X * Y;</span><br><span class="line">    VS S = () =&gt; Console.Write(<span class="string">"我是无参数Labada表达式"</span>);</span><br><span class="line">    <span class="keyword">int</span>[] numbers = &#123; <span class="number">5</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">int</span> oddNumbers = numbers.Count(n =&gt; n % <span class="number">2</span> == <span class="number">1</span>);</span><br><span class="line">    List&lt;People&gt; people = LoadData();<span class="comment">//初始化</span></span><br><span class="line">    IEnumerable&lt;People&gt; results = people.Where(<span class="keyword">delegate</span>(People p) &#123; <span class="keyword">return</span> p.age &gt; <span class="number">20</span>; &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;People&gt; <span class="title">LoadData</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List&lt;People&gt; people = <span class="keyword">new</span> List&lt;People&gt;();   <span class="comment">//创建泛型对象  </span></span><br><span class="line">    People p1 = <span class="keyword">new</span> People(<span class="number">21</span>, <span class="string">"guojing"</span>);      <span class="comment">//创建一个对象  </span></span><br><span class="line">    People p2 = <span class="keyword">new</span> People(<span class="number">21</span>, <span class="string">"wujunmin"</span>);     <span class="comment">//创建一个对象  </span></span><br><span class="line">    People p3 = <span class="keyword">new</span> People(<span class="number">20</span>, <span class="string">"muqing"</span>);       <span class="comment">//创建一个对象  </span></span><br><span class="line">    People p4 = <span class="keyword">new</span> People(<span class="number">23</span>, <span class="string">"lupan"</span>);        <span class="comment">//创建一个对象  </span></span><br><span class="line">    people.Add(p1);                     <span class="comment">//添加一个对象  </span></span><br><span class="line">    people.Add(p2);                     <span class="comment">//添加一个对象  </span></span><br><span class="line">    people.Add(p3);                     <span class="comment">//添加一个对象  </span></span><br><span class="line">    people.Add(p4);</span><br><span class="line">    <span class="keyword">return</span> people;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">People</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">int</span> age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;             <span class="comment">//设置属性  </span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">string</span> name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;         <span class="comment">//设置属性  </span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">People</span>(<span class="params"><span class="keyword">int</span> age, <span class="keyword">string</span> name</span>)      <span class="comment">//设置属性(构造函数构造)  </span></span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">      <span class="keyword">this</span>.age = age;                 <span class="comment">//初始化属性值age  </span></span><br><span class="line">      <span class="keyword">this</span>.name = name;               <span class="comment">//初始化属性值name  </span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Func委托"><a href="#Func委托" class="headerlink" title="Func委托"></a>Func<t>委托</t></h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最后一个参数为返回值类型</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Func&lt;<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">bool</span>&gt; gwl = (p, j) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (p + j == <span class="number">10</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    Console.WriteLine(gwl(<span class="number">5</span>,<span class="number">5</span>) + <span class="string">""</span>);   <span class="comment">//打印‘True’</span></span><br><span class="line">    Console.ReadKey();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      C# Lambda表达式(转载)
    
    </summary>
    
      <category term="C#" scheme="http://silencejql.coding.me/categories/C/"/>
    
    
      <category term="委托" scheme="http://silencejql.coding.me/tags/%E5%A7%94%E6%89%98/"/>
    
      <category term="匿名方法" scheme="http://silencejql.coding.me/tags/%E5%8C%BF%E5%90%8D%E6%96%B9%E6%B3%95/"/>
    
      <category term="Lambda" scheme="http://silencejql.coding.me/tags/Lambda/"/>
    
      <category term="Func&lt;T&gt;委托" scheme="http://silencejql.coding.me/tags/Func-T-%E5%A7%94%E6%89%98/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Markdown</title>
    <link href="http://silencejql.coding.me/2019/06/15/Hexo-Markdown/"/>
    <id>http://silencejql.coding.me/2019/06/15/Hexo-Markdown/</id>
    <published>2019-06-15T12:15:05.000Z</published>
    <updated>2019-08-06T03:55:54.083Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo指令"><a href="#Hexo指令" class="headerlink" title="Hexo指令"></a>Hexo指令</h2><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new 布局 &quot;文章名&quot;</span><br><span class="line">$ hexo clean //清除静态页面缓存（清除 public 文件夹)         </span><br><span class="line">$ hexo g     //在本地生成静态页面（生成 public 文件夹）        </span><br><span class="line">$ hexo s     //启动本地服务 http://localhost:4000，进行预览调试           </span><br><span class="line">$ hexo d     //远程部署，同步到 GitHub         </span><br><span class="line"></span><br><span class="line">$ npm install hexo-deployer-git --save    //自动部署</span><br><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d          //发布</span><br></pre></td></tr></table></figure><h2 id="Markdown格式"><a href="#Markdown格式" class="headerlink" title="Markdown格式"></a>Markdown格式</h2><h3 id="首行缩进"><a href="#首行缩进" class="headerlink" title="首行缩进"></a>首行缩进</h3><pre><code>&amp;ensp; //相当于1个空格  &amp;emsp; //相当于2个空格，1个汉字  </code></pre><p>分段: 两个回车<br>换行: 两个空格 + 回车<br>标题: # ~ ######，#号的个数表示几级标题，即表示一级标题到六级标题</p><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*斜体* | **加粗** | ***斜体加粗***  </span><br><span class="line">_斜体_ | __加粗__ | ___斜体加粗___  </span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><p>引用: &gt; 注意后面紧跟个空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 以下为引用效果</span><br><span class="line">继续引用</span><br><span class="line">&gt; &gt;二级引用</span><br></pre></td></tr></table></figure><blockquote><p>以下为引用效果<br>继续引用</p><blockquote><p>二级引用</p></blockquote></blockquote><p>表格: - 和 | 分割行和列 ， : 控制对齐方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 0 | 1 | 2|</span><br><span class="line">| :- | -: | :-: |</span><br><span class="line">| 0 | 1 | 2 |</span><br><span class="line">| 0 | 1 | 2 |</span><br><span class="line">| 0 | 1 | 2 |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">0</th><th align="right">1</th><th align="center">2</th></tr></thead><tbody><tr><td align="left">0</td><td align="right">1</td><td align="center">2</td></tr><tr><td align="left">0</td><td align="right">1</td><td align="center">2</td></tr><tr><td align="left">0</td><td align="right">1</td><td align="center">2</td></tr></tbody></table><p>代码块: 四个空格开头或三个`链接: <a href="链接地址">文字</a><br>邮件链接：<a href="mailto:xxx@xx.com.cn" target="_blank" rel="noopener">xxx</a><br>图片: ![图片说明](图片地址)，地址可以是本地路径，也可以是网络地址<br>列表: * ， + ， - ， 1. ，选其中之一，注意后面紧跟个空格</p><h3 id="设置字体段落格式"><a href="#设置字体段落格式" class="headerlink" title="设置字体段落格式"></a>设置字体段落格式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;center&gt;居中&lt;/center&gt;</span><br><span class="line">&lt;font color=&quot;#FF0000&quot;&gt; 设置颜色 &lt;/font&gt;  </span><br><span class="line">&lt;font size=6&gt; 设置大小 &lt;/font&gt;</span><br><span class="line">&lt;font size=5 color=&quot;#FF0000&quot;&gt; 设置颜色和大小&lt;/font&gt;</span><br></pre></td></tr></table></figure><center>居中</center><p><font color="#FF0000"> 设置颜色 </font><br><font size="6"> 设置大小 </font><br><font size="5" color="#FF0000"> 设置颜色和大小</font></p><h3 id="引用站内文章"><a href="#引用站内文章" class="headerlink" title="引用站内文章"></a>引用站内文章</h3><p>在写文章的过程中，有时候需要引用站内的其他文章。可以通过内置的标签插件的语法post_link来实现引用。<br><code></code></p><h2 id="Hexo主题设计"><a href="#Hexo主题设计" class="headerlink" title="Hexo主题设计"></a>Hexo主题设计</h2><h3 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h3><p>头像配置文件位于：主题配置文件中的 avatar下</p><h3 id="版权信息"><a href="#版权信息" class="headerlink" title="版权信息"></a>版权信息</h3><p>版权信息的配置文件位于：next\layout\_macro\my-copyright中</p><h3 id="添加文章密码"><a href="#添加文章密码" class="headerlink" title="添加文章密码"></a>添加文章密码</h3><h4 id="方法一-测试可用"><a href="#方法一-测试可用" class="headerlink" title="方法一(测试可用)"></a>方法一(测试可用)</h4><h5 id="安装hexo-blog-encrypt"><a href="#安装hexo-blog-encrypt" class="headerlink" title="安装hexo-blog-encrypt"></a>安装hexo-blog-encrypt</h5><p>根目录的package.json文件夹中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;hexo-blog-encrypt&quot;: &quot;2.0.*&quot;</span><br></pre></td></tr></table></figure><p>然后在命令行输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>根目录下的_config.yml文件中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Security</span><br><span class="line">encrypt:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><p>在需要加密的文章头部写入password：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">password: abc123</span><br><span class="line">abstract: Welcome to my blog, enter password to read.</span><br><span class="line">message: Welcome to my blog, enter password to read.</span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>在 themes-&gt;next-&gt;layout-&gt;\_partials-&gt;head.swig 中添加下面内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (prompt(<span class="string">'请输入文章密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">                alert(<span class="string">'密码错误,交钱还是跑路？'</span>);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>然后在文章头部加入password。</p><h3 id="添加边栏背景图"><a href="#添加边栏背景图" class="headerlink" title="添加边栏背景图"></a>添加边栏背景图</h3><p>在  themes\next\source\css\_custom\custom.styl文件中<br>添加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.sidebar &#123;</span><br><span class="line"> background: url([https:<span class="comment">//ws2.sinaimg.cn/large/006tKfTcly1fq2wrm6g3cj309i0hq749.jpg](https://ws2.sinaimg.cn/large/006tKfTcly1fq2wrm6g3cj309i0hq749.jpg "https://ws2.sinaimg.cn/large/006tKfTcly1fq2wrm6g3cj309i0hq749.jpg")) no-repeat !important;</span></span><br><span class="line"> background-size: cover !important;</span><br><span class="line"> position: fixed !important;</span><br><span class="line"> right: <span class="number">0</span> !important;</span><br><span class="line"> top: <span class="number">0</span> !important;</span><br><span class="line"> bottom: <span class="number">0</span> !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="网易云音乐插件"><a href="#网易云音乐插件" class="headerlink" title="网易云音乐插件"></a>网易云音乐插件</h3><p>主题文件夹<br>    layout\_custom\sidebar.swig</p>]]></content>
    
    <summary type="html">
    
      常用Hexo指令、Markdown格式
    
    </summary>
    
      <category term="Hexo" scheme="http://silencejql.coding.me/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://silencejql.coding.me/tags/Hexo/"/>
    
      <category term="主题" scheme="http://silencejql.coding.me/tags/%E4%B8%BB%E9%A2%98/"/>
    
      <category term="文章密码" scheme="http://silencejql.coding.me/tags/%E6%96%87%E7%AB%A0%E5%AF%86%E7%A0%81/"/>
    
      <category term="Markdown" scheme="http://silencejql.coding.me/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>碎碎念</title>
    <link href="http://silencejql.coding.me/2019/06/15/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    <id>http://silencejql.coding.me/2019/06/15/碎碎念/</id>
    <published>2019-06-15T11:55:54.000Z</published>
    <updated>2019-06-18T05:14:31.967Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Enter password to read！" />    <label for="pass">Enter password to read！</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX19YZXQAuDTxt7d6CppRhRwJneYm0+5/YOD9Iz2NBngyrimo2HMtcAVXOmFCS9bsHghVk+i9DxUwgJvUfguphHy9Ygt7GDF38C0q9Bp/ndHJRdF9O7Oi+TNgb0vIoS4qAplKoAvmfL3w6LcYaEk8bBXFNDY6emPc4uqL/bgPvHo7Xb6IAPeHTD0hZ+UWGBQwgxBBLNI0HS1Vi9Dz1EH8mKgShYc2+cBGvfOsxseuNpO7bzAV8tM0Fg0M+86sbcjFJr7z9Fgqn/RIcctUYlE8EaS7gEXa1AbyeTQNv11I5H8xL40U/HYBdeiRjhBJMZW8mk0y2MFiWQDCQkADfbeQ/0wLCnLJoRFi+pOBo1PeZZZ2w+ij57uu/XD3YWOldMdtTrdQM6Z+jMT7zzwRQ6pZYyjqjyiot6yLTY6BobThRjNy1jATrk0PhFiuyVYSJj+PRyDU3uX70oL+W/O9VrTBD3mE/kyaUgtHD7uU7YdMPdJykzgzLKm6Gyko+9EU66+xp5vvUY90PGGL6wrZDif6mu89fu08oLBEh59TOYY9Fiijf1Thp8XRgjvOUbP1PetY+4kApvMDkYNk6GSLptLl4Cqj5ebt/+mCh2cGmMgGoZBaEVs0iURABs3mFcG8aKqw+He5tlGWXI3S+7DaQImnD52j+C6/nuaJkNWVXmNM+tzhdTOw1aR+EBpi</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      碎碎念
    
    </summary>
    
      <category term="碎碎念" scheme="http://silencejql.coding.me/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="碎碎念" scheme="http://silencejql.coding.me/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>Test Project</title>
    <link href="http://silencejql.coding.me/2019/06/11/Test-Project/"/>
    <id>http://silencejql.coding.me/2019/06/11/Test-Project/</id>
    <published>2019-06-11T02:51:25.000Z</published>
    <updated>2019-06-15T14:14:25.398Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Test-File"><a href="#Test-File" class="headerlink" title="Test File"></a>Test File</h3><p>this is my first Hexo text file</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Test-File&quot;&gt;&lt;a href=&quot;#Test-File&quot; class=&quot;headerlink&quot; title=&quot;Test File&quot;&gt;&lt;/a&gt;Test File&lt;/h3&gt;&lt;p&gt;this is my first Hexo text file&lt;/p&gt;

      
    
    </summary>
    
      <category term="Test" scheme="http://silencejql.coding.me/categories/Test/"/>
    
    
      <category term="Test" scheme="http://silencejql.coding.me/tags/Test/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://silencejql.coding.me/2019/06/10/hello-world/"/>
    <id>http://silencejql.coding.me/2019/06/10/hello-world/</id>
    <published>2019-06-10T10:42:29.684Z</published>
    <updated>2019-06-12T12:46:11.744Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
