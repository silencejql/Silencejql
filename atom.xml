<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Silencejql</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://silencejql.coding.me/"/>
  <updated>2019-09-13T01:34:13.215Z</updated>
  <id>http://silencejql.coding.me/</id>
  
  <author>
    <name>Justin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>IBM MQ</title>
    <link href="http://silencejql.coding.me/IBM%20MQ.html"/>
    <id>http://silencejql.coding.me/IBM MQ.html</id>
    <published>2019-09-12T11:48:12.000Z</published>
    <updated>2019-09-13T01:34:13.215Z</updated>
    
    <content type="html"><![CDATA[<center>写在前面</center>文中代码部分参考https://blog.csdn.net/java_sparrow/article/details/80626705<p>网上关于IBMMQ相关资源实在太少，感谢前人的努力，站在前人的肩膀实在上太舒服了。</p><a id="more"></a><h2 id="IBMMQ-客户端安装设置"><a href="#IBMMQ-客户端安装设置" class="headerlink" title="IBMMQ 客户端安装设置"></a>IBMMQ 客户端安装设置</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装包已上传网盘，下载后直接安装即可。<br>链接：<a href="https://pan.baidu.com/s/1_vQpzKl_FRln77IfQ9aNww" target="_blank" rel="noopener">https://pan.baidu.com/s/1_vQpzKl_FRln77IfQ9aNww</a><br>提取码：9q0p</p><h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><p>下文中未提到的部分默认参数即可</p><h4 id="创建队列管理器"><a href="#创建队列管理器" class="headerlink" title="创建队列管理器"></a>创建队列管理器</h4><p><img src="IBM-MQ/QM.png" alt></p><h5 id="设置侦听端口"><a href="#设置侦听端口" class="headerlink" title="设置侦听端口"></a>设置侦听端口</h5><p><img src="IBM-MQ/QM3.png" alt></p><h4 id="创建通道"><a href="#创建通道" class="headerlink" title="创建通道"></a>创建通道</h4><p><img src="IBM-MQ/CHANNEL.png" alt></p><h4 id="创建队列"><a href="#创建队列" class="headerlink" title="创建队列"></a>创建队列</h4><p><img src="IBM-MQ/Q.png" alt></p><h4 id="添加用户组"><a href="#添加用户组" class="headerlink" title="添加用户组"></a>添加用户组</h4><p>将当前用户添加到IBMMQ管理组<br><img src="IBM-MQ/USER.png" alt></p><p>其中对象名为下图所示安装IBMMQ后自动创建的组mqm<br><img src="IBM-MQ/GROUP.png" alt></p><p>至此，IBMMQ环境设置完毕</p><h2 id="C-连接MQ"><a href="#C-连接MQ" class="headerlink" title="C# 连接MQ"></a>C# 连接MQ</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>程序中引用：amqmdnet.dll和IBM.WMQ.WCF.dll两个库文件（IBMMQ客户端安装后生成）<br>路径分别为：<br>C:\Program Files\IBM\WebSphere MQ\bin\amqmdnet.dll<br>C:\Program Files\IBM\WebSphere MQ\bin\IBM.WMQ.WCF.dll<br>程序中添加using IBM.WMQ;<br>程序安装完成后可能缺少mqdc.dll文件，可下载后放在安装路径<br>C:\Program Files\IBM\WebSphere MQ\bin64 下<br>链接：<a href="https://pan.baidu.com/s/1tlBzhposnCLjS-dXSalWrw" target="_blank" rel="noopener">https://pan.baidu.com/s/1tlBzhposnCLjS-dXSalWrw</a><br>提取码：hi00</p><h3 id="C-代码"><a href="#C-代码" class="headerlink" title="C#代码"></a>C#代码</h3><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> MQQueueManager qMgr;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> CCSID = <span class="number">437</span>;</span><br><span class="line">MQEnvironment.Hostname = <span class="string">"10.91.232.46"</span>;</span><br><span class="line">MQEnvironment.Channel = <span class="string">"CHANNEL1"</span>;</span><br><span class="line">MQEnvironment.Port = <span class="number">8802</span>;</span><br><span class="line">MQEnvironment.UserId = <span class="string">"mquser"</span>;</span><br><span class="line">MQEnvironment.Password = <span class="string">"Password1234"</span>;</span><br><span class="line"><span class="comment">// 队列管理器</span></span><br><span class="line">qMgr = <span class="keyword">new</span> MQQueueManager(<span class="string">"LG_2IN1_QMGR"</span>);</span><br></pre></td></tr></table></figure><h4 id="发送数据"><a href="#发送数据" class="headerlink" title="发送数据"></a>发送数据</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendMsg</span>(<span class="params">String msgStr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> openOptions = MQC.MQOO_INPUT_AS_Q_DEF | MQC.MQOO_OUTPUT | MQC.MQOO_INQUIRE;</span><br><span class="line">    MQQueue queue = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 建立通道的连接</span></span><br><span class="line">        queue = qMgr.AccessQueue(queueString, openOptions, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        MQMessage msg = <span class="keyword">new</span> MQMessage();<span class="comment">// 要写入队列的消息</span></span><br><span class="line">        msg.Format = MQC.MQFMT_STRING;</span><br><span class="line">        msg.CharacterSet = CCSID;</span><br><span class="line">        msg.Encoding = CCSID;</span><br><span class="line">        <span class="comment">// msg.writeObject(msgStr);</span></span><br><span class="line">        msg.WriteString(msgStr); <span class="comment">//将消息写入消息对象中</span></span><br><span class="line">        MQPutMessageOptions pmo = <span class="keyword">new</span> MQPutMessageOptions();</span><br><span class="line">        msg.Expiry = <span class="number">-1</span>; <span class="comment">// 设置消息用不过期</span></span><br><span class="line">        queue.Put(msg, pmo);<span class="comment">// 将消息放入队列</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        XmlFO.LogOut(<span class="string">"IBMMQ"</span>,e.ToString());</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (queue != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                queue.Close();</span><br><span class="line">                <span class="comment">// qMgr.disconnect();</span></span><br><span class="line">                XmlFO.LogOut(<span class="string">"IBMMQ"</span>,<span class="string">"写入的消息为："</span> + msgStr);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (MQException e) &#123;</span><br><span class="line">                XmlFO.LogOut(<span class="string">"IBMMQ"</span>, e.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMsg</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> openOptions = MQC.MQOO_INPUT_AS_Q_DEF | MQC.MQOO_OUTPUT | MQC.MQOO_INQUIRE;</span><br><span class="line">    MQQueue queue = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        queue = qMgr.accessQueue(queueString, openOptions, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"==========================="</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"该队列当前的深度为:"</span> + queue.getCurrentDepth());</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"==========================="</span>);</span><br><span class="line">        <span class="keyword">int</span> depth = queue.getCurrentDepth();</span><br><span class="line">        <span class="comment">// 将队列的里的消息读出来</span></span><br><span class="line">        <span class="keyword">while</span> (depth-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            MQMessage msg = <span class="keyword">new</span> MQMessage();<span class="comment">// 要读的队列的消息</span></span><br><span class="line">            MQGetMessageOptions gmo = <span class="keyword">new</span> MQGetMessageOptions();</span><br><span class="line">            queue.<span class="keyword">get</span>(msg, gmo);</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="string">"消息的大小为："</span> + msg.getDataLength());</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="string">"消息的内容："</span> + msg.readStringOfByteLength(msg.getDataLength()));</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="string">"---------------------------"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        XmlFO.LogOut(<span class="string">"IBMMQ"</span>, e.ToString());</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (queue != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                queue.close();</span><br><span class="line">                qMgr.disconnect();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (MQException e) &#123;</span><br><span class="line">                XmlFO.LogOut(<span class="string">"IBMMQ"</span>, e.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      C# IBMMQ
    
    </summary>
    
      <category term="MQ" scheme="http://silencejql.coding.me/categories/MQ/"/>
    
    
      <category term="C#" scheme="http://silencejql.coding.me/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>数据库自动备份、删除数据</title>
    <link href="http://silencejql.coding.me/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD%E3%80%81%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE.html"/>
    <id>http://silencejql.coding.me/数据库自动备份、删除数据.html</id>
    <published>2019-08-20T09:28:08.000Z</published>
    <updated>2019-08-21T08:10:52.810Z</updated>
    
    <content type="html"><![CDATA[<p>文中指令可在windows命令行中执行测试<br>本文介绍的是实用简单的方式实现所需功能，所有功能均可写在上位机软件中自动实现，但不同现场很难通用<br>通过脚本的形式实现简单易改</p><a id="more"></a><h1 id="Postgresql"><a href="#Postgresql" class="headerlink" title="Postgresql"></a>Postgresql</h1><h2 id="数据库备份脚本"><a href="#数据库备份脚本" class="headerlink" title="数据库备份脚本"></a>数据库备份脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo off</span><br><span class="line">set PRJDB=LocalDB</span><br><span class="line">set FileName=%PRJDB%_%date:~0,4%_%date:~5,2%_%date:~8,2%.backup</span><br><span class="line">if not exist &quot;D:\BBK\DBbackup&quot; (md D:\BBK\DBbackup)</span><br><span class="line">D:/&quot;Program Files (x86)&quot;/PostgreSQL/9.5/bin/pg_dump.exe --host localhost --port 5432 --username &quot;postgres&quot; --no-password  --format custom --verbose --file &quot;D:\BBK\DBbackup\%FileName%&quot; &quot;LocalDB&quot;</span><br></pre></td></tr></table></figure><p>说明：</p><blockquote><p>备份保存路径为<code>D:\BBK\DBbackup</code><br>命名为：LocalDB_年_月_日.backup<br><code>D:/&quot;Program Files (x86)&quot;/PostgreSQL/9.5/bin/pg_dump.exe</code>为Postgresql数据库程序所在路径</p></blockquote><h2 id="删除表中数据"><a href="#删除表中数据" class="headerlink" title="删除表中数据"></a>删除表中数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 删除一个月以前的数据</span><br><span class="line">D:/&quot;Program Files (x86)&quot;/PostgreSQL/9.5/bin/psql -h 127.0.0.1 -p 5432 -d LocalDB -U postgres --command &quot;delete from 侧滑表 where 测试时间 &lt; (now() - interval &apos;1 month&apos;)&quot;</span><br></pre></td></tr></table></figure><p>说明：</p><blockquote><p><code>D:/&quot;Program Files (x86)&quot;/PostgreSQL/9.5/bin</code>为Postgresql数据库程序所在文件夹</p></blockquote><h3 id="时间扩展"><a href="#时间扩展" class="headerlink" title="时间扩展"></a>时间扩展</h3><h4 id="年"><a href="#年" class="headerlink" title="年"></a>年</h4><p><code>interval &#39;2 years&#39;</code><br><code>interval &#39;2 year&#39;</code><br><code>interval &#39;2 y&#39;</code><br><code>interval &#39;2 Y&#39;</code><br><code>interval &#39;2Y&#39;</code></p><h4 id="月"><a href="#月" class="headerlink" title="月"></a>月</h4><p><code>interval &#39;1 month&#39;</code><br><code>interval &#39;one month&#39;</code></p><h4 id="周"><a href="#周" class="headerlink" title="周"></a>周</h4><p><code>interval &#39;3 week&#39;</code></p><p>说明：interval 可以不写</p><p>运行时会提示数据用户名密码<br>windows系统可在<code>%APPDATA%\postgresql\pgpass.conf</code>中添加服务器信息，实现免密操作<br>格式：地址:端口:数据库:用户名:密码<br>如：<code>127.0.0.1:5432:LocalDB:postgres:123</code><br>参考：<a href="https://www.postgresql.org/docs/current/libpq-pgpass.html" target="_blank" rel="noopener">https://www.postgresql.org/docs/current/libpq-pgpass.html</a></p><h2 id="自动运行"><a href="#自动运行" class="headerlink" title="自动运行"></a>自动运行</h2><p>将上述shell指令分别复制到文本文档中另存为 name.bat，然后创建任务计划自动调用；<br>任务计划创建方法：windows运行compmgmt.msc 新建任务计划程序按提示操作即可</p><h1 id="SQLServer"><a href="#SQLServer" class="headerlink" title="SQLServer"></a>SQLServer</h1><h2 id="数据库自动备份"><a href="#数据库自动备份" class="headerlink" title="数据库自动备份"></a>数据库自动备份</h2><p>打开数据库，依次进入：管理——维护计划，根据维护计划向导操作即可</p><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><p>启动SQL Server Agent服务，在步骤中新建作业，类型选择transact-SQL，<br>命令中输入：<br>declare @tm <code>datetime</code><br>delete from <code>tablename</code> where tm&gt;=dateadd(month,-6,getdate())//删除表中6个月之前的数据<br>然后打开计划自定义执行周期</p><h1 id="Access"><a href="#Access" class="headerlink" title="Access"></a>Access</h1><p>直接用脚本复制重命名，新建任务计划自动执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set PRJDB=LocalDB</span><br><span class="line">set FileName=%PRJDB%_%date:~0,4%_%date:~5,2%_%date:~8,2%.backup</span><br><span class="line">copy D:\BBK\LocalDB.mdb D:\BBK\DBbackup\%FileName%&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文中指令可在windows命令行中执行测试&lt;br&gt;本文介绍的是实用简单的方式实现所需功能，所有功能均可写在上位机软件中自动实现，但不同现场很难通用&lt;br&gt;通过脚本的形式实现简单易改&lt;/p&gt;
    
    </summary>
    
      <category term="工作" scheme="http://silencejql.coding.me/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="数据库" scheme="http://silencejql.coding.me/categories/%E5%B7%A5%E4%BD%9C/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Postgresql" scheme="http://silencejql.coding.me/tags/Postgresql/"/>
    
      <category term="shell" scheme="http://silencejql.coding.me/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>数据库链接字符串汇总</title>
    <link href="http://silencejql.coding.me/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%93%BE%E6%8E%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B1%87%E6%80%BB.html"/>
    <id>http://silencejql.coding.me/数据库链接字符串汇总.html</id>
    <published>2019-08-17T01:47:49.000Z</published>
    <updated>2019-08-21T08:08:31.528Z</updated>
    
    <content type="html"><![CDATA[<h2 id="通用示例"><a href="#通用示例" class="headerlink" title="通用示例"></a>通用示例</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> ConnStr_EOLDDATA = <span class="string">"$System.Data.SqlClient$Data Source=.;Initial Catalog=EOLDATA;Persist Security Info=True;User ID=sa;Password=321"</span>;</span><br><span class="line"><span class="keyword">string</span> SqlLoginTable = <span class="keyword">string</span>.Format(<span class="string">"select * from [登录表] where [VIN] = '&#123;0&#125;'"</span>, textBoxVIN.Text);</span><br><span class="line">DbDataAdapter AdapLogin = BConnString.CreateDataAdapter(SqlLoginTable, ConnStr_EOLDDATA);</span><br><span class="line">DataTable dtLogin = <span class="keyword">new</span> DataTable();</span><br><span class="line">AdapLogin.Fill(dtLogin);</span><br><span class="line">DataRow drLogin = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (dtLogin.Rows.Count &lt; <span class="number">1</span>)</span><br><span class="line">    drLogin = dtLogin.Rows.Add();</span><br><span class="line"><span class="keyword">else</span> drLogin = dtLogin.Rows[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//drLogin = dtLogin.Rows.Count &lt; 1 ? dtLogin.Rows.Add() : dtLogin.Rows[0];</span></span><br></pre></td></tr></table></figure><h2 id="Access"><a href="#Access" class="headerlink" title="Access"></a>Access</h2><p>链接字符串：<code>$System.Data.OleDb$Provider=Microsoft.Jet.OLEDB.4.0;Data Source=LoginSet.mdb</code><br>SQL字符串：<code>select * from [Table] where ZTS = &#39;zts&#39;</code></p><h2 id="Postgresql"><a href="#Postgresql" class="headerlink" title="Postgresql"></a>Postgresql</h2><p>链接字符串：<code>$Npgsql$Database=LocalDB;Host=LocalHost;Port=5432;Username=postgres;Password=123</code><br>SQL字符串：<code>select * from [Table] where VIN=&#39;vin&#39; order by ID desc</code></p><h3 id="判断字段中包含某字符串所在位"><a href="#判断字段中包含某字符串所在位" class="headerlink" title="判断字段中包含某字符串所在位"></a>判断字段中包含某字符串所在位</h3><p><code>select * from [车型库] where POSITION(&#39;{0}&#39; in [VIN])&gt;0</code><br>eg:<code>postion(&#39;abc&#39; in &#39;123abc123&#39;)</code>—&gt;4</p><h2 id="SQLServer"><a href="#SQLServer" class="headerlink" title="SQLServer"></a>SQLServer</h2><p>SQLServer字符串：<code>$System.Data.SqlClient$Data Source=EOLSERVICE;Initial Catalog=EOLData;Persist Security Info=True;User ID=sa;Password=321</code><br>SQL字符串：<code>select * from [Table] where VIN=&#39;vin&#39; order by ID desc</code></p><h3 id="判断字段中包含某字符串所在位-1"><a href="#判断字段中包含某字符串所在位-1" class="headerlink" title="判断字段中包含某字符串所在位"></a>判断字段中包含某字符串所在位</h3><p><code>select * from [车型库] where charindex(&#39;{0}&#39;,[VIN])&gt;0</code></p><h3 id="选择左侧为某字符串"><a href="#选择左侧为某字符串" class="headerlink" title="选择左侧为某字符串"></a>选择左侧为某字符串</h3><p><code>select * from [车型库] where left([VIN],3)=&#39;LZW&#39;</code></p><h2 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h2><p>不需要借助客户端可直接访问数据库<br><code>string Ora_ConnStr = &quot;User ID=jcxuser;Password=jcxuser;Data Source =(DESCRIPTION = (ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.111.89)(PORT = 1521))) (CONNECT_DATA = (SERVER = DEDICATED)(SERVICE_NAME = yadata)))&quot;;</code></p><p>需要安装Oracle客户端并配置链接方可访问<br><code>string Ora_ConnStrOLEDB = &quot;Provider=OraOLEDB.Oracle;Data Source=yadata;Persist Security Info=True;Password=jcxuser;User ID=jcxuser&quot;;</code><br>有时间对比这两种链接字符串的区别，下面可访问但访问数据不全<br><code>string Ora_ConnStr = &quot;$System.Data.OleDb$Provider=MSDAORA;Data Source=yadata;Persist Security Info=True;Password=jcxuser;User ID=jcxuser&quot;;</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">OracleConnection conn = <span class="keyword">new</span> OracleConnection(Ora_ConnStr);</span><br><span class="line">conn.Open();</span><br><span class="line"><span class="keyword">string</span> OracleSqlStr = <span class="keyword">string</span>.Format(<span class="string">"select * from &#123;0&#125; where SN =  '&#123;1&#125;'"</span>, Ora_tableForVSN, sVIN);</span><br><span class="line">DataTable dtVSN = <span class="keyword">new</span> DataTable();</span><br><span class="line">OracleDataAdapter odaVSN = <span class="keyword">new</span> OracleDataAdapter(OracleSqlStr,  Ora_ConnStr);</span><br><span class="line">odaVSN.Fill(dtVSN);</span><br><span class="line">conn.Close();</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">OleDbConnection conn = <span class="keyword">new</span> OleDbConnection(Ora_ConnStrOLEDB);</span><br><span class="line">conn.Open();</span><br><span class="line">OleDbCommand cmdVSN = conn.CreateCommand();</span><br><span class="line">cmdVSN.CommandText = <span class="keyword">string</span>.Format(<span class="string">"select * from &#123;0&#125; where SN = '&#123;1&#125;'"</span>, Ora_tableForVSN, sVIN);</span><br><span class="line">DataTable dtVSN = <span class="keyword">new</span> DataTable();</span><br><span class="line">OleDbDataAdapter odaVSN = <span class="keyword">new</span> OleDbDataAdapter();</span><br><span class="line">odaVSN.SelectCommand = cmdVSN;</span><br><span class="line">odaVSN.Fill(dtVSN);</span><br><span class="line">conn.Close();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      部分需要运行在本公司环境下
    
    </summary>
    
      <category term="工作" scheme="http://silencejql.coding.me/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="数据库" scheme="http://silencejql.coding.me/categories/%E5%B7%A5%E4%BD%9C/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="链接字符串" scheme="http://silencejql.coding.me/tags/%E9%93%BE%E6%8E%A5%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>现场软件安装包下载</title>
    <link href="http://silencejql.coding.me/%E7%8E%B0%E5%9C%BA%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%8C%85%E4%B8%8B%E8%BD%BD.html"/>
    <id>http://silencejql.coding.me/现场软件安装包下载.html</id>
    <published>2019-08-08T03:19:57.000Z</published>
    <updated>2019-08-21T08:10:02.088Z</updated>
    
    <content type="html"><![CDATA[<h4 id="百度网盘下载推荐用ENFI下载器"><a href="#百度网盘下载推荐用ENFI下载器" class="headerlink" title="百度网盘下载推荐用ENFI下载器"></a>百度网盘下载推荐用ENFI下载器</h4><p>链接：<a href="https://www.enfi.cloud/#/index" target="_blank" rel="noopener">https://www.enfi.cloud/#/index</a></p><h4 id="串口调试助手"><a href="#串口调试助手" class="headerlink" title="串口调试助手"></a>串口调试助手</h4><p>链接：<a href="https://pan.baidu.com/s/1KAisgybEesC8fMTwJ-oK3w" target="_blank" rel="noopener">https://pan.baidu.com/s/1KAisgybEesC8fMTwJ-oK3w</a><br>提取码：au8d</p><h4 id="Socktools"><a href="#Socktools" class="headerlink" title="Socktools"></a>Socktools</h4><p>链接：<a href="https://pan.baidu.com/s/1lXWZWLjt9LE4xxCjK873-Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1lXWZWLjt9LE4xxCjK873-Q</a><br>提取码：v5qn</p><h4 id="NetFramework4-0"><a href="#NetFramework4-0" class="headerlink" title=".NetFramework4.0"></a>.NetFramework4.0</h4><p>链接：<a href="https://pan.baidu.com/s/1Hwdt4rEToEK4Ao4ljvmURA" target="_blank" rel="noopener">https://pan.baidu.com/s/1Hwdt4rEToEK4Ao4ljvmURA</a><br>提取码：wlfc</p><h4 id="虚拟串口"><a href="#虚拟串口" class="headerlink" title="虚拟串口"></a>虚拟串口</h4><p>链接：<a href="https://pan.baidu.com/s/1FrqtaKrp74EPmyvVqNOu6g" target="_blank" rel="noopener">https://pan.baidu.com/s/1FrqtaKrp74EPmyvVqNOu6g</a><br>提取码：wkv3</p><h4 id="VisualStudio2010"><a href="#VisualStudio2010" class="headerlink" title="VisualStudio2010"></a>VisualStudio2010</h4><p>链接：<a href="https://pan.baidu.com/s/1Z-EUIWWsJmUN22KS8QNKcg" target="_blank" rel="noopener">https://pan.baidu.com/s/1Z-EUIWWsJmUN22KS8QNKcg</a><br>提取码：rwpn</p><h4 id="SQLServer2008"><a href="#SQLServer2008" class="headerlink" title="SQLServer2008"></a>SQLServer2008</h4><p>链接：<a href="https://pan.baidu.com/s/15hGavjba8ewaFxlyd_K-dw" target="_blank" rel="noopener">https://pan.baidu.com/s/15hGavjba8ewaFxlyd_K-dw</a><br>提取码：xdxa</p><h4 id="KepServer5-2"><a href="#KepServer5-2" class="headerlink" title="KepServer5.2"></a>KepServer5.2</h4><p>链接：<a href="https://pan.baidu.com/s/1zmX5Myqts5zzG3DTjairdg" target="_blank" rel="noopener">https://pan.baidu.com/s/1zmX5Myqts5zzG3DTjairdg</a><br>提取码：7dwx</p><h4 id="Postgresql9-5-3"><a href="#Postgresql9-5-3" class="headerlink" title="Postgresql9.5.3"></a>Postgresql9.5.3</h4><p>链接：<a href="https://pan.baidu.com/s/1NA4aNTu9CGmAEYd9aeo-Gg" target="_blank" rel="noopener">https://pan.baidu.com/s/1NA4aNTu9CGmAEYd9aeo-Gg</a><br>提取码：l9h6</p><h4 id="Setup-Npgsql-2-2-3-0-r2-net40"><a href="#Setup-Npgsql-2-2-3-0-r2-net40" class="headerlink" title="Setup_Npgsql-2.2.3.0-r2-net40"></a>Setup_Npgsql-2.2.3.0-r2-net40</h4><p>链接：<a href="https://pan.baidu.com/s/1wLBTi8vgJUCvlqO8HvorOQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1wLBTi8vgJUCvlqO8HvorOQ</a><br>提取码：yv4h</p><h4 id="Orical-10g-Client"><a href="#Orical-10g-Client" class="headerlink" title="Orical 10g Client"></a>Orical 10g Client</h4><p>链接：<a href="https://pan.baidu.com/s/1btHhUl-ataDjq6J7KAWfuA" target="_blank" rel="noopener">https://pan.baidu.com/s/1btHhUl-ataDjq6J7KAWfuA</a><br>提取码：ks71</p><h4 id="psqlodbc-x86"><a href="#psqlodbc-x86" class="headerlink" title="psqlodbc_x86"></a>psqlodbc_x86</h4><p>链接：<a href="https://pan.baidu.com/s/19FKNrVT4CxO5yHyvhVayOw" target="_blank" rel="noopener">https://pan.baidu.com/s/19FKNrVT4CxO5yHyvhVayOw</a><br>提取码：9yud</p>]]></content>
    
    <summary type="html">
    
      现场设备软件安装包分享
    
    </summary>
    
      <category term="工作" scheme="http://silencejql.coding.me/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="安装包" scheme="http://silencejql.coding.me/tags/%E5%AE%89%E8%A3%85%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>诊断指令说明--OBD模块</title>
    <link href="http://silencejql.coding.me/%E8%AF%8A%E6%96%AD%E6%8C%87%E4%BB%A4%E8%AF%B4%E6%98%8E--OBD%E6%A8%A1%E5%9D%97.html"/>
    <id>http://silencejql.coding.me/诊断指令说明--OBD模块.html</id>
    <published>2019-08-08T01:22:46.000Z</published>
    <updated>2019-08-31T03:36:32.322Z</updated>
    
    <content type="html"><![CDATA[<h2 id="通讯测试"><a href="#通讯测试" class="headerlink" title="通讯测试"></a>通讯测试</h2><p>串口测试车辆通讯问题<br>SendID：<code>0730</code>；RecvID：<code>0738</code><br><code>33 33 07 38 FF FF 88 88</code> 设置滤波 只接收ID为<code>0738</code>的指令<br><code>55 55 07 30 02 10 03 00 00 00 00 00 88 88</code> 发送指令 发送ID为<code>0730</code><br>其中：<font color="#FF0000"> 02 </font> <font color="#00FF00"> 10 03 </font> <font color="#000000"> 00 00 00 00 00 </font>为CAN指令，第一位为长度位。<br>为什么用55指令测试通讯：</p><blockquote><p>55指令中不包含CAN通讯等待的时间参数，不会出现第三版协议因超时时间较短而导致收不到车辆回复。</p></blockquote><h2 id="第三版协议指令说明"><a href="#第三版协议指令说明" class="headerlink" title="第三版协议指令说明"></a>第三版协议指令说明</h2><h3 id="发送数据"><a href="#发送数据" class="headerlink" title="发送数据"></a>发送数据</h3><p>F0 F0<br>XX XX// 数据长度<br>XX //指令类型:<br>&emsp;&emsp;10: CAN数据（针对ISO15765协议而定）<br>&emsp;&emsp;13: 设置CAN通信滤波ID<br>&emsp;&emsp;14: 只发送指定长度(小于等于8)CAN数据<br>&emsp;&emsp;15:设置CAN通信波特率及标准帧拓展帧<br>&emsp;&emsp;20 :K线数据<br>&emsp;&emsp;25: 设置K线初始化波特率及通信波特率<br>&emsp;&emsp;05: 设置超时时间 CAN通讯短等待回复时间，默认100ms，长等待时间，默认5000ms<br>XX XX XX XX //本机ID<br>XX XX XX XX //目标ID<br>XX n…//数据<br>FF//结尾</p><h3 id="接收数据"><a href="#接收数据" class="headerlink" title="接收数据"></a>接收数据</h3><p>0F 0F<br>XX XX// 数据长度<br>XX //指令类型:<br>&emsp;&emsp;10: CAN数据（针对ISO15765协议而定）<br>&emsp;&emsp;13: 设置CAN通信滤波ID<br>&emsp;&emsp;14: 接收到已设置了CAN通信滤波ID的CAN数据<br>&emsp;&emsp;15:设置CAN通信波特率及标准帧拓展帧<br>&emsp;&emsp;20: K线数据<br>&emsp;&emsp;25: 设置K线初始化波特率及通信波特率<br>&emsp;&emsp;05: 设置通信响应超时时间成功的响应指令<br>&emsp;&emsp;7F: 收到错误回复，比如超时、数据格式错误等<br>XX XX XX XX //本机ID<br>XX XX XX XX //目标ID<br>XX n…//数据<br>FF//结尾</p><p>示例：<br>发送：<code>F0 F0 00 0C 10 00 00 07 20 00 00 07 30 10 03 FF</code><br>接收：<code>0F 0F 00 10 10 00 00 07 20 00 00 07 30 50 03 00 32 01 F4 FF</code></p><h3 id="设置指定滤波ID及读取超时时间-0x12"><a href="#设置指定滤波ID及读取超时时间-0x12" class="headerlink" title="设置指定滤波ID及读取超时时间(0x12)"></a>设置指定滤波ID及读取超时时间(0x12)</h3><p>发送：<code>F0 F0 00 07 12 00 00 07 30 14 FF</code><br>接收：若CAN总线上指定滤波ID(<code>00 00 07 20</code>)对应的数据及超时时间（20*10=200ms），则返回：<br><code>0F 0F 00 0E 12 00 00 07 30 00 01 02 03 04 05 06 07 FF</code> //(<code>00 00 07 30</code> 目标ID)<br>否则返回超时提示；</p><h3 id="设置滤波ID-0x13"><a href="#设置滤波ID-0x13" class="headerlink" title="设置滤波ID(0x13)"></a>设置滤波ID(0x13)</h3><p>发送：<code>F0 F0 00 0A 13 00 00 07 20 FF FF FF FF FF</code><br>接收：若CAN总线上有设置的ID对应的数据，则返回：<br><code>0F 0F 00 0E 14 00 00 07 30 50 03 00 32 01 F4 FF</code>//(<code>00 00 07 30</code> 目标ID)<br>否则无返回；</p><h3 id="只发送单帧数据-0x14"><a href="#只发送单帧数据-0x14" class="headerlink" title="只发送单帧数据(0x14)"></a>只发送单帧数据(0x14)</h3><p>发送：<code>F0 F0 00 0E 14 00 00 07 20 00 00 00 00 12 34 56 78 FF</code><br>发送的目标ID: <code>00 00 07 20</code>  发送的CAN数据: <code>12 34 56 78</code></p><h3 id="设置波特率及标准帧拓展帧（0x15）"><a href="#设置波特率及标准帧拓展帧（0x15）" class="headerlink" title="设置波特率及标准帧拓展帧（0x15）"></a>设置波特率及标准帧拓展帧（0x15）</h3><p>第6字节及第7字节表示设置波特率大小，单位kbps<br>第8字节及第9字节表示设置标准帧或拓展帧：<code>00 00</code> 标准帧 <code>00 01</code> 拓展帧<br>接收数据01代表设置成功，无返回或者返回其他字节数目则设置失败，请注意检测数据格式。<br>比如<br>发送：<code>F0 F0 00 06 15 01 F4 00 01 FF</code>//设置波特率500K，拓展帧<br>接收：<code>0F 0F 00 03 15 01 FF</code>//设置成功</p><h3 id="设置波特率及标准帧拓展帧，无返回确认指令（针对0x15）-0x16"><a href="#设置波特率及标准帧拓展帧，无返回确认指令（针对0x15）-0x16" class="headerlink" title="设置波特率及标准帧拓展帧，无返回确认指令（针对0x15）(0x16)"></a>设置波特率及标准帧拓展帧，无返回确认指令（针对0x15）(0x16)</h3><p>第6字节及第7字节表示设置波特率大小，单位kbps<br>第8字节及第9字节表示设置标准帧或拓展帧：<code>00 00</code> 标准帧 <code>00 01</code> 拓展帧<br>设置成功与否，都不返回数据<br>发送：<code>F0 F0 00 06 16 01 F4 00 01 FF</code>//设置波特率500K，拓展帧<br>接收：无</p><h3 id="K-Line设置初始波特率及正常通讯波特率（0x25）"><a href="#K-Line设置初始波特率及正常通讯波特率（0x25）" class="headerlink" title="K-Line设置初始波特率及正常通讯波特率（0x25）"></a>K-Line设置初始波特率及正常通讯波特率（0x25）</h3><p>第6字节及第7字节表示设置初始波特率（单位：bps），默认200bps<br>第8字节及第9字节表示设置正常通讯波特率（单位：bps），默认10400bps<br>接收数据01代表设置成功，无返回或者返回其他字节数目则设置失败，请注意检测数据格式。</p><blockquote><p>发送：<code>F0 F0 00 06 25 00 C8 28 A0 FF</code>//设置波初始波特率200bps及正常通讯波特率10400bps<br>接收：<code>0F 0F 00 03 25 01 FF</code>//设置成功</p></blockquote><h3 id="K线指令（0x20）"><a href="#K线指令（0x20）" class="headerlink" title="K线指令（0x20）"></a>K线指令（0x20）</h3><p>发送：<code>F0 F0 00 08 20 80 28 F1 01 81 1b FF</code><br>接收：<code>0F 0F 00 0A 20 80 F1 28 03 C1 6B 8F 57 FF</code></p><h3 id="通讯错误的回复指令（0x7F）"><a href="#通讯错误的回复指令（0x7F）" class="headerlink" title="通讯错误的回复指令（0x7F）"></a>通讯错误的回复指令（0x7F）</h3><p><code>0F 0F 00 03 7F XX FF</code></p><h4 id="故障码说明"><a href="#故障码说明" class="headerlink" title="故障码说明"></a>故障码说明</h4><table><thead><tr><th align="center"><code>XX</code>故障码(Hex)</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>00</code></td><td align="center">等待接收或延时发送</td></tr><tr><td align="center"><code>02</code></td><td align="center">发送单帧100ms超时未收到CAN数据</td></tr><tr><td align="center"><code>03</code></td><td align="center">5000ms超时提示</td></tr><tr><td align="center"><code>04</code></td><td align="center">接收多帧时，未收到数据100ms超时提示</td></tr><tr><td align="center"><code>05</code></td><td align="center">读取指定ID数据，超时提示</td></tr><tr><td align="center"><code>11</code></td><td align="center">接收多帧时未收到流控帧提示</td></tr><tr><td align="center"><code>12</code></td><td align="center">接收到的CAN数据长度大于7错误提示</td></tr><tr><td align="center"><code>13</code></td><td align="center">接收到未符合要求的数据类型</td></tr><tr><td align="center"><code>21</code></td><td align="center">发送Kline数据500ms超时未收到CAN数据</td></tr><tr><td align="center"><code>F2</code></td><td align="center">接收到PC数据不是以0xFF结尾</td></tr><tr><td align="center"><code>F1</code></td><td align="center">CAN数据超过4096个字节</td></tr><tr><td align="center"><code>2A</code></td><td align="center">K线初始化后未接收到”格式”字节</td></tr><tr><td align="center"><code>2B</code></td><td align="center">K线初始化后自反馈是未接收到指定长度K线数据</td></tr><tr><td align="center"><code>2C</code></td><td align="center">K线未接收到0x80字节</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      上位机通过OBD模块与车辆通讯指令说明
    
    </summary>
    
      <category term="工作" scheme="http://silencejql.coding.me/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="诊断指令" scheme="http://silencejql.coding.me/tags/%E8%AF%8A%E6%96%AD%E6%8C%87%E4%BB%A4/"/>
    
      <category term="CAN" scheme="http://silencejql.coding.me/tags/CAN/"/>
    
  </entry>
  
  <entry>
    <title>工作-BBK</title>
    <link href="http://silencejql.coding.me/%E5%B7%A5%E4%BD%9C-BBK.html"/>
    <id>http://silencejql.coding.me/工作-BBK.html</id>
    <published>2019-08-07T08:28:57.000Z</published>
    <updated>2019-08-21T08:10:52.841Z</updated>
    
    <content type="html"><![CDATA[<br><a href="/现场软件备份路径.html" title="现场软件备份路径">现场软件备份路径</a><br><a href="/现场问题整理.html" title="现场问题整理">现场问题整理</a><br><br><a href="/现场软件安装包下载.html" title="现场软件安装包下载">现场软件安装包下载</a>]]></content>
    
    <summary type="html">
    
      
      
        
&lt;br&gt;
&lt;a href=&quot;/现场软件备份路径.html&quot; title=&quot;现场软件备份路径&quot;&gt;现场软件备份路径&lt;/a&gt;
&lt;br&gt;
&lt;a href=&quot;/现场问题整理.html&quot; title=&quot;现场问题整理&quot;&gt;现场问题整理&lt;/a&gt;
&lt;br&gt;

&lt;br&gt;
&lt;a href=&quot;/现场软件
      
    
    </summary>
    
      <category term="工作" scheme="http://silencejql.coding.me/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>HTML常用标签</title>
    <link href="http://silencejql.coding.me/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE.html"/>
    <id>http://silencejql.coding.me/HTML常用标签.html</id>
    <published>2019-08-07T01:59:59.000Z</published>
    <updated>2019-08-21T08:07:13.751Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h2><h3 id="HTML标题"><a href="#HTML标题" class="headerlink" title="HTML标题"></a>HTML标题</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>h1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>h3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>h4<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h5</span>&gt;</span>h5<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h6</span>&gt;</span>h6<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="水平线-分割线"><a href="#水平线-分割线" class="headerlink" title="水平线/分割线"></a>水平线/分割线</h3><p><code>&lt;hr/&gt;</code></p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p><code>html注释：&lt;!-- comment --&gt;</code></p><h3 id="段落及换行"><a href="#段落及换行" class="headerlink" title="段落及换行"></a>段落及换行</h3><p>html段落<code>&lt;p&gt;</code>以及段落换行<code>&lt;br/&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello <span class="tag">&lt;<span class="name">br</span>/&gt;</span> world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文本格式化"><a href="#文本格式化" class="headerlink" title="文本格式化"></a>文本格式化</h3><table><thead><tr><th align="center">标签</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>&lt;b&gt;</code></td><td align="center">加粗</td></tr><tr><td align="center"><code>&lt;big&gt;</code></td><td align="center">大号字体</td></tr><tr><td align="center"><code>&lt;em&gt;</code></td><td align="center">着重文字</td></tr><tr><td align="center"><code>&lt;i&gt;</code></td><td align="center">斜体</td></tr><tr><td align="center"><code>&lt;small&gt;</code></td><td align="center">小号字体</td></tr><tr><td align="center"><code>&lt;sub&gt;</code></td><td align="center">下标</td></tr><tr><td align="center"><code>&lt;sup&gt;</code></td><td align="center">上标</td></tr></tbody></table><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p><code>&lt;a&gt;</code>比较重要的属性有两个，分别是href、target<br>href指定超链接地址<br>target指定打开方式<br>&emsp;_blank  新页面打开</p><h4 id="普通链接"><a href="#普通链接" class="headerlink" title="普通链接"></a>普通链接</h4><p><code>&lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;</code></p><h4 id="邮件链接"><a href="#邮件链接" class="headerlink" title="邮件链接"></a>邮件链接</h4><p>标签最简式<br><code>&lt;a href=&quot;mailto:xxx@xx.com&quot;&gt;联系站长&lt;/a&gt;</code></p><h3 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h3><p>使用格式：<code>&lt;img src=&quot;url&quot;&gt;</code><br>&emsp;alt  定义当图片无法加载时，显示什么信息<br>&emsp;width 定义宽度，单位可以为像素  也可以为百分比<br>&emsp;height 定义高度<br><code>&lt; img src=“11.jpg” width=&quot;100px&quot; height=&quot;200px&quot; title=&quot;title&quot; alt=&quot;图片无法显示，请刷新&quot;/&gt;</code></p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>表格由<code>&lt;table&gt;</code>来定义，每行<code>&lt;tr&gt;</code> 有许多单元格<code>&lt;td&gt;</code>。表头可以使用<code>&lt;th&gt;</code><br><code>&lt;table&gt;</code>标签属性：</p><blockquote><p>border：表格边框属性；当使用border=”1”设置边框时，会在所有td以及table上嵌套边框，当border加大时，只有table框会加粗。<br>cellspacing：单元格与单元格之间的间隙。当cellspacing=”0”时，单元格之间的间隙为0，但边框线并不会合并。<br>☆☆合并边框的写法style=”border-collapse:collapse;” 使用边框合并时，无需设置cellspacing。<br>cellpadding:单元格内边距，单元格中文字与单元格边框之间的距离。<br>width/height:表格的宽高<br>align：设置表格在父容器中的对齐方式 ，left/居左 center/居中 right/居右<br>☆☆当表格使用align属性时，相当于使表格浮动，可能会导致表格后面的元素受表格浮动影响，导致布局错乱。<br>bgcolor：背景色<br>background：背景图，后接相对路径。背景图和背景色同时生效时，图会覆盖背景色<br>bordercolor：设置边框颜色</p></blockquote><p>在<code>&lt;table&gt;</code>中可以嵌入<code>&lt;th&gt;  &lt;tr&gt;  &lt;td&gt;</code>等标签<br>　　<code>&lt;tr&gt;</code>   定义行<br>　　<code>&lt;th&gt;</code>   定义表头<br>　　　　colspan  定义表头单元格可以横跨的列数。<br>　　　　rowspan  定义表头单元格横跨的行数<br>　　　　heardes  定义与表头单元格相关联的一个或者多个单元格。(html5新增)　　　<br>　　<code>&lt;td&gt;</code>   定义单元格<br>　　　　colspan  定义单元格可以横跨的列数。<br>　　　　rowspan  定义单元格横跨的行数<br>　　　　heardes  定义与单元格相关联的一个或者多个单元格。(html5新增)　　<br>表格固定高度：overflow-y:auto;</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>无序列表<code>&lt;ul&gt;</code><br>有序列表<code>&lt;ol&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>male<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>female<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>male<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>female<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      常用HTML标签整理
    
    </summary>
    
      <category term="HTML" scheme="http://silencejql.coding.me/categories/HTML/"/>
    
    
      <category term="HTML标签" scheme="http://silencejql.coding.me/tags/HTML%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://silencejql.coding.me/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"/>
    <id>http://silencejql.coding.me/正则表达式.html</id>
    <published>2019-08-06T09:46:21.000Z</published>
    <updated>2019-08-21T08:09:30.220Z</updated>
    
    <content type="html"><![CDATA[<h3 id="非打印字符"><a href="#非打印字符" class="headerlink" title="非打印字符"></a>非打印字符</h3><p>非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：</p><table><thead><tr><th align="center">字符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">\cx</td><td align="center">匹配由x指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。</td></tr><tr><td align="center">\f</td><td align="center">匹配一个换页符。等价于 \x0c 和 \cL。</td></tr><tr><td align="center">\n</td><td align="center">匹配一个换行符。等价于 \x0a 和 \cJ。</td></tr><tr><td align="center">\r</td><td align="center">匹配一个回车符。等价于 \x0d 和 \cM。</td></tr><tr><td align="center">\s</td><td align="center">匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。注意 Unicode 正则表达式会匹配全角空格符。</td></tr><tr><td align="center">\S</td><td align="center">匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</td></tr><tr><td align="center">\t</td><td align="center">匹配一个制表符。等价于 \x09 和 \cI。</td></tr><tr><td align="center">\v</td><td align="center">匹配一个垂直制表符。等价于 \x0b 和 \cK。</td></tr></tbody></table><h3 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h3><table><thead><tr><th align="center">字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">$</td><td align="left">匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 ‘\n’ 或 ‘\r’。要匹配 $ 字符本身，请使用 $。</td></tr><tr><td align="center">( )</td><td align="left">标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。</td></tr><tr><td align="center">*</td><td align="left">匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 *。</td></tr><tr><td align="center">+</td><td align="left">匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 +。</td></tr><tr><td align="center">.</td><td align="left">匹配除换行符 \n 之外的任何单字符。要匹配 . ，请使用 . 。</td></tr><tr><td align="center">[</td><td align="left">标记一个中括号表达式的开始。要匹配 [，请使用 [。</td></tr><tr><td align="center">?</td><td align="left">匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 ?。</td></tr><tr><td align="center">\</td><td align="left">将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， ‘n’ 匹配字符 ‘n’。’\n’ 匹配换行符。序列 ‘\‘ 匹配 “&quot;，而 ‘(‘ 则匹配 “(“。</td></tr><tr><td align="center">^</td><td align="left">匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。要匹配 ^ 字符本身，请使用 ^。</td></tr><tr><td align="center">{</td><td align="left">标记限定符表达式的开始。要匹配 {，请使用 {。</td></tr><tr><td align="center">|</td><td align="left">指明两项之间的一个选择。要匹配 |，请使用 |。</td></tr></tbody></table><h3 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h3><p>限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有 * 或 + 或 ? 或 {n} 或 {n,} 或 {n,m} 共6种。<br>正则表达式的限定符有：</p><table><thead><tr><th align="center">字符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">*</td><td align="center">匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。</td></tr><tr><td align="center">+</td><td align="center">匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</td></tr><tr><td align="center">?</td><td align="center">匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 、 “does” 中的 “does” 、 “doxy” 中的 “do” 。? 等价于 {0,1}。</td></tr><tr><td align="center">{n}</td><td align="center">n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td></tr><tr><td align="center">{n,}</td><td align="center">n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。</td></tr><tr><td align="center">{n,m}</td><td align="center">m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。</td></tr></tbody></table><p><strong><em>\</em>、+限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个?就可以实现非贪婪或最小匹配*</strong></p><h3 id="定位符"><a href="#定位符" class="headerlink" title="定位符"></a>定位符</h3><p>定位符使您能够将正则表达式固定到行首或行尾。它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。<br>定位符用来描述字符串或单词的边界，^ 和 $ 分别指字符串的开始与结束，\b 描述单词的前或后边界，\B 表示非单词边界。<br>正则表达式的定位符有：</p><table><thead><tr><th align="center">字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">^</td><td align="left">匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 \n 或 \r 之后的位置匹配。</td></tr><tr><td align="center">$</td><td align="left">匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 \n 或 \r 之前的位置匹配。</td></tr><tr><td align="center">\b</td><td align="left">匹配一个单词边界，即字与空格间的位置。</td></tr><tr><td align="center">\B</td><td align="left">非单词边界匹配。</td></tr></tbody></table><p><strong>注意</strong>：不能将限定符与定位符一起使用。由于在紧靠换行或者单词边界的前面或后面不能有一个以上位置，因此不允许诸如 ^* 之类的表达式。<br>若要匹配一行文本开始处的文本，请在正则表达式的开始使用 ^ 字符。不要将 ^ 的这种用法与中括号表达式内的用法混淆。<br>若要匹配一行文本的结束处的文本，请在正则表达式的结束处使用 $ 字符。</p>]]></content>
    
    <summary type="html">
    
      常用正则表达式
    
    </summary>
    
      <category term="正则表达式" scheme="http://silencejql.coding.me/categories/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    
      <category term="正则表达式" scheme="http://silencejql.coding.me/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>现场问题整理</title>
    <link href="http://silencejql.coding.me/%E7%8E%B0%E5%9C%BA%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86.html"/>
    <id>http://silencejql.coding.me/现场问题整理.html</id>
    <published>2019-08-06T03:31:16.000Z</published>
    <updated>2019-08-21T08:10:08.660Z</updated>
    
    <content type="html"><![CDATA[<h2 id="通讯测试"><a href="#通讯测试" class="headerlink" title="通讯测试"></a>通讯测试</h2><p>串口测试车辆通讯问题<br>SendID：<code>0730</code>；RecvID：<code>0738</code><br><code>33 33 07 38 FF FF 88 88</code> 设置滤波 只接收ID为<code>0738</code>的指令<br><code>55 55 07 30 02 10 03 00 00 00 00 00 88 88</code> 发送指令 发送ID为<code>0730</code><br>其中：<font color="#FF0000"> 02 10 03 00 00 00 00 00 </font> 为CAN指令，第一位为长度位。</p><h2 id="四轮大灯"><a href="#四轮大灯" class="headerlink" title="四轮大灯"></a>四轮大灯</h2><h3 id="四轮设备中文乱码导致数据上传失败"><a href="#四轮设备中文乱码导致数据上传失败" class="headerlink" title="四轮设备中文乱码导致数据上传失败"></a>四轮设备中文乱码导致数据上传失败</h3><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><blockquote><p>更改时间、区域为China 详情请咨询 <a href="mailto:coulson@bbkco.com.cn" target="_blank" rel="noopener">Coulsonxia</a></p></blockquote><h3 id="宝骏现场大灯数据单独上传"><a href="#宝骏现场大灯数据单独上传" class="headerlink" title="宝骏现场大灯数据单独上传"></a>宝骏现场大灯数据单独上传</h3><h4 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h4><blockquote><p>流程中新建TCPClient用于接收大灯通讯<br>启动大灯需要发送车型信息，格式为：{0x02}{车辆信息_ToHLA_ZTS};{车辆信息_ToHLA_VIN}{0x0D}{0x0A}<br>接收解析并保存大灯数据</p></blockquote>]]></content>
    
    <summary type="html">
    
      整理现场遇到的各种问题
    
    </summary>
    
      <category term="工作" scheme="http://silencejql.coding.me/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="现场问题" scheme="http://silencejql.coding.me/tags/%E7%8E%B0%E5%9C%BA%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>现场软件备份路径</title>
    <link href="http://silencejql.coding.me/%E7%8E%B0%E5%9C%BA%E8%BD%AF%E4%BB%B6%E5%A4%87%E4%BB%BD%E8%B7%AF%E5%BE%84.html"/>
    <id>http://silencejql.coding.me/现场软件备份路径.html</id>
    <published>2019-08-06T02:54:24.000Z</published>
    <updated>2019-08-21T08:09:48.681Z</updated>
    
    <content type="html"><![CDATA[<p>网盘中软件工程下有相应文件夹的上传在相应文件夹中，没有的上传在对应项目文件夹中，后期会提醒Dean在软件工程中新建相应文件夹。<br><code>Z:\4-软件共享John\软件工程</code></p><a id="more"></a><h3 id="网盘地址"><a href="#网盘地址" class="headerlink" title="网盘地址"></a>网盘地址</h3><p>内网：<a href="http://192.168.1.80:5000/" target="_blank" rel="noopener">http://192.168.1.80:5000/</a><br>外网：<a href="https://bbknick.synology.me:5001/" target="_blank" rel="noopener">https://bbknick.synology.me:5001/</a></p><h2 id="北汽"><a href="#北汽" class="headerlink" title="北汽"></a>北汽</h2><h4 id="莱西被动式ACC"><a href="#莱西被动式ACC" class="headerlink" title="莱西被动式ACC"></a>莱西被动式ACC</h4><h5 id="更新时间：20190806"><a href="#更新时间：20190806" class="headerlink" title="更新时间：20190806 "></a><font color="#FF0000">更新时间：20190806 </font></h5><p><code>Z:\6-项目管理Jason\2018\218039 北汽新能源莱西工厂一套驾驶辅助标定设备项目-Jones\17-现场设备调试程序</code></p><h4 id="北汽昆明"><a href="#北汽昆明" class="headerlink" title="北汽昆明"></a>北汽昆明</h4><h5 id="更新时间：20190806-1"><a href="#更新时间：20190806-1" class="headerlink" title="更新时间：20190806 "></a><font color="#FF0000">更新时间：20190806 </font></h5><p><code>Z:\6-项目管理Jason\2017\117314 北汽新能源汽车工程技术中心（昆明）检测线项目-Jones\17-现场设备调试程序\设备程序</code></p><h2 id="众泰"><a href="#众泰" class="headerlink" title="众泰"></a>众泰</h2><h4 id="贵港腾骏"><a href="#贵港腾骏" class="headerlink" title="贵港腾骏"></a>贵港腾骏</h4><h5 id="更新时间：20190806-2"><a href="#更新时间：20190806-2" class="headerlink" title="更新时间：20190806 "></a><font color="#FF0000">更新时间：20190806 </font></h5><p><code>Z:\4-软件共享John\软件工程\腾骏\腾骏贵港</code></p>]]></content>
    
    <summary type="html">
    
      现场软件备份在网盘中的路径
    
    </summary>
    
      <category term="工作" scheme="http://silencejql.coding.me/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="现场软件备份" scheme="http://silencejql.coding.me/tags/%E7%8E%B0%E5%9C%BA%E8%BD%AF%E4%BB%B6%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
  <entry>
    <title>数据库导入导出</title>
    <link href="http://silencejql.coding.me/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA.html"/>
    <id>http://silencejql.coding.me/数据库导入导出.html</id>
    <published>2019-07-30T00:32:28.000Z</published>
    <updated>2019-08-21T08:10:52.860Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Postgresql"><a href="#Postgresql" class="headerlink" title="Postgresql"></a>Postgresql</h1><h2 id="测试软件导出、Postgresql导入"><a href="#测试软件导出、Postgresql导入" class="headerlink" title="测试软件导出、Postgresql导入"></a>测试软件导出、Postgresql导入</h2><h3 id="测试软件导出"><a href="#测试软件导出" class="headerlink" title="测试软件导出"></a>测试软件导出</h3><blockquote><p>连接数据库设置完筛选条件后点击导出到Excel重命名为：表名.csv</p></blockquote><h3 id="测试软件导入"><a href="#测试软件导入" class="headerlink" title="测试软件导入"></a>测试软件导入</h3><blockquote><p>1、打开导出表添加新的数据后，删除第一行表头以及第一列序号<br>2、删除原数据库已有行后保存<br>3、打开Postgres找到相应表右键导入<br>4、文件名选择csv文件路径、格式选csv、字符编码可选<br>5、点击导入即可</p><blockquote><p>如果主键为自增序列执行6、7<br>6、将相应表的序列创建脚本后删除<br>7、更改脚本中的START大于新增数据的主键ID后执行脚本</p></blockquote></blockquote><h2 id="SQL-shell-psql-导入"><a href="#SQL-shell-psql-导入" class="headerlink" title="SQL shell(psql)导入"></a>SQL shell(psql)导入</h2><blockquote><p>1、将excel处理好后，另存为csv（Comma Delimited）<br>2、运行SQL shell(psql) 并登录<br>3、运行’COPY mytable FROM ‘/myfile.csv’  WITH CSV  HEADER</p></blockquote><h2 id="SQL-shell-psql-导出"><a href="#SQL-shell-psql-导出" class="headerlink" title="SQL shell(psql)导出"></a>SQL shell(psql)导出</h2><blockquote><p>COPY (select * from mytable) to ‘/myfile.csv’ with csv header;</p></blockquote>]]></content>
    
    <summary type="html">
    
      关于数据库的导入导出
    
    </summary>
    
      <category term="工作" scheme="http://silencejql.coding.me/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="数据库" scheme="http://silencejql.coding.me/categories/%E5%B7%A5%E4%BD%9C/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Postgresql" scheme="http://silencejql.coding.me/tags/Postgresql/"/>
    
  </entry>
  
  <entry>
    <title>无处安放的矫情</title>
    <link href="http://silencejql.coding.me/%E6%97%A0%E5%A4%84%E5%AE%89%E6%94%BE%E7%9A%84%E7%9F%AB%E6%83%85.html"/>
    <id>http://silencejql.coding.me/无处安放的矫情.html</id>
    <published>2019-07-22T06:38:12.000Z</published>
    <updated>2019-08-21T08:09:18.288Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Enter password to read！" />    <label for="pass">Enter password to read！</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX19M3FnBcHGOAaqCri3SAyfseLUdJu//s7w=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      交钱！
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>C# XML</title>
    <link href="http://silencejql.coding.me/C#%20XML.html"/>
    <id>http://silencejql.coding.me/C# XML.html</id>
    <published>2019-07-11T04:56:29.000Z</published>
    <updated>2019-08-21T08:10:52.821Z</updated>
    
    <content type="html"><![CDATA[<h2 id="XML创建、读取配置"><a href="#XML创建、读取配置" class="headerlink" title="XML创建、读取配置"></a>XML创建、读取配置</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">WirteConfig</span>(<span class="params"><span class="keyword">string</span> FileName, <span class="keyword">string</span> KeyName, <span class="keyword">string</span> Value</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> FilePath = OnlyOneStartUp.UseConfigPath;</span><br><span class="line">        <span class="keyword">string</span> AllFileName = FilePath + <span class="string">"\\"</span> + FileName + <span class="string">".xml"</span>;</span><br><span class="line">        <span class="keyword">if</span> (!Directory.Exists(FilePath))</span><br><span class="line">            Directory.CreateDirectory(FilePath);</span><br><span class="line"></span><br><span class="line">        DataSet ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">        <span class="keyword">if</span> (File.Exists(AllFileName))</span><br><span class="line">            ds.ReadXml(AllFileName);</span><br><span class="line">        <span class="keyword">if</span> (ds.Tables.Count &lt; <span class="number">1</span>)</span><br><span class="line">            ds.Tables.Add();</span><br><span class="line">        <span class="keyword">if</span> (ds.Tables[<span class="number">0</span>].Rows.Count &lt; <span class="number">1</span>)</span><br><span class="line">            ds.Tables[<span class="number">0</span>].Rows.Add();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!ds.Tables[<span class="number">0</span>].Columns.Contains(KeyName))</span><br><span class="line">            ds.Tables[<span class="number">0</span>].Columns.Add(KeyName);</span><br><span class="line">        ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][KeyName] = Value;</span><br><span class="line"></span><br><span class="line">        ds.WriteXml(AllFileName);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> sError = <span class="keyword">string</span>.Format(<span class="string">"写入配置信息Error:&#123;0&#125;"</span>, e.Message);</span><br><span class="line">        ErrorOut(MethodInfo.GetCurrentMethod().Name, sError);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 读出配置文件</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="FileName"&gt;</span>配置文件名称<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="KeyName"&gt;</span>键名<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Value"&gt;</span>返回的值<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">ReadConfig</span>(<span class="params"><span class="keyword">string</span> FileName, <span class="keyword">string</span> KeyName, <span class="keyword">ref</span> <span class="keyword">string</span> Value</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> FilePath = OnlyOneStartUp.UseConfigPath;</span><br><span class="line">        <span class="keyword">string</span> AllFileName = FilePath + <span class="string">"\\"</span> + FileName + <span class="string">".xml"</span>;</span><br><span class="line">        <span class="keyword">if</span> (!Directory.Exists(FilePath))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        DataSet ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">        <span class="keyword">if</span> (File.Exists(AllFileName))</span><br><span class="line">            ds.ReadXml(AllFileName);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (ds.Tables.Count &lt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (ds.Tables[<span class="number">0</span>].Rows.Count &lt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!ds.Tables[<span class="number">0</span>].Columns.Contains(KeyName))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        Value = Convert.ToString(ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][KeyName]);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> sError = <span class="keyword">string</span>.Format(<span class="string">"读取配置信息Error:&#123;0&#125;"</span>, e.Message);</span><br><span class="line">        ErrorOut(MethodInfo.GetCurrentMethod().Name, sError);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ReadConfigEx</span>(<span class="params"><span class="keyword">string</span> FileName, <span class="keyword">string</span> KeyName, <span class="keyword">ref</span> <span class="keyword">string</span> Value</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!ReadConfig(FileName, KeyName, <span class="keyword">ref</span> Value))</span><br><span class="line">        WirteConfig(FileName, KeyName, Value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      C#对XML的操作
    
    </summary>
    
      <category term="C#" scheme="http://silencejql.coding.me/categories/C/"/>
    
    
      <category term="XML" scheme="http://silencejql.coding.me/tags/XML/"/>
    
  </entry>
  
  <entry>
    <title>数据转换</title>
    <link href="http://silencejql.coding.me/%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2.html"/>
    <id>http://silencejql.coding.me/数据转换.html</id>
    <published>2019-07-11T03:13:39.000Z</published>
    <updated>2019-08-21T08:09:05.012Z</updated>
    
    <content type="html"><![CDATA[<h2 id="IEEE-to-Double、Char、int"><a href="#IEEE-to-Double、Char、int" class="headerlink" title="IEEE to Double、Char、int"></a>IEEE to Double、Char、int</h2><h3 id="在线转换工具"><a href="#在线转换工具" class="headerlink" title="在线转换工具"></a>在线转换工具</h3><p><a href="http://www.binaryconvert.com" target="_blank" rel="noopener">http://www.binaryconvert.com</a></p><h3 id="C-IEEE-to-Single"><a href="#C-IEEE-to-Single" class="headerlink" title="C# IEEE to Single"></a>C# IEEE to Single</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Single <span class="title">IEEE2Single</span>(<span class="params"><span class="keyword">byte</span>[] b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        Array.Reverse(b);</span><br><span class="line">        Single d = BitConverter.ToSingle(b, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> (Single)Math.Round(d, <span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (System.Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">byte</span>[] <span class="title">SingleToIEEE</span>(<span class="params">Single d</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[]&#123;&#125;;</span><br><span class="line">        b = BitConverter.GetBytes(d);</span><br><span class="line">        Array.Reverse(b);</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (System.Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">byte</span>[] &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3CA97E13-&gt;0.02069</p><h2 id="格式转换"><a href="#格式转换" class="headerlink" title="格式转换"></a>格式转换</h2><h3 id="Double-to-Hex"><a href="#Double-to-Hex" class="headerlink" title="Double to Hex"></a>Double to Hex</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> Height_LF = (<span class="keyword">int</span>)Convert.ToDouble(XmlFO.ListObject[<span class="string">"WBH_LF"</span>].xValue);</span><br><span class="line">Height_RR *= <span class="number">4</span>;</span><br><span class="line"><span class="keyword">string</span> s = <span class="keyword">string</span>.Empty;</span><br><span class="line">s = s + ((<span class="keyword">byte</span>)(Height_LF &gt;&gt; <span class="number">8</span>)).ToString(<span class="string">"x2"</span>)+ <span class="string">" "</span>;</span><br><span class="line">s = s + ((<span class="keyword">byte</span>)(Height_LF)).ToString(<span class="string">"x2"</span>) + <span class="string">" "</span>;</span><br></pre></td></tr></table></figure><p>2700-&gt;0a 8c</p><h3 id="Byte-to-uint"><a href="#Byte-to-uint" class="headerlink" title="Byte to uint"></a>Byte to uint</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uint</span> <span class="title">BytesToUint</span>(<span class="params"><span class="keyword">byte</span>[] bys</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">uint</span> ReVal = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">foreach</span> (<span class="keyword">byte</span> b <span class="keyword">in</span> bys)</span><br><span class="line">  &#123;</span><br><span class="line">      ReVal &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">      ReVal += b;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ReVal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">byte</span>[] <span class="title">UintToBytes</span>(<span class="params"><span class="keyword">uint</span> UnVal, <span class="keyword">int</span> Count</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">byte</span>[] ReVal = <span class="keyword">new</span> <span class="keyword">byte</span>[Count];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Count; i++)</span><br><span class="line">  &#123;</span><br><span class="line">      ReVal[Count - i - <span class="number">1</span>] = (<span class="keyword">byte</span>)(UnVal &gt;&gt; (i * <span class="number">8</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ReVal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Int-to-Byte"><a href="#Int-to-Byte" class="headerlink" title="Int to Byte"></a>Int to Byte</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">ToByte</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">string</span>[] SepPara;</span><br><span class="line">      <span class="keyword">if</span> (!XmlFO.SepParams(sPara, <span class="number">2</span>, <span class="keyword">out</span> SepPara))</span><br><span class="line">          <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">      xBytes tmpbyte = (xBytes)XmlFO.GetCheckSpecTypeObject(SepPara[<span class="number">0</span>], <span class="keyword">typeof</span>(xBytes));</span><br><span class="line">      <span class="keyword">if</span> (tmpbyte == <span class="literal">null</span>)</span><br><span class="line">          <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> Count = Convert.ToInt32(SepPara[<span class="number">1</span>]);</span><br><span class="line">      <span class="keyword">if</span> (Count &gt; <span class="number">4</span>) Count = <span class="number">4</span>;</span><br><span class="line">      <span class="keyword">if</span> (Count &lt; <span class="number">1</span>) Count = <span class="number">1</span>;</span><br><span class="line">      Byte[] TmpByte = <span class="keyword">new</span> <span class="keyword">byte</span>[Count];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Count; i++)</span><br><span class="line">      &#123;</span><br><span class="line">          TmpByte[i] = (<span class="keyword">byte</span>)((iValue &gt;&gt; ((Count - i - <span class="number">1</span>) * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      tmpbyte.Bytes = TmpByte;</span><br><span class="line">      <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> (Exception e)</span><br><span class="line">  &#123;</span><br><span class="line">      xErrorOutException(e);</span><br><span class="line">      <span class="keyword">return</span> xState.xError;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Byte"><a href="#Byte" class="headerlink" title="Byte"></a>Byte</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">byte</span>[] <span class="title">xHexToBytes</span>(<span class="params"><span class="keyword">string</span> InStr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!InStr.StartsWith(<span class="string">"0x"</span>))</span><br><span class="line">        <span class="keyword">return</span> System.Text.Encoding.GetEncoding(cPage).GetBytes(InStr);</span><br><span class="line">    InStr = InStr.Substring(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">string</span> NSpaceStr = InStr.Replace(<span class="string">" "</span>, <span class="keyword">string</span>.Empty);</span><br><span class="line"></span><br><span class="line">    List&lt;<span class="keyword">byte</span>&gt; ReByte = <span class="keyword">new</span> List&lt;<span class="keyword">byte</span>&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NSpaceStr.Length / <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ReByte.Add(Convert.ToByte(NSpaceStr.Substring(i * <span class="number">2</span>, <span class="number">2</span>), <span class="number">16</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ReByte.ToArray();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">byte</span>[] <span class="title">StringAnaToBytes</span>(<span class="params"><span class="keyword">string</span> StrAna</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List&lt;<span class="keyword">byte</span>&gt; ReByte = <span class="keyword">new</span> List&lt;<span class="keyword">byte</span>&gt;();</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span>[] strs = StrAna.Split(<span class="string">'&#123;'</span>, <span class="string">'&#125;'</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; strs.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">                ReByte.AddRange(System.Text.Encoding.GetEncoding(cPage).GetBytes(strs[i]));</span><br><span class="line">            <span class="keyword">else</span> ReByte.AddRange(xHexToBytes(strs[i]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> xError = <span class="keyword">string</span>.Format(<span class="string">"字符串转换到BYTE失败Error:&#123;0&#125; 字串：&#123;1&#125;"</span>, e.Message, StrAna);</span><br><span class="line">        xErrorOut(MethodInfo.GetCurrentMethod().Name, xError);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ReByte.ToArray();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">PackBytes</span>(<span class="params"><span class="keyword">byte</span>[] ArrByte</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">string</span> ReStr = <span class="string">"&#123;0x"</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">byte</span> b <span class="keyword">in</span> ArrByte)</span><br><span class="line">    &#123;</span><br><span class="line">        ReStr += b.ToString(<span class="string">"X2"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ReStr += <span class="string">"&#125;"</span>;</span><br><span class="line">    <span class="keyword">return</span> ReStr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> cPage = Encoding.Default.CodePage;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">byte</span>[] <span class="title">StringToBytes</span>(<span class="params"><span class="keyword">string</span> InValue</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">string</span> str = XmlFO.StringAnalysis(InValue);</span><br><span class="line">    <span class="keyword">return</span> StringAnaToBytes(str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">BytesToString</span>(<span class="params"><span class="keyword">byte</span>[] InBytes</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> System.Text.Encoding.GetEncoding(cPage).GetString(Bytes);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">ToString</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        XmlFO.ListObject[sPara].xValue = BytesToString(Bytes);</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">ToInt</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        xInt TmpInt = (xInt)XmlFO.GetCheckSpecTypeObject(sPara, <span class="keyword">typeof</span>(xInt));</span><br><span class="line">        <span class="keyword">if</span> (TmpInt == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> Count = Bytes.Length;</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Count &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp = (<span class="keyword">sbyte</span>)Bytes[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span> (Count &gt; <span class="number">4</span>) Count = <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">                NumTmp += Bytes[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        TmpInt.iValue = NumTmp;</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">ToInt_MinusSign</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        xInt TmpInt = (xInt)XmlFO.GetCheckSpecTypeObject(sPara, <span class="keyword">typeof</span>(xInt));</span><br><span class="line">        <span class="keyword">if</span> (TmpInt == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> Count = Bytes.Length;</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Count &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp = (Bytes[<span class="number">0</span>] &amp; <span class="number">0x7F</span>);</span><br><span class="line">            <span class="keyword">if</span> (Count &gt; <span class="number">4</span>) Count = <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">                NumTmp += Bytes[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (Bytes[<span class="number">0</span>] &gt; <span class="number">0x7F</span>)</span><br><span class="line">                NumTmp = -NumTmp;</span><br><span class="line">        &#125;</span><br><span class="line">        TmpInt.iValue = NumTmp;</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">ToInt_Uint</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        xInt TmpInt = (xInt)XmlFO.GetCheckSpecTypeObject(sPara, <span class="keyword">typeof</span>(xInt));</span><br><span class="line">        <span class="keyword">if</span> (TmpInt == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> Count = Bytes.Length;</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Count &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp = Bytes[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span> (Count &gt; <span class="number">4</span>) Count = <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">                NumTmp += Bytes[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        TmpInt.iValue = NumTmp;</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">CopyFrom</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        xBytes TmpByte = (xBytes)XmlFO.GetCheckSpecTypeObject(sPara, <span class="keyword">typeof</span>(xBytes));</span><br><span class="line">        <span class="keyword">if</span> (TmpByte == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (TmpByte.cPage != cPage)</span><br><span class="line">            Bytes = Encoding.Convert(Encoding.GetEncoding(TmpByte.cPage), Encoding.GetEncoding(cPage), TmpByte.Bytes);</span><br><span class="line">        <span class="keyword">else</span> Bytes = TmpByte.Bytes.ToArray();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">SubByteFrom</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span>[] SepPara;</span><br><span class="line">        <span class="keyword">if</span> (!XmlFO.SepParams(sPara, <span class="number">3</span>, <span class="keyword">out</span> SepPara))</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        List&lt;Byte&gt; tmpByte = <span class="keyword">new</span> List&lt;<span class="keyword">byte</span>&gt;();</span><br><span class="line">        tmpByte.AddRange(StringToBytes(SepPara[<span class="number">0</span>]));</span><br><span class="line">        <span class="keyword">if</span> (tmpByte.Count &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> start = Convert.ToInt32(SepPara[<span class="number">1</span>]);<span class="comment">//start 0</span></span><br><span class="line">            <span class="keyword">int</span> leng = Convert.ToInt32(SepPara[<span class="number">2</span>]);</span><br><span class="line">            <span class="keyword">if</span> (start &gt;= tmpByte.Count)</span><br><span class="line">                start = tmpByte.Count - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> ((start + leng) &gt; tmpByte.Count)</span><br><span class="line">                leng = tmpByte.Count - start;</span><br><span class="line">            Bytes = tmpByte.GetRange(start, leng).ToArray();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> Bytes = tmpByte.ToArray();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">IsEqual</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span>[] SepPara;</span><br><span class="line">        <span class="keyword">if</span> (!XmlFO.SepParams(sPara, <span class="number">2</span>, <span class="keyword">out</span> SepPara))</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] tmpByte = StringToBytes(SepPara[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">int</span> start = Convert.ToInt32(SepPara[<span class="number">1</span>]);<span class="comment">//start 0</span></span><br><span class="line">        <span class="keyword">if</span> ((start + tmpByte.Length) &gt; Bytes.Length)</span><br><span class="line">            <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tmpByte.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (tmpByte[i] != Bytes[start + i])</span><br><span class="line">                <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">CheckBit</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span>[] SepPara;</span><br><span class="line">        <span class="keyword">if</span> (!XmlFO.SepParams(sPara, <span class="number">2</span>, <span class="keyword">out</span> SepPara))</span><br><span class="line">            <span class="keyword">return</span> xState.xError;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> byteNo = Convert.ToInt32(SepPara[<span class="number">0</span>]);<span class="comment">//start 0</span></span><br><span class="line">        <span class="keyword">int</span> bitNo = Convert.ToInt32(SepPara[<span class="number">1</span>]);<span class="comment">//start 7---0</span></span><br><span class="line">        <span class="keyword">if</span> (bitNo &gt; <span class="number">7</span>) bitNo = <span class="number">7</span>;</span><br><span class="line">        <span class="keyword">if</span> (bitNo &lt; <span class="number">0</span>) bitNo = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> Num = (Bytes[byteNo] &lt;&lt; (<span class="number">7</span> - bitNo)) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        Num = (Num &gt;&gt; <span class="number">7</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        <span class="keyword">if</span> (Num == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xError;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">UseDefaultCodePage</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cPage = Encoding.Default.CodePage;</span><br><span class="line">    <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">UseUTF8CodePage</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cPage = Encoding.UTF8.CodePage;</span><br><span class="line">    <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">UseUnicodeCodePage</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cPage = Encoding.Unicode.CodePage;</span><br><span class="line">    <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转换</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_String_ASCII</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, Bytes.Length);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = Encoding.ASCII.GetString(Bytes, Sep.iStart, Sep.iCount);</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_String_BCD</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, Bytes.Length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">string</span> strTmp = <span class="keyword">string</span>.Empty;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = Sep.iStart; (i &lt; Bytes.Length) &amp;&amp; (i &lt; (Sep.iStart + Sep.iCount)); i++)</span><br><span class="line">            strTmp += Bytes[i].ToString(<span class="string">"X2"</span>);</span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = strTmp;</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_Double</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = Sep.iStart; (i &lt; Bytes.Length) &amp;&amp; (i &lt; (Sep.iStart + Sep.iCount)); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            NumTmp += Bytes[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> DoubTmp = (NumTmp * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = DoubTmp.ToString();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_Double_Bit</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">double</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Sep.iCount &gt; <span class="number">4</span>)</span><br><span class="line">            NumTmp = BitConverter.ToDouble(Bytes, Sep.iStart);</span><br><span class="line">        <span class="keyword">else</span> NumTmp = BitConverter.ToSingle(Bytes, Sep.iStart);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> DoubTmp = (NumTmp * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = DoubTmp.ToString();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_Double_Minus</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> NumTmp = (Bytes[<span class="number">0</span>] &amp; <span class="number">0x7F</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = (Sep.iStart + <span class="number">1</span>); (i &lt; Bytes.Length) &amp;&amp; (i &lt; (Sep.iStart + Sep.iCount)); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            NumTmp += Bytes[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Bytes[<span class="number">0</span>] &gt; <span class="number">0x7F</span>)</span><br><span class="line">            NumTmp = -NumTmp;</span><br><span class="line">        <span class="keyword">double</span> DoubTmp = (NumTmp * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = DoubTmp.ToString();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_Int</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = Sep.iStart; (i &lt; Bytes.Length) &amp;&amp; (i &lt; (Sep.iStart + Sep.iCount)); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            NumTmp &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            NumTmp += Bytes[i];</span><br><span class="line">        &#125;</span><br><span class="line">        NumTmp = (<span class="keyword">int</span>)(NumTmp * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = NumTmp.ToString();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Convert_Int_Bit</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> NumTmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Sep.iCount &gt; <span class="number">4</span>)</span><br><span class="line">            NumTmp = (<span class="keyword">int</span>)BitConverter.ToInt64(Bytes, Sep.iStart);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Sep.iCount &gt; <span class="number">2</span>)</span><br><span class="line">            NumTmp = (<span class="keyword">int</span>)BitConverter.ToInt32(Bytes, Sep.iStart);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Sep.iCount &gt; <span class="number">1</span>)</span><br><span class="line">            NumTmp = (<span class="keyword">int</span>)BitConverter.ToInt16(Bytes, Sep.iStart);</span><br><span class="line">        <span class="keyword">else</span> NumTmp = Bytes[Sep.iStart];</span><br><span class="line"></span><br><span class="line">        NumTmp = (<span class="keyword">int</span>)(NumTmp * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        XmlFO.ListObject[Sep.sName].xValue = NumTmp.ToString();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> xState <span class="title">Append_Double</span>(<span class="params"><span class="keyword">string</span> sPara</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        cSepParams Sep = <span class="keyword">new</span> cSepParams(sPara, <span class="number">4</span>);</span><br><span class="line">        <span class="keyword">int</span> iTmp = (<span class="keyword">int</span>)(Convert.ToDouble(XmlFO.ListObject[Sep.sName].xValue) * Sep.dRadio + Sep.dOffset);</span><br><span class="line"></span><br><span class="line">        List&lt;Byte&gt; ListTmp = <span class="keyword">new</span> List&lt;<span class="keyword">byte</span>&gt;();</span><br><span class="line">        ListTmp.AddRange(Bytes);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Sep.iCount; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ListTmp.Add((<span class="keyword">byte</span>)((iTmp &gt;&gt; ((Sep.iCount - i - <span class="number">1</span>) * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Bytes = ListTmp.ToArray();</span><br><span class="line">        <span class="keyword">return</span> xState.xTrue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        xErrorOutException(e);</span><br><span class="line">        <span class="keyword">return</span> xState.xFalse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      常用进制、格式转换方法
    
    </summary>
    
      <category term="数据转换" scheme="http://silencejql.coding.me/categories/%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2/"/>
    
    
      <category term="C#" scheme="http://silencejql.coding.me/tags/C/"/>
    
      <category term="IEEE" scheme="http://silencejql.coding.me/tags/IEEE/"/>
    
      <category term="Hex" scheme="http://silencejql.coding.me/tags/Hex/"/>
    
      <category term="Double" scheme="http://silencejql.coding.me/tags/Double/"/>
    
      <category term="Byte" scheme="http://silencejql.coding.me/tags/Byte/"/>
    
      <category term="int" scheme="http://silencejql.coding.me/tags/int/"/>
    
      <category term="String" scheme="http://silencejql.coding.me/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>RGB颜色</title>
    <link href="http://silencejql.coding.me/RGB%E9%A2%9C%E8%89%B2.html"/>
    <id>http://silencejql.coding.me/RGB颜色.html</id>
    <published>2019-07-05T06:20:25.000Z</published>
    <updated>2019-08-21T08:07:23.940Z</updated>
    
    <content type="html"><![CDATA[<p><img src="RGB%E9%A2%9C%E8%89%B2/RGB1.png" alt></p><p><img src="RGB%E9%A2%9C%E8%89%B2/RGB2.png" alt></p><p><img src="RGB%E9%A2%9C%E8%89%B2/RGB3.png" alt></p>]]></content>
    
    <summary type="html">
    
      RGB颜色对照表
    
    </summary>
    
      <category term="RGB" scheme="http://silencejql.coding.me/categories/RGB/"/>
    
    
      <category term="RGB颜色表" scheme="http://silencejql.coding.me/tags/RGB%E9%A2%9C%E8%89%B2%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>css常用属性</title>
    <link href="http://silencejql.coding.me/css%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7.html"/>
    <id>http://silencejql.coding.me/css常用属性.html</id>
    <published>2019-07-05T05:54:12.000Z</published>
    <updated>2019-08-21T08:06:34.961Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文本设置"><a href="#文本设置" class="headerlink" title="文本设置"></a>文本设置</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">font: italic bold 36px 宋体; //顺序不可变</span><br><span class="line"><span class="selector-tag">font-wight</span>: 100<span class="selector-tag">-900</span>、<span class="selector-tag">bold</span>（加粗）</span><br><span class="line">font-size: 10px; // 12px(12像素)、50%、larger、small</span><br><span class="line"><span class="selector-tag">font-style</span>: <span class="selector-tag">initial</span>（初始）、<span class="selector-tag">italic</span>（斜体字）、<span class="selector-tag">normal</span>（默认）、<span class="selector-tag">oblique</span>（倾斜）</span><br><span class="line">font-family: "微软雅黑" // 宋体</span><br><span class="line">text-align: center; //横向排列  left、right 和 center</span><br><span class="line">line-height: 200px; //文本行高 通俗的讲，文字高度加上文字上下的空白区域的高度 50%:基于字体大小的百分比</span><br><span class="line">vertical-align:-4px; //设置元素内容的垂直对齐方式 ,只对行内元素有效，对块级元素无效</span><br><span class="line">text-indent: 150px; //首行缩进</span><br><span class="line">letter-spacing: 10px; //字母间隙</span><br><span class="line">word-spacing: 20px; //单词间隙</span><br><span class="line">text-transform: capitalize; //单词大写</span><br></pre></td></tr></table></figure><h2 id="背景属性"><a href="#背景属性" class="headerlink" title="背景属性"></a>背景属性</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">background-color: cornflowerblue; //背景颜色</span><br><span class="line">background-image: url('1.jpg'); //背景图片</span><br><span class="line">background-repeat: no-repeat/repeat-x/repeat=t; //(默认铺满，不重复，x重复，y重复)</span><br><span class="line">background-size:600px 250px //大小</span><br><span class="line">background-position: right top（20px 20px）;//(横向：left center right)(纵向：top center bottom) //简写：</span><br><span class="line">&lt;body style="background: 20px 20px no-repeat #ff4 url('1.jpg')"&gt;</span><br><span class="line">&lt;div style="width: 300px;height: 300px;background: 20px 20px no-repeat #ff4 url('1.jpg')"&gt;</span><br></pre></td></tr></table></figure><h3 id="颜色属性"><a href="#颜色属性" class="headerlink" title="颜色属性"></a>颜色属性</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style="color:blueviolet"&gt;ppppp&lt;/div&gt; //颜色少</span><br><span class="line">&lt;div style="color:#ffee33"&gt;ppppp&lt;/div&gt;  //百度颜色代码可以查询更多</span><br><span class="line">&lt;div style="color:rgb(255,0,0)"&gt;ppppp&lt;/div&gt; //三原色 红绿蓝256级</span><br><span class="line">&lt;div style="color:rgba(255,0,0,0.5)"&gt;ppppp&lt;/div&gt; //比上一个 加了一个透明度</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      常用的css属性介绍
    
    </summary>
    
      <category term="css" scheme="http://silencejql.coding.me/categories/css/"/>
    
    
      <category term="css属性" scheme="http://silencejql.coding.me/tags/css%E5%B1%9E%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>泛型的特点</title>
    <link href="http://silencejql.coding.me/%E6%B3%9B%E5%9E%8B%E7%9A%84%E7%89%B9%E7%82%B9.html"/>
    <id>http://silencejql.coding.me/泛型的特点.html</id>
    <published>2019-07-05T05:36:31.000Z</published>
    <updated>2019-08-21T08:10:52.840Z</updated>
    
    <content type="html"><![CDATA[<h4 id="泛型的主要特性"><a href="#泛型的主要特性" class="headerlink" title="泛型的主要特性"></a>泛型的主要特性</h4><p>泛型类型的一些重要特征使它们相比传统的非泛型类型具有如下的显著特征：</p><blockquote><p>类型安全<br>性能<br>二进制代码复用</p></blockquote><h5 id="类型安全"><a href="#类型安全" class="headerlink" title="类型安全"></a>类型安全</h5><p>泛型最重要的特征之一是类型安全性。对于非泛型ArrayList类，如果使用对象类型，则可以向集合中添加任何类型，这些类型有时会导致严重的问题。下面的示例显示向ArrayList类型的集合添加一个整数、字符串和对象；</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ArrayList obj = <span class="keyword">new</span> ArrayList();  </span><br><span class="line">obj.Add(<span class="number">50</span>);  </span><br><span class="line">obj.Add(<span class="string">"Dog"</span>);  </span><br><span class="line">obj.Add(<span class="keyword">new</span> TestClass());</span><br></pre></td></tr></table></figure><p>现在，如果使用整数对象来使用foreach语句进行遍历的话，当编译器接受到代码，但是因为集合中的所有元素都不是整数，所以会导致运行时异常；</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(<span class="keyword">int</span> i <span class="keyword">in</span> obj)  </span><br><span class="line">&#123;  </span><br><span class="line">    Console.WriteLine(i);    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编程的经验法则是应该尽早检测到错误。对于泛型类Test，泛型类型T定义允许哪些类型。通过使用Test的定义，只能向集合添加整型类型的数据。这时候当Add()方法具有以下无效参数的时候编译器将不编译代码；</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Test&lt;<span class="keyword">int</span>&gt; obj = <span class="keyword">new</span> Test&lt;<span class="keyword">int</span>&gt;();  </span><br><span class="line">obj.Add(<span class="number">50</span>);  </span><br><span class="line">obj.Add(<span class="string">"Dog"</span>);            <span class="comment">//编译错误</span></span><br><span class="line">obj.Add(<span class="keyword">new</span> TestClass());  <span class="comment">//编译错误</span></span><br></pre></td></tr></table></figure><h5 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h5><p>在下面的示例中，ArrayList类存储对象，并且定义了Add()方法来存储一些整型参数。因此，整数类型被装箱。当使用foreach语句读取ArrayList中的值时，将发生拆箱。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ArrayList  obj = <span class="keyword">new</span> ArrayList();   </span><br><span class="line">obj.Add(<span class="number">50</span>);    <span class="comment">//装箱- 值类型转换成引用类型</span></span><br><span class="line"><span class="keyword">int</span> x= (<span class="keyword">int</span>)obj[<span class="number">0</span>]; <span class="comment">//拆箱</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">int</span> i <span class="keyword">in</span> obj)  </span><br><span class="line">&#123;  </span><br><span class="line">   Console.WriteLine(i);   <span class="comment">// 拆箱</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：泛型比其他集合（如ArrayList）更快。</p><p>代替使用对象类型，TestClass类的泛型类型被定义为int，因此在从编译器动态生成的类中将使用int类型。所以将不会发生装箱和拆箱，如下所示；</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TestClass&lt;<span class="keyword">int</span>&gt; obj = <span class="keyword">new</span> TestClass&lt;<span class="keyword">int</span>&gt;();  </span><br><span class="line">obj.Add(<span class="number">50</span>);    <span class="comment">//没有装箱</span></span><br><span class="line"><span class="keyword">int</span> x= obj[<span class="number">0</span>]; <span class="comment">// 没有拆箱</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">int</span> i <span class="keyword">in</span> obj)  </span><br><span class="line">&#123;  </span><br><span class="line">   Console.WriteLine(i);   <span class="comment">//没有拆箱</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="二进制代码复用"><a href="#二进制代码复用" class="headerlink" title="二进制代码复用"></a>二进制代码复用</h5><p>泛型类型提供了一种源代码保护机制。泛型类可以定义一次，并且可以使用许多不同类型来进行实例化。泛型可以在一种CLR支持的语言中定义，并可以被另一种.NET语言使用。以下TestClass 使用int和string类型进行实例化：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TestClass&lt;<span class="keyword">int</span>&gt; obj = <span class="keyword">new</span> TestClass&lt;<span class="keyword">int</span>&gt;();  </span><br><span class="line">obj.Add(<span class="number">50</span>);  </span><br><span class="line"></span><br><span class="line">TestClass&lt;<span class="keyword">string</span>&gt; obj1 = <span class="keyword">new</span> TestClass&lt;<span class="keyword">string</span>&gt;();  </span><br><span class="line">Obj1.Add(<span class="string">"hello"</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      泛型特性介绍
    
    </summary>
    
      <category term="C#" scheme="http://silencejql.coding.me/categories/C/"/>
    
    
      <category term="泛型" scheme="http://silencejql.coding.me/tags/%E6%B3%9B%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>C# Static</title>
    <link href="http://silencejql.coding.me/C#%20Static.html"/>
    <id>http://silencejql.coding.me/C# Static.html</id>
    <published>2019-07-05T02:59:00.000Z</published>
    <updated>2019-08-21T08:05:50.109Z</updated>
    
    <content type="html"><![CDATA[<p>静态方法只能访问类的静态成员，不能访问类的非静态成员；<br>非静态方法可以访问类的静态成员，也可以访问类的非静态成员；<br>静态方法不能使用实例来调用，只能使用类名来调用。</p><a id="more"></a><h4 id="static"><a href="#static" class="headerlink" title="static"></a>static</h4><h5 id="静态全局变量"><a href="#静态全局变量" class="headerlink" title="静态全局变量"></a>静态全局变量</h5><blockquote><p>特点：</p><blockquote><p>1、该变量在全局数据区分配内存。<br>2、初始化：如果不显式初始化，那么将被隐式初始化为0。</p></blockquote></blockquote><h5 id="静态局部变量"><a href="#静态局部变量" class="headerlink" title="静态局部变量"></a>静态局部变量</h5><blockquote><p>特点：</p><blockquote><p>1、该变量在全局数据区分配内存。<br>2、初始化：如果不显式初始化，那么将被隐式初始化为0。<br>3、<strong>它始终驻留在全局数据区，直到程序运行结束。但其作用域为局部作用域，当定义它的函数或语句块结束时，其作用域随之结束。</strong></p></blockquote></blockquote><h5 id="静态数据成员"><a href="#静态数据成员" class="headerlink" title="静态数据成员"></a>静态数据成员</h5><blockquote><p>内存分配：在程序的全局数据区分配。<br>初始化和定义：</p><blockquote><p>1、静态数据成员定义时要分配空间，所以不能在类声明中定义。<br>2、为了避免在多个使用该类的源文件中，对其重复定义，所以，不能在类的头文件中定义。<br>3、静态数据成员因为程序一开始运行就必需存在，所以其初始化的最佳位置在类的内部实现。</p></blockquote></blockquote><blockquote><p>特点</p><blockquote><p>对相于 public,protected,private 关键字的影响它和普通数据成员一样，因为其空间在全局数据区分配，属于所有本类的对象共享，所以，它不属于特定的类对象，在没产生类对象时其作用域就可见，即在没有产生类的实例时，我们就可以操作它。</p></blockquote></blockquote><blockquote><p>访问形式</p><blockquote><p>类对象名.静态数据成员名</p></blockquote></blockquote><p>静态数据成员，主要用在类的所有实例都拥有的属性上。比如，对于一个存款类，帐号相对于每个实例都是不同的，但每个实例的利息是相同的。所以，应该把利息设为存款类的静态数据成员。这有两个好处，第一，不管定义多少个存款类对象，利息数据成员都共享分配在全局区的内存，所以节省存贮空间。第二，一旦利息需要改变时，只要改变一次，则所有存款类对象的利息全改变过来了，因为它们实际上是共用一个东西。</p><h5 id="静态成员函数"><a href="#静态成员函数" class="headerlink" title="静态成员函数"></a>静态成员函数</h5><blockquote><p>特点：</p><blockquote><p>1、静态成员函数与类相联系，不与类的对象相联系。<br>2、静态成员函数不能访问非静态数据成员。原因很简单，非静态数据成员属于特定的类实例。</p></blockquote></blockquote><blockquote><p>作用：</p><blockquote><p>主要用于对静态数据成员的操作。</p></blockquote></blockquote><blockquote><p>调用形式：</p><blockquote><p>类对象名.静态成员函数名（）</p></blockquote></blockquote><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><p>静态方法只能访问类的静态成员，不能访问类的非静态成员；<br>非静态方法可以访问类的静态成员，也可以访问类的非静态成员；<br>静态方法不能使用实例来调用，只能使用类名来调用。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> i = getNum();</span><br><span class="line"><span class="keyword">int</span> j = getNum();</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getNum</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">"i=&#123;0&#125;"</span>,i);</span><br><span class="line">    Console.WriteLine(<span class="string">"j=&#123;0&#125;"</span>, <span class="keyword">new</span> class1().j);</span><br><span class="line">    Console.Read();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析：<code>Console.WriteLine(&quot;i={0}&quot;,i);</code>这里<code>i</code>是<code>static</code>变量，而且类<code>class1</code>是第一次被引用，要先为<code>class1</code>里面所有的<code>static</code>变量分配内存。尽管现在有超线程技术，但是指令在逻辑还是一条一条的按顺序执行的，所以先为<code>static int i</code>分配内存，并且在该内存中保持<code>int</code>的缺省值<code>0</code>，接着再为<code>static</code> <code>int num</code> 变量分配内存，值当然也为<code>0</code>。</p><p>然后执行第二步，为变量赋值：先为<code>static int i</code>变量赋值，<code>i＝getNum()</code>，看getNum里面的代码，就是<code>return num</code>，这个时候<code>num</code>的值是<code>0</code>，于是<code>i</code>就为<code>0</code>了。然后对变量<code>num</code>赋值，<code>num＝1；</code>这行代码执行后，<code>num</code>就为<code>1</code>了。</p><h5 id="static的优点是什么？为什么要使用static-变量或函数？？"><a href="#static的优点是什么？为什么要使用static-变量或函数？？" class="headerlink" title="static的优点是什么？为什么要使用static 变量或函数？？"></a>static的优点是什么？为什么要使用static 变量或函数？？</h5><p>有一些频繁使用的东西，如果你每次使用都重新<code>new</code>一下，那么这个开销可能会很高，如果使用<code>static</code>，一直放在内存中，那么想用就直接用，而不需要重新<code>new</code>一块空间初始化数据。那么<code>static</code>就是为了实现一个系统的缓存作用的，其生命周期直到应用程序退出结束。</p><p>静态成员包括静态字段和静态属性，静态成员和类相关联，不依赖于对象而存在，只能由类访问，而不能由对象访问；</p><p>静态成员属于类所有，无认创建多少实例对象，静态成员在内存中只有一份；实例成员属于类的实例所有，每创建一个实例对象，实例成员都会在内存中分配一块内存区域。<br>所以静态成员一般用于存放共享的数据段，如数据库连接字符串等。</p><p>一个类如果只包含静态成员和静态方法，则该类可以定义为静态类，给类加上<code>static</code>修饰符；</p><h5 id="静态方法和非静态方法："><a href="#静态方法和非静态方法：" class="headerlink" title="静态方法和非静态方法："></a>静态方法和非静态方法：</h5><p>一、性能上：静态方法和实例方法差别不大。所有方法，不管是静态方法还是实例方法，都是在JIT加载类时分配内存，不同的是静态方法以类名引用，而实例方法对对象实例引用。创建实例时，不会再为类的方法分配内存，所有的实例对象共用一个类的方法代码。因此静态方法和实例方法的调用，在性能上的差别微乎其微。</p><p>二、静态方法只能由类访问；实例方法只能由对象访问。</p><blockquote><p>优点：</p><blockquote><p>1、静态变量在类载入时，就装入内存<br>2、使用时不用 New 就意味的不必 创建类中 所有对象，就可以调用 某个方法</p></blockquote></blockquote><blockquote><p>缺点：</p><blockquote><p>垃圾回收机制 不能 回收 静态变量，静态类变量 会常驻内存</p></blockquote></blockquote><h5 id="c-中静态类的优缺点"><a href="#c-中静态类的优缺点" class="headerlink" title="c#中静态类的优缺点"></a>c#中静态类的优缺点</h5><blockquote><p>缺点：</p><blockquote><p>1、整个类型在程序运行期间只加载一次。 这样是对于那些经常使用的类型来说的，那就不用每次使用前都先加载。效率高些。但是对那些不常用的类型来说。<br>2、如果是静态类型，那就要一直占用相当的内存；一直到程序停止。或者应用程序域被卸载。所以应该只对那些常用的类型定义成静态类型。</p></blockquote></blockquote><blockquote><p>优点：</p><blockquote><p>1、它们仅包含静态成员。<br>2、它们不能被实例化。<br>3、它们是密封的。<br>4、它们不能包含实例构造函数（C# 编程指南）。</p></blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;静态方法只能访问类的静态成员，不能访问类的非静态成员；&lt;br&gt;非静态方法可以访问类的静态成员，也可以访问类的非静态成员；&lt;br&gt;静态方法不能使用实例来调用，只能使用类名来调用。&lt;/p&gt;
    
    </summary>
    
      <category term="C#" scheme="http://silencejql.coding.me/categories/C/"/>
    
    
      <category term="static" scheme="http://silencejql.coding.me/tags/static/"/>
    
  </entry>
  
  <entry>
    <title>C# 常识</title>
    <link href="http://silencejql.coding.me/C#%20%E5%B8%B8%E8%AF%86.html"/>
    <id>http://silencejql.coding.me/C# 常识.html</id>
    <published>2019-07-05T02:59:00.000Z</published>
    <updated>2019-08-21T08:06:20.834Z</updated>
    
    <content type="html"><![CDATA[<p>记录写bug过程中遇到的一些疑问</p><a id="more"></a><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>值类型存储在堆栈上，引用类型存储在堆上。<br>C#类为引用类型，结构为值类型。<br>从值类型转化为引用类型称为装箱，如果方法需要把一个对象作为参数，而且传送一个值类型，装箱操作会自动进行；装箱的值类型可以使用拆箱操作转换为值类型，在拆箱时，<strong>需要使用类型转换运算符</strong>。</p><h2 id="装箱和拆箱"><a href="#装箱和拆箱" class="headerlink" title="装箱和拆箱"></a>装箱和拆箱</h2><p>装箱是一种通过将变量存储到System.Object中来显式地将值类型转换为引用类型的机制。当您装入值时，CLR会将新对象分配到堆中，并将值类型的值复制到该实例中。例如：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">20</span>;  </span><br><span class="line"><span class="keyword">object</span> b = a; <span class="comment">//装箱</span></span><br></pre></td></tr></table></figure><p>相反的操作是拆箱，它是将引用类型转换回值类型的过程。此过程验证接收数据类型是否与装箱类型一致;<br><code>int c = (int)b; // 拆箱</code></p><h2 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h2><blockquote><p>特征：</p><blockquote><p>类型安全<br>性能<br>二进制代码复用</p></blockquote></blockquote><p>详见： <a href="/泛型的特点.html" title="泛型的特点">泛型的特点</a></p><h3 id="为什么不用object代替泛型"><a href="#为什么不用object代替泛型" class="headerlink" title="为什么不用object代替泛型"></a>为什么不用object代替泛型</h3><p>由于Object为所有类型的基类，所以可以处理任何数据类型的数据，但是其中存在这拆箱和装箱，如果数据太多会影响到程序的性能。<br>在使用泛型的时候程序会在编译阶段根据我们提供的类型生成相应的二进制代码，无须进行装箱和拆箱操作。</p><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><h3 id="为什么要用接口"><a href="#为什么要用接口" class="headerlink" title="为什么要用接口"></a>为什么要用接口</h3><p>接口一般由上层人员发起，下层人员实现。<br>写接口并不是为了扩展，而是为了扩展以后的模块仍然跟项目模块保持高度一致，为了扩展后的规范化。</p><h3 id="实例化接口对象"><a href="#实例化接口对象" class="headerlink" title="实例化接口对象"></a>实例化接口对象</h3><h4 id="接口回调"><a href="#接口回调" class="headerlink" title="接口回调"></a>接口回调</h4><p>接口不仅可以声明对象，而且可以把对象实例化，还可以当做参数被传入。<br>即继承中的向上转型，父类 FL=new 子类()，只不过这里的父类就是interface接口。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title">Itemp</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="function"><span class="keyword">double</span> <span class="title">plus</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">num</span> : <span class="title">Itemp</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">double</span> aa, bb;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">num</span>(<span class="params"><span class="keyword">double</span> a, <span class="keyword">double</span> b</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">    <span class="keyword">this</span>.bb = b;</span><br><span class="line">    <span class="keyword">this</span>.aa = a;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">plus</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">    <span class="keyword">return</span> (aa + bb);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Itemp tm = <span class="literal">null</span>;<span class="comment">//声明接口对象引用</span></span><br><span class="line">  tm = <span class="keyword">new</span> num(<span class="number">1</span>, <span class="number">2</span>);<span class="comment">//接口回调(向上转型)</span></span><br><span class="line">  Console.WriteLine(tm.plus());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类型参数约束"><a href="#类型参数约束" class="headerlink" title="类型参数约束"></a>类型参数约束</h2><p>&emsp;&emsp;在定义泛型类时，可以对客户端代码能够在实例化类时用于类型参数的类型种类施加限制。如果客户端代码尝试使用某个约束所不允许的类型来实例化类，则会产生编译时错误。这些限制称为约束。<br>类型参数约束.NET支持的类型参数约束有以下五种：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">where</span> T : <span class="keyword">struct</span>  类型参数必须是值类型；可以指定除 Nullable 以外的任何值类型</span><br><span class="line">where T : class   类型参数必须是引用类型；这一点也适用于任何类、接口、委托或数组类型</span><br><span class="line"><span class="keyword">where</span> T : <span class="keyword">new</span>()   类型参数必须具有无参数的公共构造函数。当与其他约束一起使用时，<span class="keyword">new</span>() 约束必须最后指定</span><br><span class="line"><span class="keyword">where</span> T : NameOfBaseClass   类型参数必须是指定的基类或派生自指定的基类</span><br><span class="line"><span class="keyword">where</span> T : NameOfInterface   类型参数必须是指定的接口或实现指定的接口。可以指定多个接口约束。约束接口也可以是泛型的</span><br><span class="line"><span class="keyword">where</span> T : U    为 T 提供的类型参数必须是为 U 提供的参数或派生自为 U 提供的参数</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录写bug过程中遇到的一些疑问&lt;/p&gt;
    
    </summary>
    
      <category term="C#" scheme="http://silencejql.coding.me/categories/C/"/>
    
    
      <category term="C#" scheme="http://silencejql.coding.me/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客部署到Coding和github</title>
    <link href="http://silencejql.coding.me/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0Coding%E5%92%8Cgithub.html"/>
    <id>http://silencejql.coding.me/Hexo博客部署到Coding和github.html</id>
    <published>2019-07-04T06:48:17.000Z</published>
    <updated>2019-08-21T08:07:00.756Z</updated>
    
    <content type="html"><![CDATA[<h3 id="部署到Github和Coding"><a href="#部署到Github和Coding" class="headerlink" title="部署到Github和Coding"></a>部署到Github和Coding</h3><h4 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h4><blockquote><p>Github：<br>新建Repository：name.github.io</p></blockquote><blockquote><p>Coding：<br>新建Repository：name.coding.me</p></blockquote><h4 id="添加SSH-key"><a href="#添加SSH-key" class="headerlink" title="添加SSH key"></a>添加SSH key</h4><p>若无SSHkey</p><blockquote><p>ssh-keygen -t rsa -C “your e-mail”<br>Enter passphrase (empty for no passphrase):&lt;输入加密串&gt;<br>Enter same passphrase again:&lt;再次输入加密串&gt;</p></blockquote><p>打开生成的id_rsa.pub文件并复制其中的内容添加到Github或Coding项目中然后在git中执行</p><blockquote><p>Github：<br>    ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a></p></blockquote><blockquote><p>Coding：<br>    ssh -T <a href="mailto:git@git.coding.net" target="_blank" rel="noopener">git@git.coding.net</a> //coding<br>    ssh -T <a href="mailto:git@git.dev.tencent.com" target="_blank" rel="noopener">git@git.dev.tencent.com</a> //腾讯云</p></blockquote><p>添加到腾讯云后需要开启Pages服务才可通过name.coding.me登录</p><h4 id="更改博客配置文件"><a href="#更改博客配置文件" class="headerlink" title="更改博客配置文件"></a>更改博客配置文件</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository:</span><br><span class="line">    github: git@github.com:silencejql/silencejql.github.io.git</span><br><span class="line">    coding: git@git.dev.tencent.com:silencejql/silencejql.coding.me.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>不同格式相应作出调整即可</p><h4 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h4><p><a href="http://name.coding.me" target="_blank" rel="noopener">http://name.coding.me</a> 在google chrome中打开可能会默认https，修复方式为:</p><blockquote><p>地址栏中输入 chrome://net-internals/#hsts<br>在 Delete domain security policies 中输入项目的域名，并 Delete 删除<br>可以在 Query domain 测试是否删除成功</p></blockquote><p>这里如果还是不行， 请清除浏览器缓存！</p>]]></content>
    
    <summary type="html">
    
      将Hexo部署或迁移到Github或Coding
    
    </summary>
    
      <category term="Hexo" scheme="http://silencejql.coding.me/categories/Hexo/"/>
    
    
      <category term="Coding" scheme="http://silencejql.coding.me/tags/Coding/"/>
    
      <category term="github" scheme="http://silencejql.coding.me/tags/github/"/>
    
  </entry>
  
</feed>
